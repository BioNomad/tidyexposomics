[{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to tidyexposomics","text":"","code":"# install the current development version devtools::install_github(\"BioNomad/tidyexposomics\")"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"command-structure","dir":"Articles","previous_headings":"","what":"Command Structure","title":"Introduction to tidyexposomics","text":"make package user-friendly, named functions intuitive. example, use following naming conventions:  provide functionality either add results existing object storing omics/exposure data return direct results using get option using action argument. suggest adding results, also include run_pipeline_summary() function generate diagram workflow. useful keeping track pipeline steps.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-meta-data-and-ontology-annotation","dir":"Articles","previous_headings":"","what":"Exposure Meta data and Ontology Annotation","title":"Introduction to tidyexposomics","text":"starting exposomics data analysis recommend codebook exposure variables. suggestions: Variable Name: name variable data set. Variable Description: concise description variable measures, including units (e.g., “urinary bisphenol (ng/mL)”) Variable Type: type variable, continuous, categorical, binary. Variable Period: period time variable measured, “lifetime”, “year”, “month”, “day”. Variable Location: location variable measured, “home”, “work”, “school”. Variable Ontology: ontology term associated variable. Now ontology important recommend: - Environment Exposure Ontology annotate exposure variables. - Human Phenotype Ontology annotate outcome variables phenotypic data. - Chemical Entities Biological Interest annotate chemical exposure variables. Now bother ? Interpretability: Ontology labels clarify ambiguous inconsistently named variables. Harmonization: can compare combine variables across datasets map term. Grouping: Ontologies allow collapse fine-grained exposures broader categories. Integration: Many public tools, knowledge graphs, repositories (e.g., EBI OLS, GO, ChEBI) ontology-aware. can make results interoperable reusable. help annotate exposure variables, provide lightweight shiny app help decide ontology terms use annotate variable: Now: Click “Browse” select exposure metadata file. can click variable ’d like link annotation term search “Choose Ontology Term” dropdown. select term see short description term. done click “Apply Annotate” save annotation. Now can group exposures larger categories selecting line ontology, root depth level (lower number means general term). can click “Apply Categorization” apply changes selected rows. ontology nothing variable, may manually enter category “Category” column. change “Category Source” “manual” linked ontology. annotated variables click “Download Annotated CSV” save annotated metadata file.","code":"# Launch the shiny app to annotate exposure variables ont_annot_app()"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Introduction to tidyexposomics","text":"get started need load data. create_expomicset function used create MultiAssayExperiment object contains exposure omics data. quick introduction, MultiAssayExperiment object container storing multiple assays (e.g., omics data) associated metadata: Overview MultiAssayExperiment Object Structure. Subject level data captured within colData MultiAssayExperiment. Observations stored within experiments slots MultiAssayExperiment sampleMap used link data ( MultiAssay Special Interest Group 2024 ). use MultiAssayExperiment object store exposure omics data. create_expomicset function several arguments: var_info argument data frame contains information variables exposure meta data. column names must contain variable values column names exposure data frame, category contains general categories variable names. data frame created ontology annotation app! exposure argument data frame contains exposure metadata. omics argument list data frames contain omics data. row_data argument list data frames contain information rows omics data frame. going start loading example data pulled ISGlobal Exposome data challenge 2021. Specifically, examine exposures omics features relate asthma status.","code":"# Load Libraries library(tidyverse) library(tidyexposomics)  # Create list of omics data frames omics_list <- list(   \"Gene Expression\" = exp,   \"Metabolomics\" = met,   \"Proteomics\" = prot )  # Create list of omics row data data frames fdata <- list(   \"Gene Expression\" = exp_fdata,   \"Metabolomics\" = met_fdata,   \"Proteomics\" = prot_fdata )  # Create the expomicset object expom <- create_expomicset(   var_info = des,   exposure = meta,   omics = omics_list,   row_data = fdata)  # Define our exposure variables exp_vars <- des |>    filter(grepl(\"exposure|chemical\",category,ignore.case = TRUE)) |>    pull(variable) |>    as.character() Ensuring all omics datasets are matrices with column names... Creating SummarizedExperiment objects with ordered samples and matching rowData... Creating MultiAssayExperiment object... MultiAssayExperiment created successfully with ordered samples and rowData."},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"missingness","dir":"Articles","previous_headings":"Quality Control","what":"Missingness","title":"Introduction to tidyexposomics","text":"Oftentimes collecting data, missing values. filter_missing function used filter variables many missing values. na_thresh argument used set threshold missing values. example, na_thresh = 20, variable 20% missing values removed. set threshold 1% filter variables 1% missing values. can plot number missing values using plot_missing_summary function. function plots number missing values variable exposure data. threshold argument used set threshold missing values.  see exposure data missing values, majority variables less 1% missing values.","code":"# Filter out variables with too many missing values expom <- expom |>    filter_missing(na_thresh = 1) Missing Data Filter threshold: 1% Filtered metadata variables: h_parity Filtered rows with high missingness in Gene Expression: 0 Filtered rows with high missingness in Metabolomics: 0 Filtered rows with high missingness in Proteomics: 0 # Check the number of missing values expom |>    plot_missing_summary(threshold = 1)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"imputation","dir":"Articles","previous_headings":"Quality Control","what":"Imputation","title":"Introduction to tidyexposomics","text":"Now filtered variables many missing values, can impute missing values. run_impute_missing function used impute missing values. impute using median speed, recommend trying imputation options: mean: Imputes missing values mean variable. knn: Uses k-nearest neighbors impute missing values. mice: Uses Multivariate Imputation Chained Equations (MICE) method impute missing values. dep: Uses DEP method impute missing values. missforest: Uses MissForest method impute missing values. lod_sqrt2: Imputes missing values using square root lower limit detection (LOD) variable. useful variables lower limit detection, chemical exposures.","code":"# Impute missing values expom <- expom |>    run_impute_missing(     exposure_impute_method = \"median\",     omics_impute_method = \"median\") Imputing exposure data using method: median Imputing omics dataset: Gene Expression using method: median Imputing omics dataset: Metabolomics using method: median Imputing omics dataset: Proteomics using method: median"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pca-analysis","dir":"Articles","previous_headings":"Quality Control","what":"PCA Analysis","title":"Introduction to tidyexposomics","text":"identify spread data, can perform principal component analysis (PCA). run_pca function used perform PCA samples observations omics data frame. plot_pca function used plot PCA results. automatically identify sample outliers based Mahalanobis distance, measure distance point distribution.  see sample outliers, variation captured first two principal components features samples. can filter samples using filter_sample_outliers function.","code":"# Perform principal component analysis expom <- expom |>      run_pca(action = \"add\") Identifying common samples... Subsetting exposure data... Subsetting omics data... Performing PCA on Feature Space... Performing PCA on Sample Space... [1] \"Outliers detected: s936, s764, s588, s857, s378, s411, s918\" # Plot principal component analysis results expom |>    plot_pca() # Filter out sample outliers expom <- expom |>    filter_sample_outliers(     outliers = c(\"s411\",\"s378\", \"s588\",                  \"s764\", \"s857\", \"s918\",                  \"s936\"))"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"normality-check","dir":"Articles","previous_headings":"Quality Control","what":"Normality Check","title":"Introduction to tidyexposomics","text":"determining variable associations, important check normality data. run_check_normality function used check normality data. transform_exposure function used transform data make normal. transform_method set boxcox_best automatically select best transformation method based data. transform_method can manually set log2, sqrt, x_1_3 well. check normality data, can use plot_normality_summary function. function plots normality data transformation. transformed argument set TRUE plot transformed data.","code":"# Check variable normality & transform variables expom <- expom |>    # Check variable normality   run_normality_check(action = \"add\") |>       # Transform variables    transform_exposure(transform_method = \"boxcox_best\",                      exposure_cols = exp_vars) Checking Normality Using Shapiro-Wilk Test 0 Exposure Variables are Normally Distributed 37 Exposure Variables are NOT Normally Distributed Applying the boxcox_best transformation. expom |>   plot_normality_summary(     transformed = TRUE   )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-summary","dir":"Articles","previous_headings":"Quality Control","what":"Exposure Summary","title":"Introduction to tidyexposomics","text":"can summarize exposure data using run_summarize_exposures function. function calculates summary statistics exposure variable, including number values, number missing values, minimum, maximum, range, sum, median, mean, standard error, confidence intervals. action argument set get return summary statistics data frame. action = \"add\", results added metadata MultiAssayExperiment object.","code":"# Summarize exposure data expom |>    run_summarize_exposures(action = \"get\") |>    head() ## # A tibble: 6 × 17m ##   variable    n_values  n_na   min   max range   sum median  mean    se ci_lower ##   <chr>          <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl>    <dbl> ## 1 h_PM             269     0  5.24 82.1  76.9  4176.  12.3  15.5   0.67    14.2  ## 2 h_clf_preg       269     0  0.03  6.77  6.73  912.   3.32  3.39  0.14     3.12 ## 3 h_no2_rati…      269     0  2.11  4.14  2.04  835.   3.12  3.1   0.03     3.0505 ## 4 h_pm10_rat…      269     0  3.34  6.91  3.57 1351.   4.94  5.02  0.05     4.9393 ## 5 h_pm25_rat…      269     0  3.06  4.57  1.5  1039.   3.83  3.86  0.02     3.8383 ## 6 h_walkabil…      269     0  0.39  0.74  0.35  143.   0.52  0.53  0        0.5353 ## # ℹ 6 more variables: ci_upper <dbl>, variance <dbl>, sd <dbl>, coef_var <dbl>,9m ## #   category <fct>, sub_category <fct>"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-visualization","dir":"Articles","previous_headings":"Quality Control","what":"Exposure Visualization","title":"Introduction to tidyexposomics","text":"visualize exposure data, can use plot_exposures function. function allows us plot exposure data variety ways. plot exposure data using boxplot. exposure_cols argument used set columns plot. Additionally, specify, exposure_cat plot exposures certain category. panel_sizes argument used set size panel plot. plot_type argument used set type plot create. use boxplot, also use ridge plot. ylab argument used set y-axis label.","code":"# Plot exposure data expom |>    plot_exposures(     panel_sizes = c(3,4),     exposure_cols = exp_vars,     plot_type = \"boxplot\",     ylab = \"Values\")"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"sample-clustering","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Sample Clustering","title":"Introduction to tidyexposomics","text":"run_cluster_samples function used cluster samples based exposure data. clustering_approach argument used set clustering approach automatically identify clusters. use dynamic approach, uses dynamic tree cut method identify clusters. However, may choose options well: gap: Gap statistic method (default); estimates optimal k comparing within-cluster dispersion reference data. diana: Divisive hierarchical clustering (DIANA); chooses k based largest drop dendrogram height. elbow: Elbow method; detects point maximum curvature within-cluster sum squares (WSS) determine k. dynamic: Dynamic tree cut; adaptively detects clusters dendrogram structure without needing predefine k. density: Density-based clustering (via densityClust); identifies clusters based local density peaks distance space.  see seven clusters, largely driven particulate matter chemical exposure.","code":"# Sample clustering expom <- expom |>    run_cluster_samples(exposure_cols = exp_vars,                   clustering_approach = \"dynamic\",                   action = \"add\") Starting clustering analysis...  ..cutHeight not given, setting it to 8730  ===>  99% of the (truncated) height range in dendro.  ..done. Optimal number of clusters for samples: 6 # Plot sample clusters expom |>    plot_sample_clusters(     exposure_cols = exp_vars)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-correlations","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Exposure Correlations","title":"Introduction to tidyexposomics","text":"correlate_exposures function used correlate exposures . exposure_cols argument used set columns correlate. correlation_cutoff argument used set minimum correlation score association. use cutoff 0.3, can adjusted based data. visualize exposure correlations, can use plot_circos_correlation plot_heatmap_correlate_exposure functions. plot circos plot. function creates circular plot exposure correlations. correlation_cutoff argument used set minimum correlation score association. use cutoff 0.3, can adjusted based data.","code":"expom <- expom |>    run_correlation(feature_type = \"exposures\",                   action = \"add\",                   correlation_cutoff = 0.3) expom |>    plot_circos_correlation(feature_type = \"exposures\",                           corr_threshold = 0.3,                           exposure_cols = exp_vars)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exwas-association","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"ExWAS Association","title":"Introduction to tidyexposomics","text":"perform_exwas function used perform ExWAS analysis. source argument used set source data. use exposures indicate using exposure data. outcome argument used set outcome variable. feature_set argument used set features include analysis. covariates argument used set covariates include analysis. family argument used set family model. use binomial binary outcome. visualize results ExWAS analysis, can use plot_associate_exposure_outcome function. function plots association results exposure data. source argument used set source data. use exposures indicate using exposure data. subtitle argument used set subtitle plot. filter_thresh argument used set p-value threshold significance.  see particulate matter, PBDE, disinfection byproduct levels associated asthma status adjusting age sex. can also associate omics features outcome interest using run_association() function. can visualize results using Manhattan plot. plot_manhattan function used plot results. pval_thresh argument used set p-value threshold significance. vars_to_label argument used set variables label plot. min_per_cat argument used set minimum number significant features per category include plot. panel_sizes argument used set size panel plot.","code":"# Perform ExWAS Analysis expom <- expom |>    run_association(     source = \"exposures\",     outcome = \"hs_asthma\",     feature_set = exp_vars[       !exp_vars %in% c(\"hs_asthma\",                        \"hs_child_age\",                        \"e3_sex\")],     covariates = c(\"hs_child_age\",                        \"e3_sex\"),     action = \"add\",     family = \"binomial\") Running GLMs... expom |>    plot_association(     subtitle = paste(\"Covariates:\",\"Age,\",\"Sex\"),     source = \"exposures\",     filter_thresh = 0.05) # Perform ExWAS Analysis expom  <- expom |>      run_association(         outcome = \"hs_asthma\",         source = \"omics\",         covariates = c(\"hs_child_age\",                        \"e3_sex\"),         top_n = 500,         action = \"add\",         family = \"binomial\") Log2-Transforming each assay in MultiAssayExperiment... Scaling each assay in MultiAssayExperiment... Running GLMs... expom |>    plot_manhattan(     min_per_cat = 0,     vars_to_label = c(\"TC17001579.hg.1\",\"TC02003949.hg.1\",\"HMGN2P28\"),     panel_sizes = c(1,4,2,1,3))"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposome-scores","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Exposome Scores","title":"Introduction to tidyexposomics","text":"can also calculate exposome scores, summary measure exposure. run_exposome_score function used calculate exposome score. exposure_cols argument used set columns use exposome score. score_type argument used set type score calculate. use: median: Calculates median exposure variables. mean: Calculates mean exposure variables. sum: Calculates sum exposure variables. pca: Calculates first principal component exposure variables. irt: Uses Item Response Theory calculate exposome score. quantile: Calculates quantile exposure variables. score_column_name argument used set name column store exposome score . can associate exposome scores outcome interest using run_association function, just like . However, time specify feature_set exposome scores just calculated. plot results exposome score association outcome, can use plot_association function:  see scores associated decreased probability asthma.","code":"# Calculate Exposome Scores expom <- expom |>    run_exposome_score(exposure_cols = exp_vars,                      score_type = \"median\",                      score_column_name = \"exposome_median_score\") |>    run_exposome_score(exposure_cols = exp_vars,                      score_type = \"pca\",                      score_column_name = \"exposome_pca_score\") |>    run_exposome_score(exposure_cols = exp_vars,                      score_type = \"irt\",                      score_column_name = \"exposome_irt_score\") |>    run_exposome_score(exposure_cols = exp_vars,                      score_type = \"quantile\",                      score_column_name = \"exposome_quantile_score\") |>    run_exposome_score(exposure_cols = exp_vars,                      score_type = \"var\",                      score_column_name = \"exposome_var_score\") Extracting exposure data... Extracting exposure data... Extracting exposure data... Extracting exposure data... Extracting exposure data... Calculating median exposure scores... Calculating PCA exposure scores... Calculating IRT exposure scores... Iteration: 52, Log-Lik: -21076.825, Max-Change: 0.00010 Calculating quantile exposure scores... Calculating variance exposure scores... # Associate Exposome Scores with Outcome expom <- expom |>    run_association(     outcome = \"hs_asthma\",     source = \"exposures\",     feature_set = c(\"exposome_median_score\",                   \"exposome_pca_score\",                   \"exposome_irt_score\",                   \"exposome_quantile_score\",                   \"exposome_var_score\"),     covariates = c(\"hs_child_age\",                        \"e3_sex\"),     action = \"add\",     family = \"binomial\") Running GLMs... expom |>    plot_association(     subtitle = paste(\"Covariates:\",\"Age,\",\"Sex\"),     source = \"exposures\",     terms = c(\"exposome_median_score\",                         \"exposome_pca_score\",                         \"exposome_irt_score\",                         \"exposome_quantile_score\",                         \"exposome_var_score\"),     filter_thresh = 1)"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"differential-abundance-1","dir":"Articles","previous_headings":"Differential Abundance","what":"Differential Abundance","title":"Introduction to tidyexposomics","text":"also provide functionality assess differentially abundant features associated particular outcome across several omics’ layers. run_differential_abundance function used run differential abundance analysis. formula argument used set formula model. method argument used set method use differential abundance analysis. use limma_voom method, popular method differential abundance analysis. minimum_counts minimum_proportion arguments used filter features low counts low proportions. scaling_method argument used set scaling method use. use none, also use quantile TMM. action argument set add add results existing object. Using volcano plot, can visualize results differential abundance analysis. plot_volcano function used plot results. pval_thresh argument used set p-value threshold significance. logFC_thresh argument used set log fold change threshold significance. top_n_label argument used set number top features label plot. nrow argument used set number rows facet layout.","code":"# Run differential abundance analysis expom <- expom |>    run_differential_abundance(     formula = ~ hs_asthma + hs_child_age + e3_sex,     method = \"limma_voom\",     minimum_counts = 1,     minimum_proportion = 0.1,     scaling_method = \"none\",     action = \"add\") Running differential abundance testing... Processing assay: Gene Expression No group or design set. Assuming all samples belong to one group. ... Differential abundance testing completed. # Plot Differential Abundance Results expom |>    plot_volcano(     top_n_label = 3,     logFC_thresh = log2(1),     pval_thresh = 0.05,     nrow = 1)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"sensitivity-analysis","dir":"Articles","previous_headings":"Differential Abundance","what":"Sensitivity Analysis","title":"Introduction to tidyexposomics","text":"Depending pre-processing steps, results differential abundance analysis may vary. sensitivity_analysis function used perform sensitivity analysis determine robustness results. determine feature still differentially abundant different minimum values, proportions, scaling methods used, inclusion covariates, bootstrapping. define stability score based number times feature found differentially abundant different conditions well consistency effect size: \\[ Stability\\ Score = \\frac{\\sum_i{(p_i < \\alpha)}}{N} * \\frac{1}{1 + \\frac{\\sigma_{\\beta}}{\\mu_{|\\beta|}}}\\] : \\(p_i\\) p-value \\(^{th}\\) test \\(\\alpha\\) significance threshold \\(N\\) number tests \\(\\sigma_{\\beta}\\) standard deviation effect size estimates \\(\\mu_{|\\beta|}\\) mean absolute value effect size estimates. first term captures proportion tests significant, second term captures consistency effect size estimates. stability score ranges 0 1. stability score 1 indicates feature always found differentially abundant, stability score 0 indicates feature never found differentially abundant. Besides , provide score metrics well: presence_rate: Proportion runs feature’s p-value specified threshold (selection frequency). effect_consistency: Inverse coefficient variation log fold-changes; measures effect size stability across runs. stability_score: Hybrid score combining presence_rate effect_consistency, capturing reproducibility signal strength. mean_log_p: Average negative log-transformed p-values; represents overall statistical signal strength. logp_weighted_score: Product mean_log_p effect_consistency; highlights consistently strong features. sd_logFC: Standard deviation log fold-change estimates; quantifies variability effect sizes. iqr_logFC: Interquartile range log fold-changes; provides robust measure effect size spread. cv_logFC: Coefficient variation log fold-changes; reflects relative variability effect size. sign_flip_freq: Proportion runs sign effect size differs overall average direction. sd_log_p: Standard deviation log-transformed p-values; indicates variability statistical signal. plot sensitivity analysis results using plot_sensitivity_summary function. stability_score_thresh argument used set stability score threshold significance. use threshold 0.25, can adjusted based data. set threshold quite liberal based given highly subsampled data.","code":"# Perform Sensitivity Analysis expom <- expom |>    run_sensitivity_analysis(     base_formula = ~ hs_asthma + hs_child_age + e3_sex,      methods = c(\"limma_voom\"),     scaling_methods = c(\"none\"),     min_counts_range = c(1,5),     min_proportion_range = c(0.1,0.3),     covariates_to_remove = c(\"hs_child_age\" , \"e3_sex\"),     pval_col = \"adj.P.Val\",     logfc_col = \"logFC\",     pval_threshold = 0.05,     stability_metric = \"stability_score\",     bootstrap_n = 10,     action = \"add\") Running differential abundance testing... Processing assay: Gene Expression ... Feature stability analysis completed. Number of features above threshold of 0: ----------------------------------------- Proteomics: 50/3126 Gene Expression: 996/28738 Metabolomics: 0/177 Sensitivity analysis completed. # Plot sensitivity analysis results expom |>    plot_sensitivity_summary(stability_score_thresh = 0.25,                            stability_metric = \"stability_score\")"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"multi-omics-integration-1","dir":"Articles","previous_headings":"Multi-Omics Integration","what":"Multi-Omics Integration","title":"Introduction to tidyexposomics","text":"differential abundance analysis per omic can deliver insights omic associated particular outcome, may want leverage methods integrate multiple omics layers. run_multiomics_integration function used integrate multiple omics layers. use either MCIA, MCCA MOFA method integrate omics layers: MCIA: Multiple Co-inertia Analysis, method uses canonical correlation analysis integrate multiple omics layers. use nipalsMCIA algorithm compute co-inertia scores nipalsMCIA package. MCCA: Multi-Omics Canonical Correlation Analysis, method uses canonical correlation analysis integrate multiple omics layers. use PMA package compute canonical correlation score. MOFA: Multi-Omics Factor Analysis, method uses factor analysis integrate multiple omics layers. MOFA implemented using MOFA2 package. can use plot_factor_summary() visualize omics contribute factors.","code":"# Perform Multi-Omics Integration expom <- expom |>    run_multiomics_integration(method = \"MCIA\",                              action = \"add\") Scaling each assay in MultiAssayExperiment... Running multi-omics integration using MCIA... Applying MCIA with NIPALS... Performing column-level pre-processing... Column pre-processing completed. Performing block-level preprocessing... Block pre-processing completed. Computing order 1 scores Computing order 2 scores Computing order 3 scores Computing order 4 scores Computing order 5 scores Computing order 6 scores Computing order 7 scores Computing order 8 scores Computing order 9 scores Computing order 10 scores # Plot multi-omics factor summary expom |>    plot_factor_summary()"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"factor-analysis","dir":"Articles","previous_headings":"Multi-Omics Integration","what":"Factor Analysis","title":"Introduction to tidyexposomics","text":"methods designed identify factors can associate outcome variable. use associate_factor_outcome function identify factors associated asthma status controlling child age sex. Additionally, set p-value threshold, pval_thresh, 1 include factors. action argument set add add results existing object. print results console, can set FALSE suppress output. see first, sixth ninth factor associated asthma status p-value 0.2. Factors loading scores indicate strength association factor features. can extract top features, 90th percentile, per omic, associated factors interest. can visualize top features associated factor using plot_top_factor_features function. top_n argument used set number top features plot. factors argument used set factors plot.  Immediately, can see factors share common features, CTSW gene. can also see factors associated different omics layers. identify common features across factors, can use run_factor_overlap function. function identify features shared across specified factors. Let’s visualize features overlap across factors. plot_factor_overlap function used plot overlap features across factors.  see 817 features shared across factors. However, subset, ~ 200 features, differentially abundant.","code":"# Identify factors that correlate with the outcome expom <- expom |>    run_association(     source = \"factors\",     outcome = \"hs_asthma\",     feature_set = exp_vars[       !exp_vars %in% c(\"hs_asthma\",                        \"hs_child_age\",                        \"e3_sex\")],     covariates = c(\"hs_child_age\",                        \"e3_sex\"),     action = \"add\",     family = \"binomial\",     print = TRUE) term    p.value  <chr>   <dbl> V1  0.17083208           V2  0.79768883           V3  0.97476037           V4  0.59766388           V5  0.22535931           V6  0.05436188           V7  0.59501506           V8  0.83149295           V9  0.14050018           V10 0.47106052 # Extract top features that contribute to a factor expom <- expom |>    extract_top_factor_features(factors = c(\"V1\", \"V6\", \"V9\"),                                method = \"percentile\",                               percentile = 0.9,                               action = \"add\") Extracting top contributing features for specified factors... Using MCIA block loadings... Selected 9612 features contributing to specified factors. # Plot top factor features expom |>    plot_top_factor_features(     top_n = 15,     factors = c(\"V1\", \"V6\", \"V9\")) expom <- expom |>    run_factor_overlap(stability_score = 0.25,                      robust_comparison = T,                      score_col = \"stability_score\",                      pval_thresh = 0.05,                      pval_col = \"p.value\",                      logfc_thresh = log2(1.1)) Found 817 common features across factors. expom |>    plot_factor_overlap()"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-omics-association-1","dir":"Articles","previous_headings":"Exposure-Omics Association","what":"Exposure-Omics Association","title":"Introduction to tidyexposomics","text":"Now option correlate either top factor features, differentially abundant features, user specified omics features (using variable map, data frame two columns, exp_name name omics assay, feature name molecular feature) exposures. correlate differentially abundant features exposures. Setting robust TRUE use features stability score score_thresh. can also set thresholds differential expression log fold change p-value filter results. correlation_cutoff used set minimum correlation score, pval_cutoff used set maximum p-value association. can plot results exposure-omics association analysis using plot_bar_correlate_summary function. set mode summary, plot number associations per exposure feature type. feature_type argument used set type features plot. use degs, differentially abundant features. exposure_cols argument used set columns plot.  note transcriptomic features greater number associations exposures. Among exposures, see outdoor exposures greatest number associations features. may also useful identify exposures correlated similar molecular features. can plot_circos_exposure_shared_features function. function plot circos plot exposures shared features. geneset argument used set geneset use analysis. use degs geneset, plots differentially abundant feature - exposure correlation information. cutoff argument used set minimum number shared features plot. set cutoff 0, means shared features plotted.","code":"# Correlate top differentially abundant features with exposures expom <- expom |>    run_correlation(feature_type = \"degs\",                   exposure_cols = exp_vars,                   action = \"add\",                   correlation_cutoff = 0.01,                   deg_logfc_col = \"logFC\",                   deg_logfc_thresh = log2(1),                   pval_cutoff = 0.1,                   robust = T,                   score_col = \"stability_score\",                   score_thresh = 0.25) Performing correlation analysis on summarized experiment... Running Spearman correlation analysis... Correlation analysis completed. Processing experiment: Proteomics   - Processing batch 1 of 1 (48 features)... Performing correlation analysis on summarized experiment... Running Spearman correlation analysis... Correlation analysis completed. expom |>    plot_correlation_summary(mode = \"summary\") # Plot Shared Feature Correlations Between Exposures expom |>    plot_circos_correlation(feature_type = \"degs\",                           shared_cutoff = 10,                           midpoint = 200)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"network-analysis","dir":"Articles","previous_headings":"Exposure-Omics Association","what":"Network Analysis","title":"Introduction to tidyexposomics","text":"run_create_network function used create network exposures omics features. correlation results used create network. feature_type argument used set type features use network. use degs, differentially abundant features. However choose anyo f following: degs: Differentially abundant features correlated exposures. factors: Factor features correlated exposures. omics: User specified omics features correlated exposures. plot network can use plot_network function. network argument used set type network plot. top_n_nodes argument used set number nodes plot. node_color_var argument used set variable color nodes . label argument used set whether label nodes. can label top n nodes, default 5 nodes based centrality. Addtionally, can chose label certain nodes using nodes_to_label arguement. facet_var argument used set variable facet plot . foreground argument used set color facets. can also include network statistics using include_stats argument.  note network highly connected, chemical exposures particulate matter exposures connections omics features. noted networks look different based type correlation analysis perform: degs: Correlation differentially abundant features exposures. Meaning connections exposures omics missing. factors: Correlation factors exposures. Meaning connections factor features exposures missing. omics: Correlation omics features exposures. connections omics features.","code":"expom <- expom |>    run_create_network(     feature_type = \"degs\",     action = \"add\") Creating network from correlation results... Network added to metadata as: network_degs expom |>     plot_network(         network = \"degs\",         top_n_nodes = 50,         include_stats = TRUE,         cor_thresh =0.090,          node_color_var = \"group\",         label = T,         label_top_n = 5) Extracting graph... Filtering nodes based on correlation threshold... Filtering top 50 nodes based on centrality..."},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-omics-impact-network-analysis","dir":"Articles","previous_headings":"Exposure-Omics Association","what":"Exposure-Omics Impact Network Analysis","title":"Introduction to tidyexposomics","text":"examining outcome variable, number omics features associated variable different coexpression relationships . Features high coexpression higher degree therefore may important network. run_exposure_impact function used run exposure-omics impact analysis. calculate degree features associated exposures. can see particular exposure associated higher degree features. stability_threshold argument used set stability threshold features. use threshold 0.25, means features stability score 0.25 included analysis. plot results exposure-omics impact analysis, can use plot_exposure_impact function. set feature_type degs, means plotting degree differentially abundant features correlated exposures. min_per_group argument used set minimum number features per group plot. useful filtering exposures enough associated features. ncol argument used set number columns plot, widths argument used set widths columns plot.  see BPA (hs_bpa_madj) methyl paraben (hs_mepa_madj) exposure, associated many differentially abundant features Monoisobutyl phthalate (hs_mibp_cadj), features exposures associated degree, suggesting may still important exposure consider context asthma. Additionally, note half features associated asthma associated exposures profiled, remaining associated exposures. suggests may missing exposures profile features environmentally responsive.","code":"# Run exposure-omics impact analaysis expom <- expom |>    run_exposure_impact(feature_type = \"degs\",                       stability_threshold = 0.25,                       robust = T) # Plot exposure-omics impact results expom |>    plot_exposure_impact(     feature_type = \"degs\",     min_per_group = 10,     ncol = 2,     widths = c(3,1))"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"enrichment-analysis","dir":"Articles","previous_headings":"","what":"Enrichment Analysis","title":"Introduction to tidyexposomics","text":"benefit grouping exposures categories can perform enrichment analysis associated features determine broad categories exposures associated features. run_enrichment function used perform enrichment analysis. use deg_exp_cor geneset perform enrichment differentially abundant features correlated exposures. However, enrich following gene sets: deg: Differentially abundant features. deg_exp_cor: Differentially abundant features correlated exposures. factor_exp_cor: Top factor features correlated exposures. factor: Top actor features.","code":"# Perform Functional Enrichment Analysis expom <- expom |>    run_enrichment(     geneset = \"deg_exp_cor\",     feature_col = \"gene\",     clustering_approach = \"dynamic\",     pval_threshold = 0.05,     pval_col = \"p.value\",     pvalueCutoff = 0.1,     pAdjustMethod = \"none\",     qvalueCutoff = 1,     logfc_threshold = log2(1),     action=\"add\") Working on: Gene Expression Working on: Proteomics Determining Number of GO Term Clusters...  ..cutHeight not given, setting it to 485  ===>  99% of the (truncated) height range in dendro.  ..done. Optimal number of clusters for samples: 11"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"plot-enrichment-results","dir":"Articles","previous_headings":"Enrichment Analysis","what":"Plot Enrichment Results","title":"Introduction to tidyexposomics","text":"visualize enrichment results, can use plot_dotplot_enrichment function. geneset argument used set geneset plot. top_n argument used set number top enrichment terms plot. n_per_group argument used set number enrichment terms per group plot. add_top_genes argument used add top genes associated enrichment term. top_n_genes argument used set number top genes plot.  ’ll notice enrichment terms organized groups omic layer, exposure category features associated , Jaccard similarity GO term genesets. provide top 5 groups enrichment terms based prioritization score calculated : \\[ Prioritization\\ Score = \\frac{1}{N} * \\sum_{=1}^{N} -log_{10}(p_i) * n_{genes} \\] : - \\(N\\) number enrichment terms group - \\(p_i\\) p-value \\(^{th}\\) enrichment term group - \\(n_{genes}\\) number genes enrichment term essentially, mean negative Log10 p-value multiplied number genes term. see outdoor exposures chemicals broadly associated top enrichment term groups.","code":"# Plot functional enrichment results expom |>      plot_dotplot_enrichment(geneset = \"deg_exp_cor\",                             top_n = 5,                             n_per_group = 5,                             add_top_genes = TRUE,                             top_n_genes = 5)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposures-driving-enrichment","dir":"Articles","previous_headings":"Enrichment Analysis","what":"Exposures Driving Enrichment","title":"Introduction to tidyexposomics","text":"can also visualize exposures driving enrichment terms using plot_go_group_exposures function. go_groups argument used set GO groups plot. feature_col argument used set column containing features plot. specify feature_col gene expression assay rownames probe IDs gene names. highlights importance specifying correct feature column plotting enrichment results. plot exposures driving enrichment terms specific GO group, “Group_1”.  note similar exposures associated proteomics gene expression features drive enrichment terms group.","code":"expom |>    plot_go_group_exposures(     go_groups = c(\"Group_1\"),     feature_col = \"gene\"   )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"custom-analysis","dir":"Articles","previous_headings":"","what":"Custom Analysis","title":"Introduction to tidyexposomics","text":"Now analyses, summary statistics, plots like create ? provide functionality access underlying data MultiAssayExperiment object construct tibbles analysis: pivot_sample: Pivot sample data tibble samples rows exposures columns. pivot_feature: Pivot feature meta data tibble features rows feature meta data columns. pivot_exp: Pivot sample experiment assay data tibble samples rows sample meta data columns. Additionally, column values specified features specified assays.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pivot-sample","dir":"Articles","previous_headings":"Custom Analysis","what":"Pivot Sample","title":"Introduction to tidyexposomics","text":"Let’s check pivot_sample function. function pivots sample data tibble samples rows exposures columns. use functionality count number asthmatics per sex:","code":"# Pivot sample data to a tibble expom |>    pivot_sample() |>    head() ## # A tibble: 6 × 269m ##   .sample  h_PM hs_greenyn300_h h_greenyn300_preg hs_participation_3cat   ##   <chr>   <dbl> <fct>           <fct>             <fct>                   ## 1 s548    13.9  1               1                 None                    ## 2 s555     7.48 1               1                 None                    ## 3 s368    12.7  0               0                 1 organisation          ## 4 s175     8.85 1               1                 None                    ## 5 s241    14.7  1               1                 None                    ## 6 s600    11.0  1               1                 2 or more organisations ## # ℹ 264 more variables: hs_smk_parents <fct>, hs_asthma <ord>,9m ## #   hs_child_age <dbl>, e3_sex <fct>, PC1 <dbl>, PC2 <dbl>, PC3 <dbl>, ## #   PC4 <dbl>, PC5 <dbl>, PC6 <dbl>, PC7 <dbl>, PC8 <dbl>, PC9 <dbl>, ## #   PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, PC13 <dbl>, PC14 <dbl>, PC15 <dbl>, ## #   PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, PC19 <dbl>, PC20 <dbl>, PC21 <dbl>, ## #   PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, PC25 <dbl>, PC26 <dbl>, PC27 <dbl>, ## #   PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, PC31 <dbl>, PC32 <dbl>, PC33 <dbl>, …9m expom |>    pivot_sample() |>    group_by(hs_asthma,e3_sex) |>    summarise(n = n()) ## # A tibble: 4 × 3m ## # Groups:   hs_asthma [2] ##   hs_asthma     e3_sex     n ##   <ord>         <fct>  <int> ## 1 non_asthmatic female   125 ## 2 non_asthmatic male     115 ## 3 asthma        female    10 ## 4 asthma        male      19"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pivot-feature","dir":"Articles","previous_headings":"Custom Analysis","what":"Pivot Feature","title":"Introduction to tidyexposomics","text":"pivot_feature function pivots feature meta data tibble features rows feature meta data columns. can useful exploring feature metadata flexible way. use functionality count number features per omic layer, filter features based metadata. example, can count number features per omic layer:","code":"# Pivot feature data to a tibble expom |>    pivot_feature() |>    head() ## # A tibble: 6 × 30m ##   .exp_name     .feature transcript_cluster_id probeset_id seqname strand  start ##   <chr>         <chr>    <chr>                 <chr>       <chr>   <chr>   <int> ## 1 Gene Express… TC01000… TC01000001.hg.1       TC01000001… chr1    +       1186924m869 ## 2 Gene Express… TC01000… TC01000002.hg.1       TC01000002… chr1    +       2955424m554 ## 3 Gene Express… TC01000… TC01000003.hg.1       TC01000003… chr1    +       6909124m091 ## 4 Gene Express… TC01000… TC01000005.hg.1       TC01000005… chr1    +      31781124m811 ## 5 Gene Express… TC01000… TC01000007.hg.1       TC01000007… chr1    +      32114624m146 ## 6 Gene Express… TC01000… TC01000009.hg.1       TC01000009… chr1    +      36764024m640 ## # ℹ 23 more variables: stop <int>, total_probes <int>, gene_assignment <chr>,9m ## #   mrna_assignment <chr>, notes <chr>, phase <chr>, TC_size <dbl>, ## #   TSS_Affy <int>, EntrezeGeneID_Affy <chr>, GeneSymbol_Affy <chr>, ## #   GeneSymbolDB <chr>, GeneSymbolDB2 <chr>, mrna_ID <chr>, mrna_DB <chr>, ## #   mrna_N <int>, notesYN <chr>, geneYN <chr>, genes_N <dbl>, CallRate <dbl>, ## #   fil1 <chr>, gene <chr>, Class <chr>, Class_2 <chr> # Count the number of features per omic layer expom |>      pivot_feature() |>      group_by(.exp_name) |>      summarise(n = n()) ## # A tibble: 3 × 2m ##   .exp_name           n ##   <chr>           <int> ## 1 Gene Expression 28738 ## 2 Metabolomics      177 ## 3 Proteomics       3126"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pivot-experiment","dir":"Articles","previous_headings":"Custom Analysis","what":"Pivot Experiment","title":"Introduction to tidyexposomics","text":"can use functionality create custom plots analyses based exposure feature data. example, can plot abundance TAF7 asthma status:","code":"# Pivot experiment data to a tibble expom |>    pivot_exp(omics_name = \"Proteomics\",             features = \"TAF7\") |>    head() ## # A tibble: 6 × 273m ##   exp_name   .feature .sample counts  h_PM hs_greenyn300_h h_greenyn300_preg ##   <chr>      <chr>    <chr>    <dbl> <dbl> <fct>           <fct>             ## 1 Proteomics TAF7     s555      4.85  7.48 1               1                 ## 2 Proteomics TAF7     s368      5.98 12.7  0               0                 ## 3 Proteomics TAF7     s175     10.5   8.85 1               1                 ## 4 Proteomics TAF7     s241      5.73 14.7  1               1                 ## 5 Proteomics TAF7     s609      2.59 14.3  0               0                 ## 6 Proteomics TAF7     s257      4.26 35.4  1               0                 ## # ℹ 266 more variables: hs_participation_3cat <fct>, hs_smk_parents <fct>,9m ## #   hs_asthma <ord>, hs_child_age <dbl>, e3_sex <fct>, PC1 <dbl>, PC2 <dbl>, ## #   PC3 <dbl>, PC4 <dbl>, PC5 <dbl>, PC6 <dbl>, PC7 <dbl>, PC8 <dbl>, ## #   PC9 <dbl>, PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, PC13 <dbl>, PC14 <dbl>, ## #   PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, PC19 <dbl>, PC20 <dbl>, ## #   PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, PC25 <dbl>, PC26 <dbl>, ## #   PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, PC31 <dbl>, PC32 <dbl>, …9m # Plot the distribution of a specific feature across samples expom |>    pivot_exp(omics_name = \"Proteomics\",             features = \"TAF7\") |>    ggplot(aes(x = hs_asthma,               y = log2(counts),              color = hs_asthma,              fill = hs_asthma)) +   geom_boxplot(alpha=0.5) +   geom_jitter(alpha=0.1) +   ggpubr::geom_pwc(      label = \"{p.adj.format}{p.adj.signif}\"   )+   theme_minimal()+   ggpubr::rotate_x_text(angle = 45)+   scale_color_tidy_exp()+   scale_fill_tidy_exp()+   labs(x = \"\",        y = expression(Log[2]*\"Abd.\"),        fill = \"Asthma Status\",        color = \"Asthma Status\")"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pipeline-overview","dir":"Articles","previous_headings":"","what":"Pipeline Overview","title":"Introduction to tidyexposomics","text":"summarize steps taken analysis, can use run_pipeline_summary function. function provide summary steps taken analysis. can set console_print TRUE print summary console. Setting include_notes TRUE include notes steps taken analysis.","code":"# Run the pipeline summary expom |>    run_pipeline_summary(     console_print = T,     include_notes = T) ## 1. filter_missing — Filtered exposure variables and omics features with more than 1% missing values. QC plots generated for exposure and omics data. ## 2. run_impute_missing —  ## 3. run_pca — Outliers:  s936, s764, s588, s857, s378, s411, s918 ## 4. filter_sample_outliers — Outliers:  s411, s378, s588, s764, s857, s918, s936 ## 5. run_normality_check — Assessed normality of 37 numeric exposure variables. 0 were normally distributed (p > 0.05), 37 were not. ## 6. transform_exposure — Applied 'boxcox_best' transformation to 35 exposure variables. 2 passed normality (Shapiro-Wilk p > 0.05, 5.7%). ## 7. run_cluster_samples — Optimal number of clusters for samples: 6 ## 8. run_correlation — Correlated exposures features with exposures. ## 9. run_association — Performed association analysis using source: exposures ## 10. run_association — Performed association analysis using source: exposures ## 11. run_exposome_score_exposome_median_score — Exposome score computed using method: 'median' ## 12. run_exposome_score_exposome_pca_score — Exposome score computed using method: 'pca' ## 13. run_exposome_score_exposome_irt_score — Exposome score computed using method: 'irt' ## 14. run_exposome_score_exposome_quantile_score — Exposome score computed using method: 'quantile' ## 15. run_exposome_score_exposome_var_score — Exposome score computed using method: 'var' ## 16. run_association — Performed association analysis using source: exposures ## 17. run_differential_abundance — Performed differential abundance analysis across all assays. ## 18. run_sensitivity_analysis_bootstrap — Performed bootstrapped sensitivity analysis ( 3  iterations) using 1 methods and 1 scaling strategies, with feature-level stability scores recorded per run. Covariates removed in model variations: hs_child_age, e3_sex ## 19. run_multiomics_integration — Performed multi-omics integration using MCIA with 10 latent factors. Scaling was enabled. ## 20. run_association — Performed association analysis using source: exposures ## 21. extract_top_factor_features — Selected 9612 features contributing to specified factors. ## 22. run_factor_overlap — Identified shared top features across integration factors and annotated based on 'stability_score' scores. ## 23. run_correlation — Correlated exposures features with exposures. ## 24. run_create_network — Created undirected network from correlation results for feature_type = 'degs'. ## 25. run_exposure_impact — Computed exposure impact using degs correlation network. ## 26. run_enrichment — Performed enrichment on deg_exp_cor features."},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"references","dir":"Articles","previous_headings":"Pipeline Overview","what":"References","title":"Introduction to tidyexposomics","text":"Wild CP. Complementing genome ‘exposome’: outstanding challenge environmental exposure measurement molecular epidemiology. Cancer Epidemiol Biomarkers Prev. 2005;14(8):1847–1850. PubMed Chung MK, Holmes L, Gao X, Ghosh D, Li Y, Lee YJ. Decoding exposome: data science methodologies implications exposome-wide association studies (ExWASs). Exposome. 2024;4(1):osae001. Exposome Maitre L, Guimbaud JB, Warembourg C, Güil-Oumrait N, Petrone PM, Chadeau-Hyam M, Vrijheid M, Basagaña X, Gonzalez JR; Exposome Data Challenge Participant Consortium. State---art methods exposure-health studies: Results exposome data challenge event. Environ Int. 2022;168:107422. doi: 10.1016/j.envint.2022.107422 MultiAssay Special Interest Group. MultiAssayExperiment: Manage Analyze Multi-Omics Experiments. Bioconductor Vignette, 2024. Link","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Laird. Author, maintainer.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Laird J (2025). tidyexposomics: Integrated Exposure-Omics Analysis Powered Tidy Principles. R package version 0.0.0.9000.","code":"@Manual{,   title = {tidyexposomics: Integrated Exposure-Omics Analysis Powered by Tidy Principles},   author = {Jason Laird},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"tidyexposomics package designed facilitate integration exposure omics data identify exposure-omics associations. structure commands fit tidyverse framework, commands designed simplified intuitive. provide functionality perform quality control, sample exposure association analysis, differential abundance analysis, multi-omics integration, functional enrichment analysis.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"can install development version tidyexposomics GitHub :","code":"# Install directly through GitHub devtools::install_github(\"BioNomad/tidyexposomics\")"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"command-structure","dir":"","previous_headings":"","what":"Command Structure","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"make package user-friendly, named functions intuitive. example, use following naming conventions:  provide functionality either add results existing object storing omics/exposure data return direct results using get option using action argument. suggest adding results, also include run_pipeline_summary() function generate diagram workflow. useful keeping track pipeline steps.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"following code great way get started package. includes loading example data, performing basic quality control, running exposure-wide association studies (ExWAS), differential abundance analysis, correlating differentially expressed genes (DEGs) exposures, functional enrichment analysis. However, much tidyexposomics package! check Get Started page detailed walkthrough package’s functionality.","code":"# Install and Load Packages # -------------------------  devtools::install_github(\"BioNomad/tidyexposomics\") library(tidyexposomics) library(tidyverse)   # Load Example Data  omics_list <- list(   \"Gene Expression\" = exp,   \"Metabolomics\" = met,   \"Proteomics\" = prot )  fdata <- list(   \"Gene Expression\" = exp_fdata,   \"Metabolomics\" = met_fdata,   \"Proteomics\" = prot_fdata )  # Create MultiAssayExperiment container expom <- create_expomicset(   var_info = des,   exposure = meta,   omics = omics_list,   row_data = fdata )  # Identify exposure variables exp_vars <- des |>   filter(grepl(\"exposure|chemical\", category, ignore.case = TRUE)) |>   pull(variable) |>   as.character()  # Basic Quality Control # ---------------------  expom <- expom |>   filter_missing(na_thresh = 1) |>   run_impute_missing(     exposure_impute_method = \"median\",     omics_impute_method = \"median\"   ) |>   run_pca(action = \"add\") |>   filter_sample_outliers(outliers = c(\"s411\",\"s378\", \"s588\", \"s764\", \"s857\", \"s918\", \"s936\")) |>   run_normality_check(action = \"add\") |>   transform_exposure(transform_method = \"boxcox_best\", cols_of_interest = exp_vars)  # Exposure-Wide Association (ExWAS)  expom <- expom |>   associate_exposure_outcome(     outcome = \"hs_asthma\",     exposures = exp_vars[!exp_vars %in% c(\"hs_asthma\", \"hs_child_age\", \"e3_sex\")],     covariates = c(\"hs_child_age\", \"e3_sex\"),     family = \"binomial\",     action = \"add\"   )  # Plot significant associations expom |>   plot_associate_exposure_outcome(     subtitle = \"Covariates: Age, Sex\",     result = 1,     filter_thresh = 0.05   )   # Differential Abundance Analysis # -------------------------------  expom <- expom |>   run_differential_abundance(     formula = ~ hs_asthma + hs_child_age + e3_sex,     method = \"limma_voom\",     minimum_counts = 1,     minimum_proportion = 0.1,     scaling_method = \"none\",     action = \"add\"   )  # Plot results as volcano plot expom |>   plot_volcano(     top_n_label = 3,     logFC_thresh = log2(1),     pval_thresh = 0.05,     nrow = 1   )   # Correlate DEGs with Exposures # -----------------------------  expom <- expom |>   correlate_exposures_degs(     exposure_cols = exp_vars,     robust = TRUE,     score_thresh = 0.25,     deg_logfc_thresh = log2(1),     deg_pval_thresh = 0.05,     correlation_cutoff = 0.01,     pval_cutoff = 0.1,     action = \"add\"   )   # Functional Enrichment Analysis # ------------------------------  expom <- expom |>   run_enrichment(     geneset = \"deg_exp_cor\",     feature_col = \"gene\",     clustering_approach = \"dynamic\",     pval_threshold = 0.05,     pvalueCutoff = 0.1,     pAdjustMethod = \"none\",     qvalueCutoff = 1,     logfc_threshold = log2(1),     action = \"add\"   )  # Plot enriched terms (dotplot) expom |>   plot_dotplot_enrichment(     geneset = \"deg_exp_cor\",     top_n = 5,     n_per_group = 5,     add_top_genes = TRUE,     top_n_genes = 5   )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an expomicset Object — create_expomicset","title":"Create an expomicset Object — create_expomicset","text":"Constructs MultiAssayExperiment object exposure data omics datasets, ensuring proper formatting alignment samples features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an expomicset Object — create_expomicset","text":"","code":"create_expomicset(var_info, exposure, omics, row_data = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an expomicset Object — create_expomicset","text":"var_info data frame containing variable information metadata. exposure data frame containing exposure data, rows samples columns variables. omics list matrices single matrix representing omics data. matrix samples columns features rows. row_data optional list DataFrame objects providing feature metadata omics dataset. NULL, row metadata generated automatically. Default NULL.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an expomicset Object — create_expomicset","text":"MultiAssayExperiment object containing formatted exposure omics datasets.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an expomicset Object — create_expomicset","text":"function validates inputs, converts omics list necessary, ensures datasets matrices column names, creates SummarizedExperiment objects omics dataset. constructs MultiAssayExperiment object exposure data colData variable information stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an expomicset Object — create_expomicset","text":"","code":"if (FALSE) { # \\dontrun{ expomicset <- create_expomicset(   var_info = des,   exposure = meta,   omics = list(mRNA = mrna_mat, proteomics = proteomics_mat) ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"function extracts merges exposure variables colData selected features omics datasets MultiAssayExperiment object. Optionally applies log2 transformation omics data restricts features based variable map.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"","code":"extract_omics_exposure_df(expomicset, variable_map, log2_trans = TRUE)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"expomicset MultiAssayExperiment object containing omics exposure data. variable_map data frame columns \"variable\" \"exp_name\", indicating variables belong omics exposure domain. log2_trans Logical; whether log2-transform omics data. Default TRUE.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"data frame rows correspond samples, columns contain exposure variables log2-transformed omics features. Columns different omics types disambiguated using prefixes.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"variable_map provided, used select variables exposures omics. provided, numeric colData variables used exposures (excluding variables matching ^PC), omics features included.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"","code":"if (FALSE) { # \\dontrun{ merged_df <- extract_omics_exposure_df(expomicset, variable_map = my_map) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Top Contributing Features for Factors — extract_top_factor_features","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"Identifies influential features specified factors using MOFA+ MCIA integration results. Features selected based either percentile cutoff absolute loading threshold.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"","code":"extract_top_factor_features(   expomicset,   factors,   method = \"percentile\",   percentile = 0.9,   threshold = 0.3,   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"expomicset MultiAssayExperiment object containing integration results. factors character vector specifying factors interest. method character string specifying feature selection method (\"percentile\" \"threshold\"). Default \"percentile\". percentile numeric value 0 1 indicating percentile threshold feature selection method = \"percentile\". Default 0.9. threshold numeric value specifying absolute loading cutoff feature selection method = \"threshold\". Default 0.3. action character string indicating whether return results (\"get\") add metadata (\"add\"). Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"action = \"add\", returns modified expomicset selected features stored metadata. action = \"get\", returns data frame containing: feature selected feature contributing factor. factor factor feature contributes. loading factor loading value feature. exp_name experiment feature originated.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"function extracts factor loadings metadata(expomicset), applies filtering based selected method, identifies top contributing features specified factor. Features can selected using: Percentile-based filtering (method = \"percentile\"): Selects features absolute loadings specified percentile. Threshold-based filtering (method = \"threshold\"): Selects features absolute loadings exceeding fixed value.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"","code":"if (FALSE) { # \\dontrun{ results <- extract_top_factor_features(   expomicset = expom,   factors = c(\"Factor1\", \"Factor2\"),   method = \"percentile\",   percentile = 0.9,   action = \"get\" ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Features and Variables with High Missingness — filter_missing","title":"Filter Features and Variables with High Missingness — filter_missing","text":"Removes exposure variables omics features missing values specified threshold. Generates missing data summaries quality control (QC) plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Features and Variables with High Missingness — filter_missing","text":"","code":"filter_missing(expomicset, na_thresh = 20, na_plot_thresh = 5)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Features and Variables with High Missingness — filter_missing","text":"expomicset MultiAssayExperiment object containing exposure omics data. na_thresh numeric value specifying percentage missing data allowed variable feature removed. Default 20. na_plot_thresh numeric value specifying minimum missing percentage inclusion QC plots. Default 5.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Features and Variables with High Missingness — filter_missing","text":"MultiAssayExperiment object filtered exposure variables omics features. QC results, including missingness summaries plots, stored metadata(expomicset)$na_qc.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Features and Variables with High Missingness — filter_missing","text":"function assesses missingness colData(expomicset) (exposure data) experiments(expomicset) (omics data). Exposure variables na_thresh% missing values removed. Omics features (rows assay matrices) exceeding na_thresh% missing values filtered. Missingness summaries QC plots generated using naniar::gg_miss_var() stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Features and Variables with High Missingness — filter_missing","text":"","code":"if (FALSE) { # \\dontrun{ filtered_expom <- filter_missing(   expomicset = expom,   na_thresh = 20,   na_plot_thresh = 5 ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Non-Normal Exposure Variables — filter_non_normal","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"Removes exposure variables deviate significantly normal distribution based normality test results stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"","code":"filter_non_normal(expomicset, p_thresh = 0.05)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"expomicset MultiAssayExperiment object containing exposure omics data. p_thresh numeric value specifying p-value threshold normality. Variables p.value < p_thresh removed. Default 0.05.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"MultiAssayExperiment object non-normal exposure variables removed.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"function identifies exposure variables fail normality test using metadata(expomicset)$transformation$norm_df. Exposure variables p.value < p_thresh removed colData(expomicset). filtering applied colData experiment within experiments(expomicset).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"","code":"if (FALSE) { # \\dontrun{ filtered_expom <- filter_non_normal(   expomicset = expom,   p_thresh = 0.05) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Sample Outliers — filter_sample_outliers","title":"Filter Sample Outliers — filter_sample_outliers","text":"Removes sample outliers MultiAssayExperiment object based PCA analysis.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Sample Outliers — filter_sample_outliers","text":"","code":"filter_sample_outliers(expomicset, outliers = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Sample Outliers — filter_sample_outliers","text":"expomicset MultiAssayExperiment object containing omics exposure data. outliers optional character vector specifying sample names removed. NULL, function uses outliers identified metadata(expomicset)$pca$outliers. Default NULL.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Sample Outliers — filter_sample_outliers","text":"MultiAssayExperiment object specified outliers removed.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Sample Outliers — filter_sample_outliers","text":"function checks presence PCA results metadata(expomicset). outliers provided, retrieves precomputed outliers metadata(expomicset)$pca$outliers. identified samples removed dataset.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Sample Outliers — filter_sample_outliers","text":"","code":"if (FALSE) { # \\dontrun{ filtered_expomicset <- filter_sample_outliers(   expomicset = my_expomicset ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Ontology Annotation Shiny App — ont_annot_app","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"function launches Shiny application annotating exposome variable names using ontology terms HPO, ENVO, ChEBI. app bundled tidyexposomics package allows interactive selection search ontology terms.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"","code":"ont_annot_app()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"Launches Shiny app new window; return value.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"","code":"if (interactive()) {   ont_annot_app() } #> Error in shinyAppDir(x): App dir must contain either app.R or server.R."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"Extracts specified omics dataset MultiAssayExperiment, optionally filters feature (row) names, returns tidy tibble structure tidybulk::tidybulk(). output includes assay values along sample metadata (colData) feature metadata (rowData).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"","code":"pivot_exp(expomicset, omics_name, features = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"expomicset MultiAssayExperiment object containing omics assays. omics_name character string. name omics dataset extract (e.g., \"Proteomics\"). features Optional character vector row (feature) names retain. NULL, features included.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"tibble tidybulk format one row per feature/sample pair, including metadata new column exp_name indicating assay source.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"","code":"if (FALSE) { # \\dontrun{ # Extract and tidy proteomics for selected features tidy_df <- pivot_exp(my_mae, omics_name = \"Proteomics\", features = c(\"CCT5\", \"TAF7\")) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"Extracts feature-level metadata across assays MultiAssayExperiment returns combined tibble.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"","code":"pivot_feature(expomicset)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"expomicset MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"tibble feature metadata assays, added .exp_name column.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"function: Iterates assays MultiAssayExperiment. Updates assay’s sample metadata (colData) using .update_assay_colData(). Extracts feature-level metadata using tidybulk::pivot_transcript(). Combines results across assays single tibble, adding .exp_name column.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"","code":"if (FALSE) { # \\dontrun{ feature_data <- pivot_feature(expom) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"Extracts formats sample-level metadata (colData) MultiAssayExperiment SummarizedExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"","code":"pivot_sample(x, ...)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"x MultiAssayExperiment SummarizedExperiment object. ... Additional arguments passed tidybulk::pivot_sample() SummarizedExperiment objects.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"tibble containing sample metadata added .sample column.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"function: Extracts sample metadata MultiAssayExperiment using colData(), converting tibble. Calls tidybulk::pivot_sample() applied SummarizedExperiment object. Error Handling: Returns error x MultiAssayExperiment SummarizedExperiment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"","code":"if (FALSE) { # \\dontrun{ sample_data <- pivot_sample(expom) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Association Results (Unified Forest Plot) — plot_association","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"Generates forest plot association results source stored metadata MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"","code":"plot_association(   expomicset,   source = c(\"omics\", \"exposures\", \"factors\", \"go_pcs\"),   terms = NULL,   filter_col = \"p.value\",   filter_thresh = 0.05,   direction_filter = \"all\",   facet = FALSE,   nrow = 1,   subtitle = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"expomicset MultiAssayExperiment object association results metadata. source One \"omics\", \"exposures\", \"factors\", \"go_pcs\". filter_col Column use significance filtering. Default \"p.value\". filter_thresh Numeric threshold filter_col. Default 0.05. direction_filter One \"\", \"\", \"\". Default \"\". facet Logical; TRUE source == \"go_pcs\", apply nested faceting. Default FALSE. nrow Facet row layout faceting enabled. Default 1. subtitle Optional plot subtitle. NULL, generated covariates.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"ggplot2 forest plot significant associations.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"Generates circular network plot visualize relationships exposures, either based correlation (\"exposures\") shared features (\"degs\", \"factors\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"","code":"plot_circos_correlation(   expomicset,   feature_type = c(\"exposures\", \"degs\", \"factors\"),   exposure_cols = NULL,   corr_threshold = NULL,   shared_cutoff = 10,   annotation_colors = NULL,   low = \"#006666\",   mid = \"white\",   high = \"#8E0152\",   midpoint = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"expomicset MultiAssayExperiment object. feature_type One \"exposures\", \"degs\", \"factors\". exposure_cols Character vector exposures include (\"exposures\"). corr_threshold Minimum |correlation| (\"exposures\"). shared_cutoff Minimum number shared features (\"degs\" \"factors\"). Default = 10. annotation_colors Optional named vector colors categories. low, mid, high Colors edge color scale. midpoint Midpoint edge color gradient. Defaults 0 (correlations) mean shared features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"ggplot object (ggraph circular plot).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"Generates bar plot summary exposure-feature correlations using customizable modes.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"","code":"plot_correlation_summary(   expomicset,   feature_type = c(\"degs\", \"factors\"),   mode = c(\"top_exposures\", \"top_features\", \"exposure_category\", \"assay\", \"summary\"),   top_n = 15 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"expomicset MultiAssayExperiment object correlation results metadata. feature_type One \"degs\", \"factors\", \"omics\", \"exposures\". mode One : \"top_exposures\": Top exposures assay (like plot_bar_correlate_exposure_fill) \"top_features\": Top features exposure category (like plot_bar_correlate_feature_fill) \"exposure_category\": Total associations exposure category \"assay\": Total associations omics assay \"summary\": Patchwork layout combining top_n Number top exposures features display (top modes). Default 15.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"ggplot2 object patchwork object (mode = \"summary\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"Generates dotplot enriched gene ontology (GO) terms across experiments categories, optionally annotated top genes contributing GO group.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"","code":"plot_dotplot_enrichment(   expomicset,   geneset,   top_n = 5,   n_per_group = 5,   add_top_genes = TRUE,   top_n_genes = 5,   go_groups = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"expomicset MultiAssayExperiment object containing functional enrichment results. geneset character string specifying gene set analyze. Options: \"deg\", \"deg_exp_cor\", \"factor_exp_cor\", \"factor\". top_n integer specifying number top GO groups select (based enrichment score). Default 5. n_per_group Number top GO terms show within GO group. Default 5. add_top_genes Logical; TRUE, appends top genes contributing GO group annotation facet labels. Default TRUE. top_n_genes Integer; number top genes extract display per GO group (used add_top_genes = TRUE). Default 5. go_groups Optional character vector GO group names include. NULL, top top_n groups selected automatically.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"ggplot object displaying dotplot enriched GO terms, faceted GO group category.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"function: Extracts enrichment results metadata(expomicset)$functional_enrichment[[geneset]]. Selects top GO groups based product -log10(p.adjust) * Count. Displays dotplot : x-axis: experimental categories. y-axis: GO term descriptions. dot size: number genes (Count). dot color: significance level (-log10(p.adjust)). Optionally appends top genes annotations facet strip labels.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"","code":"if (FALSE) { # \\dontrun{ plot_dotplot_enrichment(expom, geneset = \"GO_BP\") plot_dotplot_enrichment(expom, geneset = \"KEGG\", top_n = 10, add_top_genes = TRUE) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Exposure Distributions by Category or Group — plot_exposures","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"Visualizes exposure variable distributions using boxplots ridge plots, optionally grouped variable sex, smoking status, exposure category.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"","code":"plot_exposures(   expomicset,   exposure_cat = \"all\",   exposure_cols = NULL,   group_by = NULL,   plot_type = \"boxplot\",   alpha = 0.3,   panel_sizes = rep(1, 100),   title = \"Exposure Levels by Category\",   xlab = \"\",   ylab = \"\",   facet_cols = NULL,   group_cols = NULL,   box_width = 0.1,   fill_lab = \"\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"expomicset MultiAssayExperiment object containing exposure data. exposure_cat character string vector specifying exposure category names (var_info$category) include. Use \"\" include exposures. exposure_cols Optional character vector specifying exact exposure variables plot. group_by string specifying column colData(expomicset) used fill plot (e.g., \"sex\"). Defaults NULL, case exposures colored category. plot_type Type plot: \"boxplot\" (default) \"ridge\". alpha Transparency level background facet color strips. Default 0.5. panel_sizes numeric vector passed ggh4x::force_panelsizes() controlling facet widths heights. title Plot title. Default \"Exposure Levels Category\". xlab X-axis label. Default empty string. ylab Y-axis label. Default empty string. facet_cols Optional vector colors use background facet categories. NULL, default palette used. group_cols Optional named vector colors group_by levels. NULL, default palette used. fill_lab Legend title fill aesthetic (e.g., \"Sex\" \"Exposure Group\"). Default \"\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"ggplot2 object showing exposure distributions, optionally grouped.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"function: Filters exposure data based category selected columns. Merges variable metadata metadata(expomicset)$var_info. Supports either boxplot (vertical distributions per variable) ridgeplot (horizontal density plots per variable). group_by specified, variable defines plot fill color; otherwise, fill based exposure category. Facets category using ggh4x::facet_grid2() color-coded strip backgrounds.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"","code":"if (FALSE) { # \\dontrun{ plot_exposures(expomicset, exposure_cat = \"Air Pollution\") plot_exposures(expomicset, group_by = \"sex\", plot_type = \"ridge\") plot_exposures(expomicset, exposure_cols = c(\"hs_no2\", \"hs_pm25\"), group_by = \"smoking_status\") } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Exposure Impact Metrics from DEG Centrality Analysis — plot_exposure_impact","title":"Visualize Exposure Impact Metrics from DEG Centrality Analysis — plot_exposure_impact","text":"function generates two-panel visualization results run_exposure_impact. displays (1) degree centrality features associated exposure boxplot, (2) stacked bar plot summarizing many differentially expressed features associated exposures.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Exposure Impact Metrics from DEG Centrality Analysis — plot_exposure_impact","text":"","code":"plot_exposure_impact(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\"),   min_per_group = 5,   facet_cols = NULL,   bar_cols = NULL,   alpha = 0.3,   ncol = 2,   nrow = 1,   heights = c(1, 1),   widths = c(2, 1) )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Exposure Impact Metrics from DEG Centrality Analysis — plot_exposure_impact","text":"expomicset MultiAssayExperiment object containing output run_exposure_impact metadata. min_per_group Integer. Minimum number features required exposure group included boxplot. Default 5. facet_cols Optional vector colors exposure category facets. NULL, defaults ggsci::pal_jco() colors. bar_cols Optional vector colors bar plot groups. NULL, defaults ggsci::pal_uchicago() colors. alpha Numeric 0 1. Transparency facet background fill. Default 0.5. ncol Integer. Number columns combined patchwork layout. Default 2. nrow Integer. Number rows combined patchwork layout. Default 1. heights Numeric vector. Relative heights patchwork panels. Default c(1, 1). widths Numeric vector. Relative widths patchwork panels. Default c(2, 1).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Exposure Impact Metrics from DEG Centrality Analysis — plot_exposure_impact","text":"ggplot object composed patchwork includes: boxplot degree centrality values features associated exposure. barplot showing number DEGs associated associated exposures.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize Exposure Impact Metrics from DEG Centrality Analysis — plot_exposure_impact","text":"function assumes run_exposure_impact already run resulting exposure impact metrics stored metadata(expomicset) list \"exposure_impact\" entry. left panel (boxplot) stratifies centrality exposure facet category. right panel (barplot) summarizes total associated DEG counts.","code":""},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"Visualizes overlap top features across multi-omics integration factors using barplots Venn diagram.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"","code":"plot_factor_overlap(   expomicset,   venn_text_size = 3,   venn_stroke_size = 0.1,   venn_set_name_size = 3.5,   venn_show_percent = FALSE,   venn_colors = NULL,   shared_bar_colors = NULL,   da_bar_colors = NULL,   da_bar_facet_cols = NULL,   da_bar_facet_alpha = 0.5,   left_heights = c(2, 1),   col_widths = c(1, 1) )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"expomicset MultiAssayExperiment object top_factor_features common_top_factor_features metadata. venn_text_size Text size Venn diagram labels. Default 3. venn_stroke_size Outline stroke width Venn diagram. Default 0.1. venn_set_name_size Text size set names Venn diagram. Default 3.5. venn_show_percent Logical, whether show percentages Venn diagram. Default FALSE. venn_colors Optional named vector colors factor Venn diagram. shared_bar_colors Optional named vector colors shared/unique barplot fill. da_bar_colors Optional named vector colors DEG (differentially abundant) barplots. da_bar_facet_cols Optional vector colors facet strip backgrounds DEG-related barplots. da_bar_facet_alpha Numeric 0–1 facet background transparency. Default 0.5. left_heights numeric vector relative heights Venn + shared DEG barplot panel. Default c(2, 1). col_widths numeric vector relative widths left (Venn/shared) vs right (DEG barplot) columns. Default c(1, 1).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"patchwork object showing combined plots: barplots Venn diagram.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"function: Displays overlap top features across integration factors using Venn diagram (ggvenn). Visualizes barplots : Shared vs unique top features across experiments. Differentially abundant top features (per factor). DEGs among shared features (overall). Adds optional customization layout spacing, colors, transparency.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"","code":"if (FALSE) { # \\dontrun{ plot_factor_overlap(expomicset, venn_show_percent = TRUE) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"Generates summary plot factor contributions multi-omics integration results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"","code":"plot_factor_summary(expomicset)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"expomicset MultiAssayExperiment object containing multi-omics integration results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"ggplot object displaying factor contributions MOFA block weight heatmap MCIA.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"function extracts integration results metadata(expomicset)$integration_results generates summary plot factor contributions. visualization method depends integration approach used: MOFA: Uses MOFA2::plot_variance_explained() display variance explained factors. MCIA: Uses nipalsMCIA::block_weights_heatmap() show block loadings. function automatically selects appropriate visualization based integration method.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"","code":"if (FALSE) { # \\dontrun{ plot_factor_summary(expom) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"Visualizes exposures significantly associated features specified Gene Ontology (GO) groups.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"","code":"plot_go_group_exposures(   expomicset,   go_groups,   geneset = \"deg_exp_cor\",   feature_col = \"feature\",   top_n = 15 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"expomicset MultiAssayExperiment object containing functional enrichment exposure-feature correlation results. go_groups character vector specifying GO groups interest. Use \"\" include GO groups. geneset character string indicating gene set use. Options \"deg_exp_cor\" DEGs \"factor_exp_cor\" factors. Default \"deg_exp_cor\". feature_col character string specifying feature column match correlated features. Default \"feature\". top_n integer specifying number top exposures display per experimental assay. Default 15.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"ggplot object displaying top exposures associated features GO groups.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"function identifies exposures significantly correlated features within specified GO groups. extracts functional enrichment results metadata(expomicset)$functional_enrichment cross-references exposure-feature correlation results: \"deg_exp_cor\": Uses metadata(expomicset)$omics_exposure_deg_correlation \"factor_exp_cor\": Uses metadata(expomicset)$omics_exposure_factor_correlation resulting plot: Displays exposures grouped experimental assay (exp_name). Uses bar heights indicate number associated features. Colors bars based exposure categories.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"","code":"if (FALSE) { # \\dontrun{ plot_go_group_exposures(expom, go_groups = c(\"GO:0006355\", \"GO:0045893\")) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"Generates upper-triangle heatmap correlations exposure variables, side annotation bars indicating variable categories.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"","code":"plot_heatmap_correlate_exposure(   expomicset,   exposure_cols = NULL,   corr_threshold = NULL,   annotation_colors = NULL,   low = \"#006666\",   mid = \"white\",   high = \"#8E0152\",   midpoint = 0 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"expomicset MultiAssayExperiment object containing exposure data correlation results. exposure_cols character vector exposure variable names include plot. NULL, includes . corr_threshold numeric value filtering correlations absolute value (e.g., 0.2). annotation_colors Optional named character vector colors exposure categories. low Color strong negative correlations. Default \"#006666\". mid Color zero correlation. Default \"white\". high Color strong positive correlations. Default \"#8E0152\". midpoint Midpoint color scale. Default 0.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"ggplot2 object assembled using patchwork, showing correlation heatmap annotation bars.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"function: Uses precomputed correlations metadata(expomicset)$exposure_correlation$correlation_table. Filters upper triangle matrix (.e., combinations var1 <= var2). Applies optional thresholding corr_threshold simplify visualization. Adds top left annotation bars colored category_1 category_2, respectively. Harmonizes category colors across axes using single legend. annotation_colors supplied, default palette used. resulting plot includes heatmap, sidebars, unified legend variable categories.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"","code":"if (FALSE) { # \\dontrun{ plot_heatmap_correlate_exposure(expom) plot_heatmap_correlate_exposure(expom, exposure_cols = c(\"pm25\", \"no2\", \"age\")) plot_heatmap_correlate_exposure(expom, corr_threshold = 0.2) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"function generates multi-faceted Manhattan plot results associate_all_outcome(), visualizing significance associations across omics features, grouped category. Significant features can highlighted labeled, strip backgrounds can colored per facet.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"","code":"plot_manhattan(   expomicset,   pval_thresh = 0.05,   alpha = 0.5,   min_per_cat = 1,   vars_to_label = NULL,   sig_color = \"magenta2\",   non_sig_cols = c(\"grey25\", \"grey75\"),   pval_thresh_line_col = \"grey25\",   panel_sizes = c(1, 1, 1, 1, 1),   linetype = \"dashed\",   facet_cols = NULL,   label_size = 3.5,   facet_angle = 90,   facet_text_face = \"bold.italic\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"expomicset MultiAssayExperiment object already processed associate_all_outcome(). pval_thresh Numeric threshold significance (default = 0.05). alpha Transparency applied facet strip colors (default = 0.5). min_per_cat Minimum number features per category shown (default = 1). vars_to_label Optional character vector variable names label explicitly. sig_color Color used significant points (default = \"magenta2\"). non_sig_cols Character vector alternating colors non-significant points (default = c(\"grey25\", \"grey75\")). pval_thresh_line_col Color horizontal significance threshold line (default = \"grey25\"). panel_sizes Numeric vector passed ggh4x::force_panelsizes() control panel widths (default = c(1,1,1,1,1)). linetype Line type horizontal threshold (default = \"dashed\"). facet_cols Optional vector colors use facet strip backgrounds; NULL, uses ggsci::pal_npg(). label_size Numeric size feature label text (default = 3.5). facet_angle Angle (degrees) strip text rotation (default = 90). facet_text_face Font face facet strip labels (default = \"bold.italic\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"ggplot object showing Manhattan-style faceted plot.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"function expects associate_all_outcome() run first. Facets represent omics categories, points represent features. Points significance threshold colored using non_sig_cols, significant ones colored sig_color optionally labeled. Uses ggrepel avoid overlapping labels ggh4x enhanced faceting.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"","code":"# Plot a Manhattan summary from ExWAS results # plot_manhattan(mae, pval_thresh = 0.01)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Missing Data Across Assays — plot_missing_summary","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"Visualizes number features exceeding missing data threshold assay MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"","code":"plot_missing_summary(expomicset, threshold = 20)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"expomicset MultiAssayExperiment object missing data summary stored metadata(expomicset)$na_qc. threshold numeric value specifying missing data percentage threshold features counted. Default 20.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"ggplot object showing missing data statistics across assays.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"function extracts missing data summaries metadata(expomicset)$na_qc, generated filter_missing(), counts number features assay exceeding specified missingness threshold. results : Displayed bar plot, bars represent different assays. Labeled number features exceeding threshold. Colored assay name easy distinction.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"","code":"if (FALSE) { # \\dontrun{ plot_missing_summary(expom, threshold = 10) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Network Graph of Omics-Exposure Associations — plot_network","title":"Plot Network Graph of Omics-Exposure Associations — plot_network","text":"Visualizes tidygraph network stored MultiAssayExperiment metadata using ggraph.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Network Graph of Omics-Exposure Associations — plot_network","text":"","code":"plot_network(   expomicset,   network = c(\"degs\", \"omics\", \"factors\", \"exposures\"),   include_stats = TRUE,   nodes_to_include = NULL,   centrality_thresh = NULL,   top_n_nodes = NULL,   cor_thresh = NULL,   label = FALSE,   label_top_n = 5,   nodes_to_label = NULL,   facet_var = NULL,   foreground = \"steelblue\",   fg_text_colour = \"grey25\",   node_colors = NULL,   node_color_var = NULL,   alpha = 0.5,   size_lab = \"Centrality\",   color_lab = \"Group\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Network Graph of Omics-Exposure Associations — plot_network","text":"expomicset MultiAssayExperiment object containing network metadata (e.g., \"omics_exposure_network\"). network character string specifying network plot. Options : \"omics_exposure_network\" full correlation network. \"omics_exposure_deg_network\" Subset network DEGs. \"omics_exposure_factor_network\" Subset network involving factor features. include_stats Logical; whether compute visualize centrality statistics. Default TRUE. nodes_to_include character vector node names retain. NULL, include nodes. centrality_thresh Numeric threshold retain nodes minimum centrality value. top_n_nodes Integer; retain top N central nodes. cor_thresh Numeric; threshold filtering edges absolute correlation. label Logical; whether display node labels. Default FALSE. label_top_n Integer; number top central nodes label label = TRUE nodes_to_label NULL. Default 5. nodes_to_label character vector node names label. Overrides label_top_n provided. facet_var Optional column name (node data) use faceting layout. foreground Color label highlight. Default \"steelblue\". fg_text_colour Text color node labels. Default \"grey25\". node_colors Optional named vector manually setting node colors group. node_color_var column name node metadata used color mapping (e.g., \"type\" \"category\"). alpha Transparency nodes. Default 0.5. size_lab Label node size legend. Default \"Centrality\". color_lab Label node color legend. Default \"Group\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Network Graph of Omics-Exposure Associations — plot_network","text":"ggraph object plotting.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Network Graph of Omics-Exposure Associations — plot_network","text":"function: Selects stored network metadata(expomicset). Applies optional node edge filters (e.g., correlation threshold, centrality, node list). Prunes unconnected nodes (nodes involved remaining edges). Computes node centrality sizing filtering requested. Generates ggraph layout using .build_ggraph_plot(). Node color label aesthetics customizable. Labeling can automatic (e.g., top 5 centrality) manual via nodes_to_label.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Network Graph of Omics-Exposure Associations — plot_network","text":"","code":"if (FALSE) { # \\dontrun{ plot_network(   expomicset,   network = \"omics_exposure_network\",   cor_thresh = 0.4,   top_n_nodes = 100,   label = TRUE ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","title":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","text":"Visualizes results Shapiro-Wilk normality test exposure variables, displays different transformations affect normality.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","text":"","code":"plot_normality_summary(expomicset, transformed = FALSE)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","text":"expomicset MultiAssayExperiment object containing normality test results metadata(expomicset)$normality$norm_df metadata(expomicset)$transformation$norm_summary.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","text":"ggplot object showing normality test results transformation effects.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","text":"function generates two visualizations: bar plot summarizing number normally non-normally distributed exposure variables. transformation effect plot showing number exposures classified normal different transformations (e.g., Log2, Square Root, X^(1/3), Transformation). normality assessment based Shapiro-Wilk test (p-value threshold 0.05).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Summary of Normality Test for Exposure Variables — plot_normality_summary","text":"","code":"if (FALSE) { # \\dontrun{ plot_normality_summary(expom) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA Results for Features and Samples — plot_pca","title":"Plot PCA Results for Features and Samples — plot_pca","text":"Generates PCA plots feature space sample space, including scatter plots scree plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA Results for Features and Samples — plot_pca","text":"","code":"plot_pca(   expomicset,   feature_col = \"#00a9b2\",   sample_col = \"#8a4f77\",   sample_outlier_col = \"firebrick\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA Results for Features and Samples — plot_pca","text":"expomicset MultiAssayExperiment object containing PCA results metadata(expomicset)$pca. feature_col character string specifying color feature scree plot. Default \"#00a9b2\". sample_col character string specifying color sample scree plot. Default \"#8a4f77\". sample_outlier_col character string specifying color sample outlier labels. Default \"firebrick\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA Results for Features and Samples — plot_pca","text":"combined ggplot object containing four PCA plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot PCA Results for Features and Samples — plot_pca","text":"function creates four PCA visualizations: Feature Space PCA Plot: Colored category (e.g., omics, exposure). Feature Scree Plot: Displays variance explained principal component. Sample Space PCA Plot: Highlights outlier samples. Sample Scree Plot: Displays variance explained sample PCA. Outliers labeled based metadata(expomicset)$pca$outliers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA Results for Features and Samples — plot_pca","text":"","code":"if (FALSE) { # \\dontrun{ plot_pca(expom) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sample Clusters — plot_sample_clusters","title":"Plot Sample Clusters — plot_sample_clusters","text":"Generates heatmap sample clustering results summarizes sample group assignments.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sample Clusters — plot_sample_clusters","text":"","code":"plot_sample_clusters(expomicset, exposure_cols = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sample Clusters — plot_sample_clusters","text":"expomicset MultiAssayExperiment object containing sample clustering results metadata(expomicset)$sample_clustering. exposure_cols character vector specifying columns colData include summary. Default NULL, includes available columns.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sample Clusters — plot_sample_clusters","text":"ComplexHeatmap plot displaying sample clustering results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Sample Clusters — plot_sample_clusters","text":"function: Extracts sample cluster assignments metadata(expomicset)$sample_clustering. Merges cluster labels colData(expomicset). Plots heatmap stored metadata(expomicset)$sample_clustering$heatmap.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sample Clusters — plot_sample_clusters","text":"","code":"if (FALSE) { # \\dontrun{ plot_sample_clusters(expom) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"Generates ridge plot bar chart summarizing feature stability scores across assays.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"","code":"plot_sensitivity_summary(   expomicset,   stability_score_thresh = NULL,   stability_metric = \"stability_score\",   title = \"Distribution of Stability Scores\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"expomicset MultiAssayExperiment object containing sensitivity analysis results metadata(expomicset)$sensitivity_analysis. stability_score_thresh numeric threshold stability scores. Default NULL, uses threshold stored metadata(expomicset)$sensitivity_analysis$score_thresh. stability_metric character string specifying stability metric plot (e.g., \"stability_score\", \"logp_weighted_score\"). Default \"stability_score\". title character string specifying title ridge plot. Default \"Distribution Stability Scores\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"patchwork object combining ridge plot bar chart.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"function: Extracts feature stability scores metadata(expomicset)$sensitivity_analysis$feature_stability. Displays ridge plot stability score distributions per assay. Displays bar chart number features per assay. Prints number features stability scores threshold.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"","code":"if (FALSE) { # \\dontrun{ plot_sensitivity_summary(expom, stability_metric = \"logp_weighted_score\") } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"Visualizes top loading features factor multi-omics integration results (e.g., MOFA MCIA).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"","code":"plot_top_factor_features(   expomicset,   factors = NULL,   top_n = 5,   facet_cols = NULL,   exp_name_cols = NULL,   alpha = 0.5 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"expomicset MultiAssayExperiment object containing integration results metadata slot (must include integration_results). factors Character vector factors include (e.g., \"Factor1\", \"Factor2\"). NULL, factors plotted. top_n Integer specifying number top features show per factor. Default 5. facet_cols Optional color palette facet strip backgrounds (one per exp_name), used distinguish factors. exp_name_cols Optional color palette experiment labels plot (exp_name), passed scale_color_manual(). alpha Numeric value 0 1 controlling transparency facet strip background fill. Default 0.5.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"ggplot2 object one facet per factor, showing top features loadings experiment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"function supports following integration methods: \"MOFA\": Uses feature weights MOFA2 (get_weights()). \"MCIA\": Uses block loadings MCIA (@block_loadings). factor, : Selects top top_n features absolute loading. Creates point-range plot showing loading magnitude. Facets factor customizable strip background. palettes provided, defaults chosen using ggpubr::get_palette().","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"","code":"if (FALSE) { # \\dontrun{ plot_top_factor_features(expomicset, factors = c(\"Factor1\", \"Factor2\"), top_n = 10) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plot of Differential Abundance — plot_volcano","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"Generates volcano plot visualize differential abundance results across one omics layers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"","code":"plot_volcano(   expomicset,   pval_col = \"adj.P.Val\",   pval_thresh = 0.05,   logFC_col = \"logFC\",   logFC_thresh = log2(1.5),   plot_n_sig = TRUE,   top_n_label = NULL,   features_to_label = NULL,   feature_col = \"feature\",   xlab = expression(Log[2] * \"FC\"),   ylab = expression(-Log[10] * \"P\"),   title = \"Volcano Plot of Differential Abundance\",   nrow = 2 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"expomicset MultiAssayExperiment object containing differential abundance results metadata(expomicset)$differential_abundance. pval_col character string specifying column containing p-values. Default \"adj.P.Val\". pval_thresh numeric threshold significance. Features p-values considered significant. Default 0.05. logFC_col character string specifying column log fold changes. Default \"logFC\". logFC_thresh numeric threshold absolute log fold change significance. Default log2(1.5). plot_n_sig Logical; TRUE, appends number significant features facet titles. Default TRUE. top_n_label Optional integer. provided, top n significant features per assay labeled plot. features_to_label Optional character vector. Specific features label regardless significance. feature_col character string naming feature ID column use labeling. Default \"feature\". xlab Label x-axis. Default expression(Log[2]*\"FC\"). ylab Label y-axis. Default expression(-Log[10]*\"P\"). title Plot title. Default \"Volcano Plot Differential Abundance\". nrow Number rows facet_wrap() layout. Default 2.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"ggplot2 object representing volcano plot.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"function: Extracts differential abundance results metadata(expomicset)$differential_abundance. Assigns feature direction change: Upregulated, Downregulated, -Significant. Uses logFC_thresh pval_thresh define thresholds. Adds dashed lines indicate cutoffs fold change significance. Uses facet_wrap() display assay (exp_name) separately. Optionally labels significant features user-defined ones.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"","code":"if (FALSE) { # \\dontrun{ plot_volcano(expom, pval_thresh = 0.01, logFC_thresh = log2(2)) plot_volcano(expom, features_to_label = c(\"TP53\", \"MYC\")) plot_volcano(expom, top_n_label = 5) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Association Analysis Across Data Sources — run_association","title":"Generalized Association Analysis Across Data Sources — run_association","text":"Performs GLM-based association testing outcome features omics, exposures, latent factors, GO-based PCs MultiAssayExperiment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Association Analysis Across Data Sources — run_association","text":"","code":"run_association(   expomicset,   outcome,   source = c(\"omics\", \"exposures\", \"factors\", \"go_pcs\"),   covariates = NULL,   feature_set = NULL,   top_n = NULL,   family = \"gaussian\",   correction_method = \"fdr\",   action = \"add\",   min_genes = 10,   feature_col = NULL,   mirna_assays = NULL,   print = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Association Analysis Across Data Sources — run_association","text":"expomicset MultiAssayExperiment object. outcome character string naming outcome variable. source One 'omics', 'exposures', 'factors', 'go_pcs'. covariates Optional character vector covariates. feature_set Optional vector feature names (e.g., exposures, GO terms). top_n omics: select top N variable features per assay. family GLM family ('gaussian' 'binomial'). correction_method Method p-value adjustment. Default 'fdr'. action Return results ('get') attach metadata ('add'). min_genes Minimum genes per GO group (GO PC source). feature_col Optional column map GO terms features. mirna_assays Assays exclude GO PC mode.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Association Analysis Across Data Sources — run_association","text":"action = 'add', returns updated MultiAssayExperiment. Else returns result list.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Samples Based on Exposure Data — run_cluster_samples","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"Performs hierarchical clustering samples using exposure data colData(expomicset).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"","code":"run_cluster_samples(   expomicset,   exposure_cols = NULL,   dist_method = NULL,   user_k = NULL,   cluster_method = \"ward.D\",   clustering_approach = \"diana\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"expomicset MultiAssayExperiment object containing omics exposure data. exposure_cols character vector column names colData(expomicset) use clustering. dist_method character string specifying distance metric (\"euclidean\", \"gower\", etc.). NULL, automatically determined. user_k integer specifying number clusters. NULL, optimal k determined. cluster_method character string specifying hierarchical clustering method. Default \"ward.D\". clustering_approach character string specifying method determining k (\"diana\", \"gap\", \"elbow\", \"dynamic\", \"density\"). Default \"diana\". action character string specifying \"add\" (store results metadata) \"get\" (return clustering results). Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"action=\"add\", returns updated expomicset. action=\"get\", returns list : sample_cluster hierarchical clustering object (hclust). sample_groups named vector sample cluster assignments. heatmap ComplexHeatmap object visualizing sample clustering.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"function: Extracts numeric exposure data colData(expomicset). Computes distance matrix (\"gower\" mixed data, \"euclidean\" numeric). Determines optimal number clusters (k) using specified method. Performs hierarchical clustering (hclust) assigns samples clusters. Generates heatmap scaled exposure values. Stores results metadata(expomicset)$sample_clustering action=\"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"","code":"if (FALSE) { # \\dontrun{ expom <- run_cluster_samples(   expomicset = expom,   exposure_cols = c(\"PM2.5\", \"NO2\"),   dist_method = \"gower\",   clustering_approach = \"gap\" ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Correlation Analysis Between Exposures and Features — run_correlation","title":"Generalized Correlation Analysis Between Exposures and Features — run_correlation","text":"Performs correlation analysis exposures selected feature set (DEGs, omics, latent factors, exposures).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Correlation Analysis Between Exposures and Features — run_correlation","text":"","code":"run_correlation(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\"),   exposure_cols = NULL,   variable_map = NULL,   robust = FALSE,   score_col = \"stability_score\",   score_thresh = NULL,   correlation_method = \"spearman\",   correlation_cutoff = 0.3,   cor_pval_column = \"p.value\",   pval_cutoff = 0.05,   deg_pval_col = \"adj.P.Val\",   deg_logfc_col = \"logFC\",   deg_pval_thresh = 0.05,   deg_logfc_thresh = log2(1.5),   batch_size = 1500,   action = c(\"add\", \"get\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Correlation Analysis Between Exposures and Features — run_correlation","text":"expomicset MultiAssayExperiment object. feature_type One \"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\". exposure_cols Optional character vector exposure variable names. NULL, numeric exposures used. variable_map Optional variable mapping table (omics). robust TRUE feature_type == \"degs\", restrict stable DEGs. score_col Column name stability scores sensitivity analysis. score_thresh Optional numeric threshold feature stability scores. correlation_method Correlation method (\"spearman\", \"pearson\", etc.). correlation_cutoff Threshold absolute correlation. cor_pval_column p-value column apply cutoff . pval_cutoff Significance threshold p-values. deg_pval_col DEG p-value column name. deg_logfc_col DEG logFC column name. deg_pval_thresh DEG p-value filter threshold. deg_logfc_thresh DEG logFC filter threshold. batch_size Features per correlation batch. action Either \"get\" (return table) \"add\" (update metadata).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Correlation Analysis Between Exposures and Features — run_correlation","text":"action = \"add\", returns modified MultiAssayExperiment. Else, returns correlation result table.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and store a network from correlation results in a MultiAssayExperiment — run_create_network","title":"Create and store a network from correlation results in a MultiAssayExperiment — run_create_network","text":"Constructs undirected network based correlation results exposures features (e.g., DEGs, omics, latent factors, exposures) optionally stores metadata MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and store a network from correlation results in a MultiAssayExperiment — run_create_network","text":"","code":"run_create_network(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\", \"exposures\"),   action = c(\"add\", \"get\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and store a network from correlation results in a MultiAssayExperiment — run_create_network","text":"expomicset MultiAssayExperiment object. feature_type One \"degs\", \"omics\", \"factors\", \"exposures\". Used select correlation results. action \"add\" store graph metadata, \"get\" return .","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and store a network from correlation results in a MultiAssayExperiment — run_create_network","text":"action = \"add\", returns modified MultiAssayExperiment. Otherwise, returns list graph summary.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis — run_differential_abundance","title":"Perform Differential Abundance Analysis — run_differential_abundance","text":"Runs differential abundance testing across assays MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis — run_differential_abundance","text":"","code":"run_differential_abundance(   expomicset,   formula,   abundance_col = \"counts\",   minimum_counts = 10,   minimum_proportion = 0.3,   method = \"limma_voom\",   contrasts = NULL,   scaling_method = \"none\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis — run_differential_abundance","text":"expomicset MultiAssayExperiment object containing omics exposure data. formula model formula differential testing. abundance_col character string specifying assay data column use. Default \"counts\". minimum_counts integer specifying minimum count threshold feature filtering. Default 10. minimum_proportion numeric specifying minimum proportion samples nonzero counts. Default 0.3. method character string specifying differential abundance method (\"limma_voom\", \"DESeq2\", etc.). Default \"limma_voom\". contrasts character vector specifying contrasts differential testing. Default NULL. scaling_method character string specifying normalization/scaling. Default \"none\". action character string specifying \"add\" (store results metadata) \"get\" (return results). Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis — run_differential_abundance","text":"action=\"add\", returns updated expomicset. action=\"get\", returns data.frame differential abundance results, including: feature Feature identifier. exp_name Assay name. logFC Log-fold change. adj.P.Val Adjusted p-value.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Differential Abundance Analysis — run_differential_abundance","text":"function: Iterates assays expomicset. Updates sample metadata assay. Runs .run_se_differential_abundance() differential testing. Filters results based minimum_counts minimum_proportion. Combines results across assays. Stores results metadata(expomicset)$differential_abundance action=\"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis — run_differential_abundance","text":"","code":"if (FALSE) { # \\dontrun{ expom <- run_differential_abundance(   expomicset = expom,   formula = ~ condition,   abundance_col = \"counts\",   method = \"limma_voom\" ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Functional Enrichment Analysis — run_enrichment","title":"Perform Functional Enrichment Analysis — run_enrichment","text":"Runs functional enrichment analysis differentially abundant features correlated features MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Functional Enrichment Analysis — run_enrichment","text":"","code":"run_enrichment(   expomicset,   geneset,   robust = T,   score_col = \"stability_score\",   score_threshold = NULL,   feature_col = \"feature\",   mirna_assays = NULL,   pval_col = \"adj.P.Val\",   pval_threshold = 0.05,   logfc_col = \"logFC\",   logfc_threshold = log2(1),   pAdjustMethod = \"fdr\",   pvalueCutoff = 0.05,   qvalueCutoff = 0.1,   fun = \"enrichGO\",   OrgDb = \"org.Hs.eg.db\",   keyType = \"SYMBOL\",   ont = \"BP\",   clustering_approach = \"diana\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Functional Enrichment Analysis — run_enrichment","text":"expomicset MultiAssayExperiment object containing omics exposure data. geneset character string specifying gene set analyze. Options: \"deg\", \"deg_exp_cor\", \"factor_exp_cor\", \"factor\". feature_col character string specifying column feature names. Default \"feature\". mirna_assays character vector specifying miRNA assays. Default NULL. pval_col character string specifying column p-values. Default \"adj.P.Val\". pval_threshold numeric threshold adjusted p-values. Default 0.05. logfc_col character string specifying column log-fold changes. Default \"logFC\". logfc_threshold numeric threshold log-fold changes. Default log2(1). pAdjustMethod character string specifying p-value adjustment method. Default \"fdr\". pvalueCutoff numeric threshold significance enrichment analysis. Default 0.05. qvalueCutoff numeric threshold false discovery rate control. Default 0.1. fun character string specifying enrichment function (\"enrichGO\", \"enrichKEGG\", etc.). Default \"enrichGO\". OrgDb character string specifying organism database. Default \"org.Hs.eg.db\". keyType character string specifying gene identifier type. Default \"SYMBOL\". ont character string specifying ontology Gene Ontology analysis. Default \"BP\" (Biological Process). clustering_approach character string specifying clustering approach GO term grouping. Default \"diana\". action character string specifying \"add\" (store results metadata) \"get\" (return results). Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Functional Enrichment Analysis — run_enrichment","text":"action=\"add\", returns updated expomicset. action=\"get\", returns data.frame enrichment results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","title":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","text":"function calculates exposome scores using various methods (mean, median, PCA, IRT, quantile, variance) based numeric exposure variables found colData MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","text":"","code":"run_exposome_score(   expomicset,   exposure_cols = NULL,   scale = TRUE,   score_type = \"median\",   score_column_name = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","text":"expomicset MultiAssayExperiment object containing exposure data colData. exposure_cols Optional character vector specifying exposure columns use. NULL, numeric columns (excluding starting \"PC\") used. scale Logical; TRUE, standardizes (z-scores) selected exposures scoring. Default TRUE. score_type Character string indicating scoring method use. One \"mean\", \"median\", \"pca\", \"irt\", \"quantile\", \"var\". score_column_name Optional string rename resulting exposome score column output colData. NULL, default name based score_type used.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","text":"MultiAssayExperiment object new column added colData, containing computed exposome score.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","text":"\"mean\": Computes row-wise mean across exposure values. \"sum\": Computes row-wise sum across exposure values. \"median\": Computes row-wise median across exposure values. \"pca\": Performs PCA exposures uses first principal component. \"irt\": Fits unidimensional graded IRT model using decile-binned exposures. \"quantile\": Converts exposure deciles (1–10) sums row-wise. \"var\": Computes row-wise variance across exposure values. Note: IRT-based scoring requires mirt package.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Exposome Score for a MultiAssayExperiment — run_exposome_score","text":"","code":"# Compute a PCA-based exposome score using specific exposure columns # mae <- run_exposome_score(mae, exposure_cols = c(\"no2\", \"pm25\"), score_type = \"pca\", score_column_name = \"pca_score\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"Generalized centrality-based exposure impact analysis using DEG, omics, factor features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"","code":"run_exposure_impact(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\"),   pval_col = \"adj.P.Val\",   pval_thresh = 0.1,   action = c(\"add\", \"get\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"expomicset MultiAssayExperiment object correlation network metadata. feature_type One \"degs\", \"omics\", \"factors\". pval_col Column differential abundance results filter DEGs. Default = \"adj.P.Val\". pval_thresh DEG p-value threshold. Ignored unless feature_type == \"degs\". action Either \"add\" (store metadata) \"get\" (return list).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"Either updated MultiAssayExperiment (action = \"add\") list.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"Identifies top features shared (overlapping) across integration factors (e.g., MOFA MCIA), optionally annotates whether features also robustly associated outcome (e.g., DEGs stability-selected).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"","code":"run_factor_overlap(   expomicset,   robust_comparison = TRUE,   stability_score = NULL,   score_col = \"stability_score\",   pval_thresh = 0.05,   logfc_thresh = log2(1.5),   pval_col = \"padj\",   logfc_col = \"logFC\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"expomicset MultiAssayExperiment containing top_factor_features metadata (usually generated extract_top_factor_features()). robust_comparison Logical; TRUE, uses sensitivity analysis (available) define robust associations. FALSE, uses traditional DEG filters. Default TRUE. stability_score Optional numeric threshold robust filtering. NULL, uses score_thresh stored metadata(expomicset)$sensitivity_analysis. score_col Character string specifying score column use sensitivity analysis. Default \"stability_score\". pval_thresh P-value threshold differential abundance filtering. Used robust_comparison = FALSE. Default 0.05. logfc_thresh Log fold change threshold differential abundance filtering. Used robust_comparison = FALSE. Default log2(1.5). pval_col Character string specifying column differential abundance table containing p-values. Default \"padj\". logfc_col Character string specifying column differential abundance table containing log fold changes. Default \"logFC\". action results: \"add\" Store shared top features metadata(expomicset)$common_top_factor_features return updated object. \"get\" Return data frame shared top features across factors, including is_deg column indicating outcome association.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"Either modified MultiAssayExperiment object (action = \"add\"), data.frame overlapping top features (action = \"get\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"Performs missing data imputation exposure variables (colData) omics datasets (experiments) within MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"","code":"run_impute_missing(   expomicset,   exposure_impute_method = \"median\",   exposure_cols = NULL,   omics_impute_method = \"knn\",   omics_to_impute = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"expomicset MultiAssayExperiment object containing exposures omics data. exposure_impute_method Character. Imputation method use exposure variables. Defaults \"median\". exposure_cols Character vector. Names columns colData impute. NULL, numeric columns used. omics_impute_method Character. Imputation method use omics data. Defaults \"knn\". omics_to_impute Character vector. Names omics datasets impute. NULL, omics datasets included.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"MultiAssayExperiment object imputed exposure /omics data.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"exposures, numeric columns colData imputed using selected method. omics data, assays selected imputed individually. Supported imputation methods include: \"median\": Median imputation using naniar::impute_median_all \"mean\": Mean imputation using naniar::impute_mean_all \"knn\": k-nearest neighbor imputation using impute::impute.knn \"mice\": Multiple imputation using chained equations (mice::mice) \"dep\": MinProb imputation proteomics using DEP::impute \"missforest\": Random forest-based imputation using missForest::missForest \"lod_sqrt2\": Substitution missing values LOD/sqrt(2), LOD smallest non-zero value per variable","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"","code":"if (FALSE) { # \\dontrun{ imputed_mae <- run_impute_missing(my_mae,                                   exposure_impute_method = \"lod_sqrt2\",                                   exposure_cols = c(\"pm25\", \"no2\"),                                   omics_impute_method = \"missforest\",                                   omics_to_impute = c(\"metabolomics\", \"proteomics\")) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Multi-Omics Integration — run_multiomics_integration","title":"Perform Multi-Omics Integration — run_multiomics_integration","text":"Integrates multiple assays MultiAssayExperiment object using either MOFA+ MCIA.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Multi-Omics Integration — run_multiomics_integration","text":"","code":"run_multiomics_integration(   expomicset,   method = \"MCIA\",   n_factors = 10,   scale = TRUE,   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Multi-Omics Integration — run_multiomics_integration","text":"expomicset MultiAssayExperiment object containing least two omics assays. method character string specifying integration method. Options: \"MOFA\", \"MCIA\". Default \"MCIA\". n_factors integer specifying number latent factors/components compute. Default 10. scale logical indicating whether standardize (Z-score) assays integration. Default TRUE. action character string specifying whether store (\"add\") return (\"get\") results. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Multi-Omics Integration — run_multiomics_integration","text":"MultiAssayExperiment object integration results added metadata (action = \"add\") list : method integration method used (\"MOFA\" \"MCIA\"). result trained integration model.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Multi-Omics Integration — run_multiomics_integration","text":"function: MOFA+ (method = \"MOFA\"): Creates MOFA model expomicset. Trains model using default MOFA parameters. Saves loads trained model. MCIA (method = \"MCIA\"): Applies NIPALS MCIA via nipalsMCIA::nipals_multiblock(). Scaling: scale = TRUE, assays standardized using .scale_multiassay(). Output Handling: \"add\": Stores results metadata(expomicset)$integration_results. \"get\": Returns list containing method result (trained model).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Multi-Omics Integration — run_multiomics_integration","text":"","code":"if (FALSE) { # \\dontrun{ expom <- run_multiomics_integration(   expomicset = expom,   method = \"MCIA\",   n_factors = 10,   scale = TRUE ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Normality of Exposure Variables — run_normality_check","title":"Assess Normality of Exposure Variables — run_normality_check","text":"Performs Shapiro-Wilk tests check normality numeric exposure variables colData MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Normality of Exposure Variables — run_normality_check","text":"","code":"run_normality_check(expomicset, action = \"add\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Normality of Exposure Variables — run_normality_check","text":"expomicset MultiAssayExperiment object containing exposure data colData. action character string specifying whether store (\"add\") return (\"get\") results. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess Normality of Exposure Variables — run_normality_check","text":"MultiAssayExperiment object normality results added metadata (action = \"add\") list : norm_df data frame Shapiro-Wilk test results exposure variable. norm_plot ggplot object showing distribution normal non-normal exposures.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess Normality of Exposure Variables — run_normality_check","text":"function: Extracts numeric, non-constant exposure variables colData. Runs Shapiro-Wilk tests assess normality. Summarizes number normally non-normally distributed exposures. Generates bar plot visualizing normality results. Output Handling: \"add\": Stores results metadata(expomicset)$normality. \"get\": Returns list containing normality test results plot.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess Normality of Exposure Variables — run_normality_check","text":"","code":"if (FALSE) { # \\dontrun{ expom <- run_normality_check(expomicset = expom, action = \"add\") norm_results <- run_normality_check(expomicset = expom, action = \"get\") } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Principal Component Analysis (PCA) — run_pca","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"Runs PCA feature sample spaces MultiAssayExperiment object, identifying outliers based Mahalanobis distance.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"","code":"run_pca(expomicset, action = \"add\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"expomicset MultiAssayExperiment object containing omics exposure data. action character string specifying whether store (\"add\") return (\"get\") results. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"MultiAssayExperiment object PCA results added metadata (action = \"add\") list : pca_df tibble transformed input data. pca_feature prcomp object containing PCA results features. pca_sample prcomp object containing PCA results samples. outliers character vector detected sample outliers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"function: Identifies common samples across assays exposure data. Performs PCA features (transformed standardized). Performs PCA samples computes Mahalanobis distance detect outliers. Output Handling: \"add\": Stores results metadata(expomicset)$pca updates colData PCs. \"get\": Returns list containing PCA results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"","code":"if (FALSE) { # \\dontrun{ expom <- run_pca(expomicset = expom, action = \"add\") pca_results <- run_pca(expomicset = expom, action = \"get\") } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"function prints visualizes analysis steps stored metadata MultiAssayExperiment object. steps optionally printed console numbered list always rendered left--right Mermaid flowchart. flowchart wraps new row every 5 steps.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"","code":"run_pipeline_summary(   expomicset,   show_index = TRUE,   console_print = FALSE,   include_notes = FALSE )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"expomicset MultiAssayExperiment object contains \"steps\" entry metadata. show_index Logical, default TRUE. Prefix steps index. console_print Logical, default FALSE. TRUE, prints console. include_notes Logical, default FALSE. TRUE, appends notes step.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"return value; called side effects (console print + diagram).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","title":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"Runs differential abundance testing across multiple models, statistical methods, scaling approaches, filtering criteria assess feature stability.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"","code":"run_sensitivity_analysis(   expomicset,   base_formula,   abundance_col = \"counts\",   methods = c(\"limma_voom\", \"DESeq2\", \"edgeR_quasi_likelihood\"),   scaling_methods = c(\"none\", \"TMM\", \"quantile\"),   min_counts_range = c(1, 5, 10),   min_proportion_range = c(0.1, 0.2, 0.3),   contrasts = NULL,   covariates_to_remove = NULL,   pval_col = \"adj.P.Val\",   logfc_col = \"logFC\",   pval_threshold = 0.05,   logFC_threshold = log2(1.5),   score_thresh = NULL,   score_quantile = 0.9,   stability_metric = \"stability_score\",   action = \"add\",   bootstrap_n = 0 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"expomicset MultiAssayExperiment object containing omics exposure data. base_formula formula specifying base model differential abundance analysis. abundance_col character string specifying assay column use abundance values. Default \"counts\". methods character vector methods differential abundance testing (e.g., \"limma_voom\", \"DESeq2\", \"edgeR_quasi_likelihood\"). scaling_methods character vector normalization methods apply (e.g., \"none\", \"TMM\", \"quantile\"). min_counts_range numeric vector minimum count thresholds test. Default c(1, 5, 10). min_proportion_range numeric vector minimum sample proportion thresholds test. Default c(0.1, 0.2, 0.3). contrasts character vector specifying contrasts differential analysis. Default NULL. covariates_to_remove character vector covariates iteratively remove model sensitivity testing. Default NULL. pval_col Name column containing adjusted p-values. Default \"adj.P.Val\". logfc_col Name column containing log fold changes. Default \"logFC\". pval_threshold Numeric threshold consider p-value significant. Default 0.05. logFC_threshold Minimum absolute log fold change filtering. Default log2(1.5). score_thresh numeric value specifying fixed threshold feature stability. NULL, determined based score_quantile. score_quantile numeric value (0 1) specifying quantile define stability threshold. Default 0.9. stability_metric name column stability table use scoring (e.g., \"stability_score\", \"logp_weighted_score\"). Default \"stability_score\". action Whether \"add\" results MultiAssayExperiment metadata \"get\" list. Default \"add\". bootstrap_n Number bootstrap iterations. Set 0 disable bootstrapping. Default 0.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"Either MultiAssayExperiment object results added metadata (action = \"add\") list : sensitivity_df dataframe differential abundance results across tested conditions. feature_stability dataframe summarizing stability scores feature. score_thresh threshold used stable feature selection.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"stability score can calculated various ways. default, stability_score used, multiplies proportion significant p-values across runs (presence_rate) consistency metric (effect_consistency). Users may specify alternative metrics like logp_weighted_score conservative feature prioritization. bootstrap_n > 0, entire sensitivity analysis repeated bootstrap_n times resampled versions dataset, summary statistics returned feature's stability.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"","code":"if (FALSE) { # \\dontrun{ result <- run_sensitivity_analysis(   expomicset = expom,   base_formula = ~ condition + batch,   methods = c(\"limma_voom\", \"DESeq2\"),   min_counts_range = c(5, 10),   stability_metric = \"logp_weighted_score\",   action = \"get\" ) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Exposure Variables — run_summarize_exposures","title":"Summarize Exposure Variables — run_summarize_exposures","text":"Computes summary statistics numeric exposure variables optionally stores results MultiAssayExperiment metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Exposure Variables — run_summarize_exposures","text":"","code":"run_summarize_exposures(expomicset, exposure_cols = NULL, action = \"add\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Exposure Variables — run_summarize_exposures","text":"expomicset MultiAssayExperiment object containing exposure data sample metadata. exposure_cols character vector exposure variable names summarize. NULL, numeric exposure variables included. action string specifying action take. Use \"add\" attach summary table metadata(expomicset) \"get\" return summary table directly. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Exposure Variables — run_summarize_exposures","text":"modified MultiAssayExperiment object (action = \"add\"), data frame summary statistics (action = \"get\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Exposure Variables — run_summarize_exposures","text":"function: Extracts sample-level exposure data using pivot_sample(). Filters user-specified exposures (exposure_cols) provided. Computes descriptive statistics numeric variable: Number values (n_values) Number NAs (n_na) Minimum, maximum, range Sum, median, mean Standard error mean 95% confidence interval mean Variance, standard deviation Coefficient variation (sd / mean) Merges result variable metadata stored metadata(expomicset)$var_info.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Exposure Variables — run_summarize_exposures","text":"","code":"if (FALSE) { # \\dontrun{ # Add summaries to metadata expom <- run_summarize_exposures(expom)  # Retrieve just the summary table summary_df <- run_summarize_exposures(expom, action = \"get\") } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","title":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","text":"Applies various transformation methods numeric exposure variables colData MultiAssayExperiment object improve normality.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","text":"","code":"transform_exposure(expomicset, exposure_cols = NULL, transform_method = \"best\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","text":"expomicset MultiAssayExperiment object. exposure_cols character vector column names colData(expomicset) transform. NULL, function attempt use metadata check_normality(). transform_method One \"none\", \"log2\", \"x_1_3\", \"sqrt\", \"boxcox_best\", \"best\" (default). \"best\" evaluates available methods chooses one improves normality.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","text":"MultiAssayExperiment object updated colData transformation results saved metadata(expomicset)$transformation.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","text":"Supported transformations include: \"none\": transformation \"log2\": Log base 2 minimum value shift \"x_1_3\": Cube root minimum value shift \"sqrt\": Square root minimum value shift \"boxcox_best\": Box-Cox power transformation based optimal lambda \"best\": Automatically selects transformation method best normalizes data (based Shapiro-Wilk test) \"boxcox_best\" transformation based Box-Cox method MASS package. Variables shifted ensure strictly positive values transformation. Lambda intervals interpreted follows: \\(\\lambda < -1.5\\): \\(1 / x^2\\) \\(-1.5 \\leq \\lambda < -0.75\\): \\(1 / x\\) \\(-0.75 \\leq \\lambda < -0.25\\): \\(1 / sqrt(x)\\) \\(-0.25 \\leq \\lambda < 0.25\\): \\(log(x)\\) \\(0.25 \\leq \\lambda < 0.75\\): \\(sqrt(x)\\) \\(0.75 \\leq \\lambda < 1.5\\): identity \\(\\lambda \\geq 1.5\\): \\(x^2\\)","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Exposure Variables in a MultiAssayExperiment — transform_exposure","text":"","code":"if (FALSE) { # \\dontrun{ transformed_mae <- transform_exposure(my_mae,                                       exposure_cols = c(\"pm25\", \"no2\"),                                       transform_method = \"best\") } # }"}]
