[{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to tidyexposomics","text":"","code":"# install the current development version remotes::install_github(\"BioNomad/tidyexposomics\")  # load the package library(tidyexposomics)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"command-structure","dir":"Articles","previous_headings":"","what":"Command Structure","title":"Introduction to tidyexposomics","text":"make package user-friendly, named functions intuitive. example, use following naming conventions:  provide functionality either add results existing object storing omics/exposure data return results directly using action = \"get\". suggest adding results, given pipeline steps tracked can output R console, plotted workflow diagram, exported Excel worksheet.","code":""},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"codebook-setup","dir":"Articles","previous_headings":"Exposure Metadata and Ontology Annotation","what":"Codebook Setup","title":"Introduction to tidyexposomics","text":"starting exposomics data analysis recommend codebook, information exposure variables. suggestions: Variable Name: name variable data set. Variable Description: concise description variable measures, including units (e.g., “urinary bisphenol (ng/mL)”). Variable Type: type variable, continuous, categorical, binary. Variable Period: period time variable measured, “lifetime”, “year”, “month”, “day”. Variable Location: location variable measured, “home”, “work”, “school”, “geospatial code”. Variable Ontology: ontology term associated variable.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"ontology-choices","dir":"Articles","previous_headings":"Exposure Metadata and Ontology Annotation","what":"Ontology Choices","title":"Introduction to tidyexposomics","text":"Variables captured codebook annotated ontology terms provide standardized vocabulary variables. recommend using following ontologies exposure outcome variables: Environment Exposure Ontology annotate exposure variables. Human Phenotype Ontology annotate outcome variables phenotypic data. Chemical Entities Biological Interest annotate chemical exposure variables. annotate ontologies? Interpretability: Ontology labels clarify ambiguous inconsistently named variables. Harmonization: can compare combine variables across datasets map term. Grouping: Ontologies allow collapse fine-grained exposures broader categories. Integration: Many public tools, knowledge graphs, repositories ontology-aware. can make results interoperable reusable.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"ontology-annotation-app","dir":"Articles","previous_headings":"Exposure Metadata and Ontology Annotation","what":"Ontology Annotation App","title":"Introduction to tidyexposomics","text":"help annotate exposure variables, provide lightweight shiny app: use app: Click Browse select exposure metadata file. can click variable ’d like link annotation term search Choose Ontology Term dropdown. select term, see short description term. done, click Apply Annotate save annotation. Now can group exposures larger categories selecting line choose ontology root depth level (lower number means general term). can click Apply Categorization apply selected categorization selected rows. ontology nothing variable, may manually enter category Category column. change Category Source manual linked ontology. annotated variables click Download Annotated CSV save annotated metadata file.","code":"# Launch the shiny app to annotate exposure variables ont_annot_app()"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Introduction to tidyexposomics","text":"get started need load data. create_exposomicset function used create MultiAssayExperiment object contains exposure omics data. quick introduction, MultiAssayExperiment object container storing multiple assays (e.g., omics data) associated metadata: Overview MultiAssayExperiment Object Structure. Subject level data captured within colData MultiAssayExperiment. Observations stored within experiments slots MultiAssayExperiment sampleMap used link data ( (MultiAssay Special Interest Group, 2025) ). use MultiAssayExperiment object store exposure omics data. create_expomicset function several arguments: codebook argument data frame contains information variables exposure metadata. column names must contain variable values column names exposure data frame, category contains general categories variable names. data frame created ontology annotation app! exposure argument data frame contains exposure metadata. omics argument list data frames contain omics data. row_data argument list data frames contain information rows omics data frame. going start loading example data pulled ISGlobal Exposome Data Challenge 2021 (Maitre et al., 2022). Specifically, examine exposures omics features relate asthma status. tutorial focus asthma patients lower socioeconomic status (SES): interested exposome affects health outcomes, let’s define metadata variables represent exposure variables.","code":"# Load Libraries library(tidyverse) library(tidyexposomics)  # Load the example data load_example_data()  # Create the expomicset object expom <- create_exposomicset(     codebook = annotated_cb,     exposure = meta,     omics = omics_list,     row_data = fdata ) # Keeping only samples with asthma status expom <- expom[, !is.na(expom$hs_asthma)] expom_1 <- expom[, expom$FAS_cat_None %in% c(\"Low\")] rm(expom) # Grab exposure variables exp_vars <- annotated_cb |>     filter(category %in% c(         \"exposure to oxygen molecular entity\",         \"aerosol\",         \"environmental zone\",         \"main group molecular entity\",         \"transition element molecular entity\",         \"exposure to environmental process\",         \"polyatomic entity\"     )) |>     pull(variable) |>     as.character()"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"missingness","dir":"Articles","previous_headings":"Quality Control","what":"Missingness","title":"Introduction to tidyexposomics","text":"Oftentimes collecting data, missing values. Let’s use plot_missing function determine missing values  see 10 variables exposure data missing data. Let’s take look :  see one variable, hs_wgtgain_None, nearly 30% missing values! can apply missingness filter using filter_missing function. na_thresh argument used set threshold missing values. example, na_thresh = 20, variable 20% missing values removed. set threshold 5% filter variables 5% missing values.","code":"expom_1 |>     plot_missing(         plot_type = \"summary\",         threshold = 0     ) expom_1 |>     plot_missing(         plot_type = \"lollipop\",         threshold = 0,         layers = \"Exposure\"     ) # Filter out variables with too many missing values expom_1 <- expom_1 |>     filter_missing(na_thresh = 5)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"imputation","dir":"Articles","previous_headings":"Quality Control","what":"Imputation","title":"Introduction to tidyexposomics","text":"Now filtered variables many missing values, can impute missing values. run_impute_missing function used impute missing values. can specify imputation method exposure omics data separately. exposure_impute_method argument used set imputation method exposure data, omics_impute_method argument used set imputation method omics data. omics_to_impute argument used specify omics data impute. impute exposure data given using missforest method, options imputation methods include: median: Imputes missing values median variable. mean: Imputes missing values mean variable. knn: Uses k-nearest neighbors impute missing values. mice: Uses Multivariate Imputation Chained Equations (MICE) method impute missing values. dep: Uses DEP method impute missing values. missforest: Uses MissForest method impute missing values. lod_sqrt2: Imputes missing values using square root lower limit detection (LOD) variable. useful variables lower limit detection, chemical exposures.","code":"# Impute missing values expom_1 <- expom_1 |>     run_impute_missing(         exposure_impute_method = \"missforest\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"filtering-omics-features","dir":"Articles","previous_headings":"Quality Control","what":"Filtering Omics Features","title":"Introduction to tidyexposomics","text":"can filter omics features based variance expression levels. filter_omics function used filter omics features. method argument used set method filtering. can use either: Variance: Filters features based variance. recommend omics based continuous measurements, log-transformed counts, M-values, protein intensities, metabolite concentrations. Expression: Filters features based expression levels. recommend omics many values may near-zero zero, RNA-seq data. assays argument used specify omics data filter. assay_name argument used specify assay filter. min_var, min_value, min_prop arguments used set minimum variance, minimum expression value, minimum proportion samples exceeding minimum value, respectively.","code":"# filter omics layers by variance and expression expom_1 <- expom_1 |>     filter_omics(         method = \"variance\",         assays = \"Methylation\",         assay_name = 1,         min_var = 0.05     ) |>     filter_omics(         method = \"variance\",         assays = \"Metabolomics\",         assay_name = 1,         min_var = 0.1     ) |>     filter_omics(         method = \"expression\",         assays = \"Gene Expression\",         assay_name = 1,         min_value = 1,         min_prop = 0.3     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"normality-check","dir":"Articles","previous_headings":"Quality Control","what":"Normality Check","title":"Introduction to tidyexposomics","text":"determining variable associations, important check normality data. run_normality_check function used check normality data. transform_exposure function used transform data make normal. transform_method set boxcox_best automatically select best transformation method based data. transform_method can manually set log2, sqrt, x_1_3 well. specify exposure_cols argument set columns transform. check normality exposure data, can use plot_normality_summary function. function plots normality data transformation. transformed argument set TRUE plot normality status transformed data.","code":"# Check variable normality & transform variables expom_1 <- expom_1 |>     # Check variable normality     run_normality_check(action = \"add\") |>     # Transform variables     transform_exposure(         transform_method = \"boxcox_best\",         exposure_cols = exp_vars     ) expom_1 |>     plot_normality_summary(         transformed = TRUE     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"principal-component-analysis","dir":"Articles","previous_headings":"Quality Control","what":"Principal Component Analysis","title":"Introduction to tidyexposomics","text":"identify spread data, can perform principal component analysis (PCA). run_pca function used perform PCA samples observations omics data frame. specify like log-transform exposure omics data performing PCA using log_trans_exp log_trans_omics arguments, respectively. automatically identify sample outliers based Mahalanobis distance, measure distance point distribution.  see sample outliers, variation captured first two principal components features samples. can filter samples using filter_sample_outliers function. understand relationship principal components exposures can correlate using run_correlation function. specify feature_type pcs principal components, specify set exposure variables, exp_vars, number principal components, n_pcs. set correlation_cutoff 0 pval_cutoff 1 initially include correlations. can visualize correlations plot_correlation_tile function. specify plotting feature_type pcs grab principal component correlation results. set significance threshold 0.05 pval_cutoff argument.  note particulate matter exposure PFHXS exposure (hs_pfhxs_m_Log2) associated principal components, indicating exposures driving variation data.","code":"# Perform principal component analysis expom_1 <- expom_1 |>     run_pca(         log_trans_exp = TRUE,         log_trans_omics = TRUE,         action = \"add\"     ) # Plot principal component analysis results expom_1 |>     plot_pca() # Filter out sample outliers expom_1 <- expom_1 |>     filter_sample_outliers(         outliers = c(\"s73\", \"s1183\", \"s376\", \"s899\", \"s828\", \"s993\")     ) expom_1 <- expom_1 |>     run_correlation(         feature_type = \"pcs\",         exposure_cols = exp_vars,         n_pcs = 20,         action = \"add\",         correlation_cutoff = 0,         pval_cutoff = 1     ) expom_1 |>     plot_correlation_tile(         feature_type = \"pcs\",         pval_cutoff = 0.05     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-summary","dir":"Articles","previous_headings":"Quality Control","what":"Exposure Summary","title":"Introduction to tidyexposomics","text":"can summarize exposure data using run_summarize_exposures function. function calculates summary statistics exposure variable, including number values, number missing values, minimum, maximum, range, sum, median, mean, standard error, confidence intervals. action argument set get return summary statistics data frame. specify exposure_cols argument set columns summarize.","code":"# Summarize exposure data expom_1 |>     run_summarize_exposures(         action = \"get\",         exposure_cols = exp_vars     ) |>     head() ## # A tibble: 6 × 27 ##   variable    n_values  n_na   min   max range   sum median  mean    se ci_lower ##   <chr>          <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl>    <dbl> ## 1 h_pm10_rat…      139     0  2.29  3.86  1.57  446.   3.17  3.21  0.02     3.16 ## 2 h_pm25_rat…      139     0  3.06  4.66  1.6   542.   3.89  3.9   0.02     3.85 ## 3 hs_bpa_mad…      139     0  0    12.8  12.8  1242.   8.75  8.94  0.12     8.7  ## 4 hs_cs_c_Lo…      139     0  0     2.35  2.35  157.   1.08  1.13  0.04     1.04 ## 5 hs_cu_m_Lo…      139     0  2.29  2.41  0.12  326.   2.35  2.35  0        2.34 ## 6 hs_mepa_ma…      139     0  0.86 14.1  13.2   956.   7.49  6.88  0.21     6.47 ## # ℹ 16 more variables: ci_upper <dbl>, variance <dbl>, sd <dbl>, ## #   coef_var <dbl>, period <chr>, location <chr>, description <chr>, ## #   var_type <chr>, transformation <chr>, selected_ontology_label <chr>, ## #   selected_ontology_id <chr>, root_id <chr>, root_label <chr>, ## #   category <chr>, category_source <chr>, transformation_applied <chr>"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-visualization","dir":"Articles","previous_headings":"Quality Control","what":"Exposure Visualization","title":"Introduction to tidyexposomics","text":"visualize exposure data, can use plot_exposures function. function allows us plot exposure data variety ways. plot exposure data using boxplot. exposure_cat argument used set exposure category plot. Additionally, specify exposure_cols plot certain exposures. plot_type argument used set type plot create. use boxplot, also use ridge plot.  see significant differences aerosol exposure males females.","code":"# Plot exposure data expom_1 |>     plot_exposures(         group_by = \"e3_sex_None\",         exposure_cat = \"aerosol\",         plot_type = \"boxplot\",         ylab = \"Values\",         title = \"Aerosol Exposure by Sex\"     )"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"sample-clustering","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Sample Clustering","title":"Introduction to tidyexposomics","text":"run_cluster_samples function used cluster samples based exposure data. clustering_approach argument used set clustering approach automatically identify clusters. use dynamic approach, uses dynamic tree cut method identify clusters. However, may choose options well: gap: Gap statistic method (default); estimates optimal k comparing within-cluster dispersion reference data. diana: Divisive hierarchical clustering (DIANA); chooses k based largest drop dendrogram height. elbow: Elbow method; detects point maximum curvature within-cluster sum squares (WSS) determine k. dynamic: Dynamic tree cut; adaptively detects clusters dendrogram structure without needing predefine k. density: Density-based clustering (via densityClust); identifies clusters based local density peaks distance space. plot sample clusters using plot_sample_clusters function. function plots z-scored values exposure data sample, colored cluster assignment. exposure_cols argument used set columns plot.  see five clusters, largely driven particulate matter/aerosol exposure. Although worth noting maternal PFHXS exposure (hs_pfhxs_m_Log2) appears strongly drive Groups 3 4.","code":"# Sample clustering expom_1 <- expom_1 |>     run_cluster_samples(         exposure_cols = exp_vars,         clustering_approach = \"dynamic\",         action = \"add\"     ) ##  ..cutHeight not given, setting it to 1620  ===>  99% of the (truncated) height range in dendro. ##  ..done. # Plot sample clusters expom_1 |>     plot_sample_clusters(         exposure_cols = exp_vars     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-correlations","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Exposure Correlations","title":"Introduction to tidyexposomics","text":"run_correlation function can used correlate exposure variables. feature_type argument used set type features correlate. use exposures indicate correlating exposure variables. correlation_cutoff argument used set minimum correlation association. use cutoff 0.3, can adjusted based data. visualize exposure correlations, can use plot_circos_correlation function. plot circos plot. function creates circular plot exposure correlations. correlation_cutoff argument used set minimum correlation score association. use cutoff 0.3.  see particulate matter exposure variables highly correlated also correlated maternal pregnancy BPA (hs_bpa_madj_Log2) childhood PCB-153 (hs_pcb153_cadj_Log2) exposure.","code":"expom_1 <- expom_1 |>     run_correlation(         feature_type = \"exposures\",         action = \"add\",         exposure_cols = exp_vars,         correlation_cutoff = 0.3     ) expom_1 |>     plot_circos_correlation(         feature_type = \"exposures\",         corr_threshold = 0.3,         exposure_cols = exp_vars     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-wide-association-exwas","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Exposure-wide association (ExWAS)","title":"Introduction to tidyexposomics","text":"run_association function used run association analysis. source argument used set source data associate. outcome argument used set outcome variable. feature_set argument used set features include analysis. covariates argument used set covariates include analysis. action argument set add add results existing object. family argument used set family model. use binomial binary outcome. visualize results ExWAS analysis, can use plot_association function. function plots association results specified features. terms argument used set features plot. filter_thresh argument used set threshold filtering results. filter_col argument used set column filter . use p.value filter p-value association. can also include adjusted R^2 using r2_col argument.  see particulate matter PFNA (hs_pfna_c_Log2) associated asthma status adjusting age, biological sex, cohort. Although p-value threshold association quite generous. can also associate omics features outcome interest using run_association function. specify additional argument, top_n, used set top number omics features include per omics layer. can visualize results using Manhattan plot. plot_manhattan function used plot results. pval_thresh argument used set p-value threshold significance. vars_to_label argument used set variables label plot. min_per_cat argument used set minimum number significant features per category include plot. panel_sizes argument used set size panel plot.","code":"# Perform ExWAS Analysis expom_1 <- expom_1 |>     run_association(         source = \"exposures\",         outcome = \"hs_asthma\",         feature_set = exp_vars,         covariates = c(             \"hs_child_age_None\",             \"e3_sex_None\",             \"h_cohort\"         ),         action = \"add\",         family = \"binomial\"     ) expom_1 |>     plot_association(         subtitle = paste(             \"Covariates:\",             \"Age,\",             \"Biological Sex, \",             \"Cohort\"         ),         source = \"exposures\",         terms = exp_vars,         filter_thresh = 0.15,         filter_col = \"p.value\",         r2_col = \"adj_r2\"     ) # Perform ExWAS Analysis expom_1 <- expom_1 |>     run_association(         outcome = \"hs_asthma\",         source = \"omics\",         covariates = c(             \"hs_child_age_None\",             \"e3_sex_None\",             \"h_cohort\"         ),         top_n = 500,         action = \"add\",         family = \"binomial\"     ) expom_1 |>     plot_manhattan(         min_per_cat = 0,         feature_col = \"feature_clean\",         vars_to_label = c(             \"TC01000261.hg.1\",             \"TC15000063.hg.1\",             \"cg14780466\",             \"hs_pfna_c_Log2\"         ),         panel_sizes = c(1, 3, 1, 1, 3, 1, 1),         facet_angle = 0     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposome-scores","dir":"Articles","previous_headings":"Sample-Exposure Association","what":"Exposome Scores","title":"Introduction to tidyexposomics","text":"can also calculate exposome scores, summary measure exposure. run_exposome_score function used calculate exposome score. exposure_cols argument used set columns use exposome score. score_type argument used set type score calculate. use: median: Calculates median exposure variables. mean: Calculates mean exposure variables. sum: Calculates sum exposure variables. pca: Calculates first principal component exposure variables. irt: Uses Item Response Theory calculate exposome score. quantile: Calculates quantile exposure variables. var: Calculates variance exposure variables. score_column_name argument used set name column store exposome score . define score PFAS using variety different methods demonstrate use association asthma status. can associate exposome scores outcome interest using run_association function, just like . However, time specify feature_set exposome scores just calculated. plot results exposome score association outcome, can use plot_association function:  see scores associated increased probability asthma. item response theory (IRT) score one significant.","code":"# determine which PFAS to use pfas <- c(\"hs_pfhxs_m_Log2\", \"hs_pfna_c_Log2\")  expom_1 <- expom_1 |>     run_exposome_score(         exposure_cols = pfas,         score_type = \"median\",         score_column_name = \"exposome_median_score\"     ) |>     run_exposome_score(         exposure_cols = pfas,         score_type = \"pca\",         score_column_name = \"exposome_pca_score\"     ) |>     run_exposome_score(         exposure_cols = pfas,         score_type = \"irt\",         score_column_name = \"exposome_irt_score\"     ) |>     run_exposome_score(         exposure_cols = pfas,         score_type = \"quantile\",         score_column_name = \"exposome_quantile_score\"     ) |>     run_exposome_score(         exposure_cols = pfas,         score_type = \"var\",         score_column_name = \"exposome_var_score\"     ) # Associate Exposome Scores with Outcome expom_1 <- expom_1 |>     run_association(         outcome = \"hs_asthma\",         source = \"exposures\",         feature_set = c(             \"exposome_median_score\",             \"exposome_pca_score\",             \"exposome_irt_score\",             \"exposome_quantile_score\",             \"exposome_var_score\"         ),         covariates = c(             \"hs_child_age_None\",             \"e3_sex_None\",             \"h_cohort\"         ),         action = \"add\",         family = \"binomial\"     ) expom_1 |>     plot_association(         subtitle = \"Covariates: Age, Biological Sex, Cohort\",         source = \"exposures\",         terms = c(             \"exposome_median_score\",             \"exposome_pca_score\",             \"exposome_irt_score\",             \"exposome_quantile_score\",             \"exposome_var_score\"         ),         filter_col = \"p.value\",         filter_thresh = 0.05     )"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"differential-abundance-1","dir":"Articles","previous_headings":"Differential Abundance","what":"Differential Abundance","title":"Introduction to tidyexposomics","text":"also provide functionality assess differentially abundant features associated particular outcome across several omics layers. run_differential_abundance function used run differential abundance analysis. formula argument used set formula model. method argument used set method use differential abundance analysis. use limma_trend method, popular method differential abundance analysis. scaling_method argument used set scaling method use. use none, also use quantile TMM. action argument set add add results existing object. Using volcano plot, can visualize results differential abundance analysis. plot_volcano function used plot results. pval_col argument used set column containing p-values. pval_thresh argument used set p-value threshold significance. logFC_thresh argument used set log fold change threshold significance. top_n_label argument used set number top features label plot. nrow argument used set number rows facet layout. can use feature_col specify feature name column plot. set feature_clean column contains gene/metabolite name information per feature. Note: set pval_col P.Value purposes example, recommend keeping default adj.P.Val use adjusted p-values.","code":"# Run differential abundance analysis expom_1 <- expom_1 |>     run_differential_abundance(         formula = ~ hs_asthma + hs_child_age_None + e3_sex_None + h_cohort,         method = \"limma_trend\",         scaling_method = \"none\",         action = \"add\"     ) # Plot Differential Abundance Results expom_1 |>     plot_volcano(         top_n_label = 3,         feature_col = \"feature_clean\",         logFC_thresh = log2(1),         pval_thresh = 0.05,         pval_col = \"P.Value\",         logFC_col = \"logFC\",         nrow = 1     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"sensitivity-analysis","dir":"Articles","previous_headings":"Differential Abundance","what":"Sensitivity Analysis","title":"Introduction to tidyexposomics","text":"Depending pre-processing steps, results differential abundance analysis may vary. sensitivity_analysis function used perform sensitivity analysis determine robustness results. determine feature still differentially abundant different minimum values, proportions, scaling methods used, inclusion covariates, bootstrapping. define stability score based number times feature found differentially abundant different conditions well consistency effect size: : \\[ Stability\\ Score = \\frac{\\sum_i{(p_i < \\alpha)}}{N} * \\frac{1}{1 + \\frac{\\sigma_{\\beta}}{\\mu_{|\\beta|}}}\\] : \\(p_i\\) p-value \\(^{th}\\) test \\(\\alpha\\) significance threshold \\(\\beta\\) log fold change \\(N\\) number tests \\(\\sigma_{\\beta}\\) standard deviation effect size estimates \\(\\mu_{|\\beta|}\\) mean absolute value effect size estimates. first term captures proportion tests significant, second term captures consistency effect size estimates. stability score ranges 0 1. stability score 1 indicates feature always found differentially abundant, stability score 0 indicates feature never found differentially abundant. Besides , provide score metrics well: presence_rate: Proportion runs feature’s p-value specified threshold (selection frequency). effect_consistency: Inverse coefficient variation log fold-changes; measures effect size stability across runs. stability_score: Hybrid score combining presence_rate effect_consistency, capturing reproducibility signal strength. mean_log_p: Average negative log-transformed p-values; represents overall statistical signal strength. logp_weighted_score: Product mean_log_p effect_consistency; highlights consistently strong features. sd_logFC: Standard deviation log fold-change estimates; quantifies variability effect sizes. iqr_logFC: Interquartile range log fold-changes; provides robust measure effect size spread. cv_logFC: Coefficient variation log fold-changes; reflects relative variability effect size. sign_flip_freq: Proportion runs sign effect size differs overall average direction. sd_log_p: Standard deviation log-transformed p-values; indicates variability statistical signal. plot sensitivity analysis results using plot_sensitivity_summary function. stability_score_thresh argument used set stability score threshold significance. use threshold 0.31, can adjusted needed.","code":"# Perform Sensitivity Analysis expom_1 <- expom_1 |>     run_sensitivity_analysis(         base_formula = ~ hs_asthma + hs_child_age_None + h_cohort,         methods = c(\"limma_trend\"),         scaling_methods = c(\"none\"),         covariates_to_remove = c(             \"hs_child_age_None\",             \"e3_sex_None\",             \"h_cohort\"         ),         pval_col = \"P.Value\",         logfc_col = \"logFC\",         logFC_threshold = log2(1),         pval_threshold = 0.05,         stability_metric = \"stability_score\",         bootstrap_n = 10,         action = \"add\"     ) # Plot sensitivity analysis results expom_1 |>     plot_sensitivity_summary(         stability_score_thresh = 0.31,         stability_metric = \"stability_score\"     )"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"multi-omics-integration-1","dir":"Articles","previous_headings":"Multi-Omics Integration","what":"Multi-Omics Integration","title":"Introduction to tidyexposomics","text":"differential abundance analysis per omics layer can deliver insights omic associated particular outcome, may want leverage methods integrate multiple omics layers. run_multiomics_integration function used integrate multiple omics layers. use either MCIA, RGCCA, MOFA, DIABLO method integrate omics layers: MCIA: Multiple Co-inertia Analysis, method uses canonical correlation analysis integrate multiple omics layers. use nipalsMCIA algorithm compute co-inertia scores nipalsMCIA package (nipalsMCIA). RGCCA : Generalized canonical correlation flexible multi-block integration implemented using RGCCA package (Regularized Sparse Generalized Ca…). MOFA: Multi-Omics Factor Analysis, method uses factor analysis integrate multiple omics layers. MOFA implemented using MOFA2 package (MOFA2). DIABLO: DIABLO: Supervised multi-block PLS outcome-aligned latent factors implemented using mixOmics package (mixOmics). interested integrating omics layers end goal identifying multi-omics features associated asthma status. , use DIABLO method. can use plot_factor_summary visualize omics contribute factors.  see factors largely driven features methylation gene expression assays.","code":"# Perform multi-omics integration expom_1 <- expom_1 |>     run_multiomics_integration(         method = \"DIABLO\",         n_factors = 5,         outcome = \"hs_asthma\",         action = \"add\"     ) # Plot multi-omics factor summary expom_1 |>     plot_factor_summary(midpoint = 4)"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"factor-analysis","dir":"Articles","previous_headings":"Multi-Omics Integration","what":"Factor Analysis","title":"Introduction to tidyexposomics","text":"methods designed identify factors can associate outcome variable. use run_association function identify factors associated asthma status controlling child age, sex, cohort. Now let’s see factors associated asthma status adjusting child age, sex, cohort:  see several factors associated outcome. Factors loading scores indicate strength association factor features. can extract top features, 90th percentile, per omic, associated factors interest. set pval_col pval_thresh filter association results grab factors pass thresholds. However, specify specific factors factors argument . can visualize top features associated factor using plot_top_factor_features function. top_n argument used set number top features plot. factors argument used set factors plot.  identify common features across factors, can use run_factor_overlap function. function identify features shared across top factor features. see 703 features shared across factors.","code":"# Identify factors that correlate with the outcome expom_1 <- expom_1 |>     run_association(         source = \"factors\",         outcome = \"hs_asthma\",         feature_set = exp_vars,         covariates = c(             \"hs_child_age_None\",             \"e3_sex_None\",             \"h_cohort\"         ),         action = \"add\",         family = \"binomial\"     ) expom_1 |>     plot_association(         source = \"factors\",         subtitle = \"Covariates: Age, Sex, Cohort\",         filter_col = \"p_adjust\",         filter_thresh = 0.05,         r2_col = \"adj_r2\"     ) # Extract top features that contribute to a factor expom_1 <- expom_1 |>     extract_top_factor_features(         method = \"percentile\",         pval_col = \"p_adjust\",         pval_thresh = 0.05,         percentile = 0.95,         action = \"add\"     ) # Plot top factor features expom_1 |>     plot_top_factor_features(         top_n = 15,         factors = c(             \"Methylation comp3\",             \"Gene Expression comp3\",             \"Methylation comp1\"         ),         feature_col = \"feature_clean\"     ) # Determine which features drive multiple factors expom_1 <- expom_1 |>     run_factor_overlap()"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-omics-association-1","dir":"Articles","previous_headings":"Exposure-Omics Association","what":"Exposure-Omics Association","title":"Introduction to tidyexposomics","text":"Now option correlate either top factor features, differentially abundant features, user-specified omics features (using variable map, data frame two columns, exp_name name omics assay, variable name molecular feature) exposures. correlate features driving multiple latent factors exposures. grab features, grab metadata MultiAssayExperiment object. correlation_cutoff used set minimum correlation score, pval_cutoff used set maximum p-value association. can plot results exposure-omics association analysis using plot_correlation_summary function. set mode summary, plot number associations per exposure feature type. feature_type argument used set type features plot. use omics, top factor features.  note gene expression features greater number associations exposures. Among exposures, see aerosols greatest number associations features, may reflect larger number aerosol variables. may also useful identify exposures correlated similar molecular features. can plot_circos_correlation function. function plot circos plot exposures shared features. feature_type argument used set correlation results use analysis. use omics feature set, plots feature-exposure correlation information. cutoff argument used set minimum number shared features plot. set shared_cutoff 1, means exposures share least one feature plotted.  see particulate matter exposures correlated many features. However, also see maternal methyl paraben exposure (hs_mepa_madj_Log2) correlated many features, suggesting exposure may similar effects molecular features.","code":"# Grab top common factor features and ensure # feature is renamed to variable for the variable_map top_factor_features <- expom_1 |>     extract_results(result = \"multiomics_integration\") |>     pluck(\"common_top_factor_features\") |>     dplyr::select(         variable = feature,         exp_name     )  # Correlate top factor features with exposures expom_1 <- expom_1 |>     # Perform correlation analysis between factor features     # and exposures     run_correlation(         feature_type = \"omics\",         variable_map = top_factor_features,         exposure_cols = exp_vars,         action = \"add\",         correlation_cutoff = 0.2,         pval_cutoff = 0.05,         cor_pval_column = \"p.value\"     ) |>     # Perform correlation analysis between factor features     run_correlation(         feature_type = \"omics\",         variable_map = top_factor_features,         feature_cors = TRUE,         action = \"add\",         correlation_cutoff = 0.2,         pval_cutoff = 0.05,         cor_pval_column = \"p.value\"     ) expom_1 |>     plot_correlation_summary(         mode = \"summary\",         feature_type = \"omics\"     ) # Plot Shared Feature Correlations Between Exposures expom_1 |>     plot_circos_correlation(         feature_type = \"omics\",         shared_cutoff = 1,         midpoint = 3     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"network-analysis","dir":"Articles","previous_headings":"Exposure-Omics Association","what":"Network Analysis","title":"Introduction to tidyexposomics","text":"run_create_network function used create network exposures omics features. correlation results used create network. feature_type argument used set type features use network. choose following: degs: Differentially abundant features correlated exposures. factors: Factor features correlated exposures. omics: User specified omics features correlated exposures. create networks based two correlation tables generated : omics: Correlations omics exposure variables. omics_feature_cor: Correlation just omics features. allows us quantify bipartite graph exposures omics features graph just omics features. plot network can use plot_network function. network argument used set type network plot. top_n_nodes argument used set number nodes plot. node_color_var argument used set variable color nodes . label argument used set whether label nodes. can label top n nodes, default 5 nodes based centrality. Additionally, can choose label certain nodes using nodes_to_label argument. can also include network statistics using include_stats argument.  note network highly connected, particulate matter methyl paraben exposures connections omics features. briefly explain metrics mentioned: Nodes: Number nodes included graph. Edges: Number connections nodes graph. Components: Number disconnected subgraphs. Diameter: longest shortest path two nodes. Mean Distance: average shortest path two nodes. Modularity: measure division graph, higher modularity indicates nodes within community densely connected compared nodes different communities.","code":"expom_1 <- expom_1 |>     run_create_network(         feature_type = \"omics_feature_cor\",         action = \"add\"     ) |>     run_create_network(         feature_type = \"omics\",         action = \"add\"     ) expom_1 |>     plot_network(         network = \"omics\",         top_n_nodes = 100,         include_stats = TRUE,         cor_thresh = 0.2,         node_color_var = \"group\",         label = TRUE,         label_top_n = 5     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"exposure-omics-impact-network-analysis","dir":"Articles","previous_headings":"Exposure-Omics Association","what":"Exposure-Omics Impact Network Analysis","title":"Introduction to tidyexposomics","text":"bipartite graph describes exposures associated omics features. However, describe exposures associated features central feature-graph (.e. exposures associated features central peripheral graph?). answer question, can use run_exposure_impact function calculate centrality metrics omics features associated given exposure. Centrality computed feature-graph. Centrality metrics used identify features central network may important context exposure-omics relationships. centrality metrics included : Mean Betweenness Centrality: Measures often node lies shortest path nodes high values indicate potential intermediates. Mean Closeness Centrality: Measures close node others network high values indicate faster access nodes. Mean Degree: average number direct connections edges node . Mean Eigenvector Centrality: Measures well-connected node well-connected neighbors , high values suggest influence well-connected cluster. plot results exposure-omics impact analysis, can use plot_exposure_impact function. set feature_type omics, means plotting network metrics omics features correlated exposures. min_per_group argument used set minimum number features per group plot. useful filtering exposures enough associated features.  see maternal triclosan (hs_trcs_madj_Log2) exposure associated omics features central network, despite greatest number features associated . suggests maternal triclosan exposure may significant impact omics features, even associated many features exposures.","code":"# Run exposure-omics impact analysis expom_1 <- expom_1 |>     run_exposure_impact(feature_type = \"omics\") # Plot exposure-omics impact results expom_1 |>     plot_exposure_impact(         feature_type = \"omics\",         min_per_group = 10     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"enrichment-analysis","dir":"Articles","previous_headings":"","what":"Enrichment Analysis","title":"Introduction to tidyexposomics","text":"benefit grouping exposures categories can perform enrichment analysis associated features determine broad categories exposures associated features. run_enrichment function used perform enrichment analysis. enrich following feature types: degs: Differentially abundant features. degs_robust: Robust differentially abundant features sensitivity analysis. omics: User chosen features. factor_features: Multi-omics factor features either factor_type = “common_top_factor_features” “top_factor_features”. degs_cor: Differentially abundant features correlated set exposures. omics_cor: User chosen features correlated set exposures. factor_features_cor: Multi-omics factor features correlated set exposures. run enrichment analysis chosen factor features correlated exposures. specify feature_col represent column feature metadata IDs can mapped (.e. gene names). performing Gene ontology enrichment powered fenr package (fenr ). Note specify clustering_approach. cluster enrichment terms molecular feature overlap.","code":"# Run enrichment analysis on factor features correlated with exposures expom_1 <- expom_1 |>     run_enrichment(         feature_type = c(\"omics_cor\"),         feature_col = \"feature_clean\",         db = c(\"GO\"),         species = \"goa_human\",         fenr_col = \"gene_symbol\",         padj_method = \"none\",         pval_thresh = 0.1,         min_set = 1,         max_set = 800,         clustering_approach = \"diana\",         action = \"add\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"enrichment-visualizations","dir":"Articles","previous_headings":"Enrichment Analysis","what":"Enrichment Visualizations","title":"Introduction to tidyexposomics","text":"visualize enrichment results provide several options: dot`plot: dot plot showing top enriched terms. size dots represents number features associated term, color represents significance term. cnet: network plot showing relationship features enriched terms. network: network plot showing relationship enriched terms. heatmap: heatmap showing relationship features enriched terms. summary: summary figure enrichment results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"enrichment-summary","dir":"Articles","previous_headings":"Enrichment Analysis > Enrichment Visualizations","what":"Enrichment Summary","title":"Introduction to tidyexposomics","text":"summarize enrichment results, can use plot_enrichment function plot_type argument set summary. plot summary enrichment results, showing: number exposure categories per enrichment term group. number features driving enrichment term group. p-value distribution enrichment term group. number terms enrichment term group. total number terms per experiment name. overlap enrichment terms experiments (.e. gene expression methylation).  see just features associated “polyatomic entity” exposures seem enriched. Additionally, appears overlap terms methylation gene expression results.","code":"expom_1 |>     plot_enrichment(         feature_type = \"omics_cor\",         plot_type = \"summary\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"dotplot","dir":"Articles","previous_headings":"Enrichment Analysis > Enrichment Visualizations","what":"DotPlot","title":"Introduction to tidyexposomics","text":"setting plot_type dotplot can create dotplot show omics exposure categories associated terms. specifying top_n_genes can add frequent features particular enrichment term group.","code":"expom_1 |>     plot_enrichment(         feature_type = \"omics_cor\",         plot_type = \"dotplot\",         top_n = 15,         add_top_genes = TRUE,         top_n_genes = 5     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"term-network-plot","dir":"Articles","previous_headings":"Enrichment Analysis > Enrichment Visualizations","what":"Term Network Plot","title":"Introduction to tidyexposomics","text":"can set plot_type network understand enrichment terms individually connected.  individual term level, see differ omics layer, gene expression driving terms related protein binding methylation data driving terms related lipid metabolism.","code":"expom_1 |>     plot_enrichment(         feature_type = \"omics_cor\",         plot_type = \"network\",         label_top_n = 2     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"heatmap","dir":"Articles","previous_headings":"Enrichment Analysis > Enrichment Visualizations","what":"Heatmap","title":"Introduction to tidyexposomics","text":"Setting plot_type heatmap can help us understand genes driving enrichment terms. additional benefit able color tiles Log_2_Fold Change differential abundance testing. examine group 5, given seems driven terms multiple omics layers.  see methylation features strongest fold change respect asthma status. Interestingly, see methylation CYP2E1, enzyme responsible toxicant metabolism, downregulated asthma correlated exposures polyatomic entity category containing chemicals like triclosan, BPA several PFAS.","code":"expom_1 |>     plot_enrichment(         feature_type = \"omics_cor\",         go_groups = \"Group_5\",         plot_type = \"heatmap\",         heatmap_fill = TRUE,         feature_col = \"feature_clean\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"cnet-plot","dir":"Articles","previous_headings":"Enrichment Analysis > Enrichment Visualizations","what":"Cnet Plot","title":"Introduction to tidyexposomics","text":"Another way visualize information cnet plot, enrichment terms connected genes driving .","code":"expom_1 |>     plot_enrichment(         feature_type = \"omics_cor\",         go_groups = \"Group_5\",         plot_type = \"cnet\",         feature_col = \"feature_clean\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"custom-analysis","dir":"Articles","previous_headings":"","what":"Custom Analysis","title":"Introduction to tidyexposomics","text":"provide functionality access underlying data MultiAssayExperiment object construct tibbles analysis: pivot_sample: Pivot sample data tibble samples rows exposures columns. pivot_feature: Pivot feature metadata tibble features rows feature metadata columns. pivot_exp: Pivot sample experiment assay data tibble samples rows sample metadata columns. Additionally, column values specified features specified assays.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pivot-sample","dir":"Articles","previous_headings":"Custom Analysis","what":"Pivot Sample","title":"Introduction to tidyexposomics","text":"Let’s check pivot_sample function. function pivots sample data tibble samples rows exposures columns. use functionality count number asthmatics per sex:","code":"# Pivot sample data to a tibble expom_1 |>     pivot_sample() |>     head() ## # A tibble: 6 × 357 ##   .sample h_abs_ratio_preg_Log h_no2_ratio_preg_Log hs_no2_dy_hs_h_Log ##   <chr>                  <dbl>                <dbl>              <dbl> ## 1 s224                 1.01                    3.21               3.32 ## 2 s873                -0.00513                 2.48               3.32 ## 3 s846                 0.841                   2.90               3.36 ## 4 s1019               -0.0663                  2.89               3.08 ## 5 s1099               -0.137                   2.13               2.65 ## 6 s725                 0.354                   3.18               2.69 ## # ℹ 353 more variables: hs_no2_wk_hs_h_Log <dbl>, hs_no2_yr_hs_h_Log <dbl>, ## #   hs_pm25abs_dy_hs_h_Log <dbl>, hs_pm25abs_wk_hs_h_Log <dbl>, ## #   hs_pm25abs_yr_hs_h_Log <dbl>, h_accesslines300_preg_dic0 <dbl>, ## #   h_accesspoints300_preg_Log <dbl>, h_builtdens300_preg_Sqrt <dbl>, ## #   h_connind300_preg_Sqrt <dbl>, h_fdensity300_preg_Log <dbl>, ## #   h_frichness300_preg_None <dbl>, h_landuseshan300_preg_None <dbl>, ## #   h_popdens_preg_Sqrt <dbl>, h_walkability_mean_preg_None <dbl>, … expom_1 |>     pivot_sample() |>     group_by(hs_asthma, e3_sex_None) |>     summarise(n = n()) ## # A tibble: 4 × 3 ## # Groups:   hs_asthma [2] ##   hs_asthma e3_sex_None     n ##       <dbl> <fct>       <int> ## 1         0 female         67 ## 2         0 male           52 ## 3         1 female         10 ## 4         1 male           10"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pivot-feature","dir":"Articles","previous_headings":"Custom Analysis","what":"Pivot Feature","title":"Introduction to tidyexposomics","text":"pivot_feature function pivots feature metadata tibble features rows feature metadata columns. can useful exploring feature metadata flexible way. use functionality count number features per omics layer, filter features based metadata. example, can count number features per omics layer:","code":"# Pivot feature data to a tibble expom_1 |>     pivot_feature() |>     head() ## # A tibble: 6 × 44 ##   .exp_name     .feature transcript_cluster_id probeset_id seqname strand  start ##   <chr>         <chr>    <chr>                 <chr>       <chr>   <chr>   <int> ## 1 Gene Express… TC01000… TC01000001.hg.1       TC01000001… chr1    +       11869 ## 2 Gene Express… TC01000… TC01000002.hg.1       TC01000002… chr1    +       29554 ## 3 Gene Express… TC01000… TC01000003.hg.1       TC01000003… chr1    +       69091 ## 4 Gene Express… TC01000… TC01000005.hg.1       TC01000005… chr1    +      317811 ## 5 Gene Express… TC01000… TC01000007.hg.1       TC01000007… chr1    +      321146 ## 6 Gene Express… TC01000… TC01000009.hg.1       TC01000009… chr1    +      367640 ## # ℹ 37 more variables: stop <int>, total_probes <int>, gene_assignment <chr>, ## #   mrna_assignment <chr>, notes <chr>, phase <chr>, TC_size <dbl>, ## #   TSS_Affy <int>, EntrezeGeneID_Affy <chr>, GeneSymbol_Affy <chr>, ## #   GeneSymbolDB <chr>, GeneSymbolDB2 <chr>, mrna_ID <chr>, mrna_DB <chr>, ## #   mrna_N <int>, notesYN <chr>, geneYN <chr>, genes_N <dbl>, CallRate <dbl>, ## #   fil1 <chr>, feature_clean <chr>, Forward_Sequence <chr>, SourceSeq <chr>, ## #   Random_Loci <chr>, Methyl27_Loci <chr>, UCSC_RefGene_Name <chr>, … # Count the number of features per omic layer expom_1 |>     pivot_feature() |>     group_by(.exp_name) |>     summarise(n = n()) ## # A tibble: 3 × 2 ##   .exp_name           n ##   <chr>           <int> ## 1 Gene Expression 28714 ## 2 Metabolomics       99 ## 3 Methylation     19591"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pivot-experiment","dir":"Articles","previous_headings":"Custom Analysis","what":"Pivot Experiment","title":"Introduction to tidyexposomics","text":"Now want grab assay data particular experiment, can pivot_exp. Let’s try grabbing assay values cg25330361 probe (methylation probe CYP2E1) Methylation experiment: can use functionality create custom plots analyses based exposure feature data. example, can plot methylation levels CYP2E1 asthma status:","code":"# Pivot experiment data to a tibble expom_1 |>     pivot_exp(         omics_name = \"Methylation\",         features = \"cg25330361\"     ) |>     head() ## # A tibble: 6 × 375 ##   exp_name    .feature  .sample counts h_abs_ratio_preg_Log h_no2_ratio_preg_Log ##   <chr>       <chr>     <chr>    <dbl>                <dbl>                <dbl> ## 1 Methylation cg253303… s224     0.826              1.01                    3.21 ## 2 Methylation cg253303… s873     1.16              -0.00513                 2.48 ## 3 Methylation cg253303… s1019    0.974             -0.0663                  2.89 ## 4 Methylation cg253303… s725     1.06               0.354                   3.18 ## 5 Methylation cg253303… s1025    0.656              0.0545                  2.76 ## 6 Methylation cg253303… s242     0.968              0.338                   2.92 ## # ℹ 369 more variables: hs_no2_dy_hs_h_Log <dbl>, hs_no2_wk_hs_h_Log <dbl>, ## #   hs_no2_yr_hs_h_Log <dbl>, hs_pm25abs_dy_hs_h_Log <dbl>, ## #   hs_pm25abs_wk_hs_h_Log <dbl>, hs_pm25abs_yr_hs_h_Log <dbl>, ## #   h_accesslines300_preg_dic0 <dbl>, h_accesspoints300_preg_Log <dbl>, ## #   h_builtdens300_preg_Sqrt <dbl>, h_connind300_preg_Sqrt <dbl>, ## #   h_fdensity300_preg_Log <dbl>, h_frichness300_preg_None <dbl>, ## #   h_landuseshan300_preg_None <dbl>, h_popdens_preg_Sqrt <dbl>, … # Plot the distribution of a specific feature across samples expom_1 |>     pivot_exp(         omics_name = \"Methylation\",         features = \"cg25330361\"     ) |>     ggplot(aes(         x = as.character(hs_asthma),         y = log2(counts + 1),         color = as.character(hs_asthma),         fill = as.character(hs_asthma)     )) +     geom_boxplot(alpha = 0.5) +     geom_jitter(alpha = 0.1) +     ggpubr::geom_pwc(         label = \"{p.adj.format}{p.adj.signif}\"     ) +     theme_minimal() +     ggpubr::rotate_x_text(angle = 45) +     ggsci::scale_color_cosmic() +     ggsci::scale_fill_cosmic() +     labs(         x = \"\",         y = expression(Log[2] * \"Abd.\"),         fill = \"Asthma Status\",         color = \"Asthma Status\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"pipeline-summary","dir":"Articles","previous_headings":"","what":"Pipeline Summary","title":"Introduction to tidyexposomics","text":"summarize steps taken analysis, can use run_pipeline_summary function. function provide summary steps taken analysis. can set console_print TRUE print summary console. Setting include_notes TRUE include notes steps taken analysis.","code":"# Run the pipeline summary expom_1 |>     run_pipeline_summary(         console_print = TRUE,         include_notes = TRUE     ) ## 1. filter_missing - Filtered exposure variables and omics features with more than 5% missing values. QC plots generated for exposure and omics data.2. run_impute_missing - 3. filter_omics_Methylation - Filtered omics features from 'Methylation' ##         Using method = 'variance': 40253 removed of 59844 (67.3%).4. filter_omics_Metabolomics - Filtered omics features from 'Metabolomics' ##         Using method = 'variance': 78 removed of 177 (44.1%).5. filter_omics_Gene Expression - Filtered omics features from 'Gene Expression' ##         Using method = 'expression': 24 removed of 28738 (0.1%).6. run_normality_check - Assessed normality of 180 numeric exposure variables. 29 were normally distributed (p > 0.05), 151 were not.7. transform_exposure - Applied 'boxcox_best' transformation to 22 exposure variables. 6 passed normality (Shapiro-Wilk p > 0.05, 27.3%).8. run_pca - Outliers:  s73, s1183, s376, s899, s828, s9939. filter_sample_outliers - Outliers:  s73, s1183, s376, s899, s828, s99310. run_correlation_pcs - Correlated pcs features with exposures.11. run_cluster_samples - Optimal number of clusters for samples: 512. run_correlation_exposures - Correlated exposures features with exposures.13. run_association - Performed association analysis using source: exposures14. run_association - Performed association analysis using source: exposures15. run_exposome_score_exposome_median_score - Exposome score computed using method: 'median'16. run_exposome_score_exposome_pca_score - Exposome score computed using method: 'pca'17. run_exposome_score_exposome_irt_score - Exposome score computed using method: 'irt'18. run_exposome_score_exposome_quantile_score - Exposome score computed using method: 'quantile'19. run_exposome_score_exposome_var_score - Exposome score computed using method: 'var'20. run_association - Performed association analysis using source: exposures21. run_differential_abundance - Performed differential abundance analysis across all assays.22. run_sensitivity_analysis - Ran sensitivity analysis across 10 bootstrap iterations and 1 methods and 1 scaling strategies. Covariates removed in model variations: hs_child_age_None, e3_sex_None, h_cohort23. run_multiomics_integration - Performed multi-omics integration using DIABLO with 5 latent factors. Scaling was enabled.24. run_association - Performed association analysis using source: exposures25. extract_top_factor_features - Selected 9664 features contributing to specified factors.26. run_factor_overlap - Annotated based on 'stability_score' score > 0.341.27. run_correlation_omics - Correlated omics features with exposures.28. run_correlation_omics - Correlated omics features with exposures.29. run_create_network - Created undirected network from correlation results for'omics_feature_cor'.30. run_create_network - Created undirected network from correlation results for'omics_feature_cor'.31. run_exposure_impact - Computed exposure impact using omics correlation network.32. run_enrichment - Performed GO enrichment on omics_cor features."},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"saving-results","dir":"Articles","previous_headings":"Pipeline Summary","what":"Saving Results","title":"Introduction to tidyexposomics","text":"can export results MultiAssayExperiment Excel spreadsheet using extract_results_excel function. add results Excel file, can choose certain results changing result_types argument.","code":"extract_results_excel(expom_1,     file = \"./supplementary_results.xlsx\",     result_types = \"all\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"session-info","dir":"Articles","previous_headings":"Pipeline Summary","what":"Session Info","title":"Introduction to tidyexposomics","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14 ucrt) ## Platform: x86_64-w64-mingw32/x64 ## Running under: Windows 11 x64 (build 26100) ##  ## Matrix products: default ##  ##  ## locale: ## [1] LC_COLLATE=English_United States.utf8  ## [2] LC_CTYPE=English_United States.utf8    ## [3] LC_MONETARY=English_United States.utf8 ## [4] LC_NUMERIC=C                           ## [5] LC_TIME=English_United States.utf8     ##  ## time zone: America/New_York ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ##  [1] tidyexposomics_0.99.0 lubridate_1.9.4       forcats_1.0.0         ##  [4] stringr_1.5.1         dplyr_1.1.4           purrr_1.1.0           ##  [7] readr_2.1.5           tidyr_1.3.1           tibble_3.3.0          ## [10] ggplot2_3.5.2         tidyverse_2.0.0       BiocStyle_2.32.1      ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.6                    matrixStats_1.5.0           ##   [3] naniar_1.1.0                httr_1.4.7                  ##   [5] RColorBrewer_1.1-3          doParallel_1.0.17           ##   [7] ggsci_3.2.0                 dynamicTreeCut_1.63-1       ##   [9] tools_4.4.1                 doRNG_1.8.6.2               ##  [11] backports_1.5.0             utf8_1.2.6                  ##  [13] R6_2.6.1                    vegan_2.7-1                 ##  [15] lazyeval_0.2.2              mgcv_1.9-1                  ##  [17] permute_0.9-8               GetoptLong_1.0.5            ##  [19] withr_3.0.2                 gridExtra_2.3               ##  [21] preprocessCore_1.66.0       progressr_0.15.1            ##  [23] cli_3.6.5                   Biobase_2.64.0              ##  [25] textshaping_1.0.1           factoextra_1.0.7            ##  [27] RGCCA_3.0.3                 labeling_0.4.3              ##  [29] sass_0.4.10                 randomForest_4.7-1.2        ##  [31] ggridges_0.5.6              pbapply_1.7-4               ##  [33] pkgdown_2.1.3               systemfonts_1.2.3           ##  [35] foreign_0.8-86              R.utils_2.13.0              ##  [37] dichromat_2.0-0.1           sessioninfo_1.2.3           ##  [39] parallelly_1.45.1           itertools_0.1-3             ##  [41] limma_3.60.6                RSQLite_2.4.2               ##  [43] rstudioapi_0.17.1           FNN_1.1.4.1                 ##  [45] generics_0.1.4              shape_1.4.6.1               ##  [47] vroom_1.6.5                 car_3.1-3                   ##  [49] dendextend_1.19.1           Matrix_1.7-0                ##  [51] S4Vectors_0.42.1            abind_1.4-8                 ##  [53] R.methodsS3_1.8.2           lifecycle_1.0.4             ##  [55] edgeR_4.2.2                 yaml_2.3.10                 ##  [57] snakecase_0.11.1            carData_3.0-5               ##  [59] SummarizedExperiment_1.34.0 BiocFileCache_2.12.0        ##  [61] recipes_1.3.1               SparseArray_1.4.8           ##  [63] Rtsne_0.17                  blob_1.2.4                  ##  [65] grid_4.4.1                  crayon_1.5.3                ##  [67] lattice_0.22-6              magick_2.8.7                ##  [69] pillar_1.11.0               knitr_1.50                  ##  [71] ComplexHeatmap_2.20.0       GenomicRanges_1.56.2        ##  [73] rjson_0.2.23                corpcor_1.6.10              ##  [75] future.apply_1.20.0         mixOmics_6.28.0             ##  [77] codetools_0.2-20            glue_1.8.0                  ##  [79] ggvenn_0.1.10               beepr_2.0                   ##  [81] data.table_1.17.8           MultiAssayExperiment_1.30.3 ##  [83] vctrs_0.6.5                 png_0.1-8                   ##  [85] testthat_3.2.3              gtable_0.3.6                ##  [87] assertthat_0.2.1            cachem_1.1.0                ##  [89] gower_1.0.2                 xfun_0.52                   ##  [91] S4Arrays_1.4.1              prodlim_2025.04.28          ##  [93] tidygraph_1.3.1             pracma_2.4.4                ##  [95] survival_3.6-4              audio_0.1-11                ##  [97] timeDate_4041.110           iterators_1.0.14            ##  [99] nipalsMCIA_1.2.1            hardhat_1.4.1               ## [101] lava_1.8.1                  statmod_1.5.0               ## [103] ipred_0.9-15                nlme_3.1-164                ## [105] fenr_1.2.1                  bit64_4.6.0-1               ## [107] filelock_1.0.3              GenomeInfoDb_1.40.1         ## [109] bslib_0.9.0                 Deriv_4.2.0                 ## [111] rpart_4.1.23                DBI_1.2.3                   ## [113] colorspace_2.1-1            BiocGenerics_0.50.0         ## [115] Hmisc_5.2-3                 nnet_7.3-19                 ## [117] tidyselect_1.2.1            bit_4.6.0                   ## [119] compiler_4.4.1              curl_6.4.0                  ## [121] tidyHeatmap_1.12.2          rvest_1.0.4                 ## [123] httr2_1.2.1                 htmlTable_2.4.3             ## [125] xml2_1.3.8                  desc_1.4.3                  ## [127] DelayedArray_0.30.1         plotly_4.11.0               ## [129] bookdown_0.43               checkmate_2.3.2             ## [131] scales_1.4.0                rappdirs_0.3.3              ## [133] digest_0.6.37               rmarkdown_2.29              ## [135] XVector_0.44.0              htmltools_0.5.8.1           ## [137] pkgconfig_2.0.3             base64enc_0.1-3             ## [139] SimDesign_2.20.0            MatrixGenerics_1.16.0       ## [141] dbplyr_2.5.0                fastmap_1.2.0               ## [143] rlang_1.1.6                 GlobalOptions_0.1.2         ## [145] htmlwidgets_1.6.4           UCSC.utils_1.0.0            ## [147] ggh4x_0.3.1                 farver_2.1.2                ## [149] jquerylib_0.1.4             jsonlite_2.0.0              ## [151] BiocParallel_1.38.0         dcurver_0.9.2               ## [153] R.oo_1.27.1                 ModelMetrics_1.2.2.2        ## [155] magrittr_2.0.3              Formula_1.2-5               ## [157] GenomeInfoDbData_1.2.12     patchwork_1.3.1             ## [159] Rcpp_1.1.0                  ggnewscale_0.5.2            ## [161] viridis_0.6.5               visdat_0.6.0                ## [163] stringi_1.8.7               pROC_1.18.5                 ## [165] ggraph_2.2.1                brio_1.1.5                  ## [167] zlibbioc_1.50.0             MASS_7.3-60.2               ## [169] plyr_1.8.9                  parallel_4.4.1              ## [171] listenv_0.9.1               ggrepel_0.9.6               ## [173] graphlayouts_1.2.2          splines_4.4.1               ## [175] hms_1.1.3                   circlize_0.4.16             ## [177] locfit_1.5-9.12             igraph_2.1.4                ## [179] ggpubr_0.6.1                ggsignif_0.6.4              ## [181] rngtools_1.5.2              reshape2_1.4.4              ## [183] stats4_4.4.1                GPArotation_2025.3-1        ## [185] tidybulk_1.16.0             evaluate_1.0.4              ## [187] ttservice_0.5.3             BiocManager_1.30.26         ## [189] tzdb_0.5.0                  foreach_1.5.2               ## [191] missForest_1.5              tweenr_2.0.3                ## [193] polyclip_1.10-7             future_1.58.0               ## [195] clue_0.3-66                 mirt_1.44.0                 ## [197] BiocBaseUtils_1.6.0         ggforce_0.5.0               ## [199] janitor_2.2.1               broom_1.0.9                 ## [201] RSpectra_0.16-2             rstatix_0.7.2               ## [203] viridisLite_0.4.2           class_7.3-22                ## [205] ragg_1.4.0                  rARPACK_0.11-0              ## [207] memoise_2.0.1               ellipse_0.5.0               ## [209] IRanges_2.38.1              densityClust_0.3.3          ## [211] cluster_2.1.6               timechange_0.3.0            ## [213] globals_0.18.0              caret_7.0-1"},{"path":"https://BioNomad.github.io/tidyexposomics/articles/tidyexposomics.html","id":"references","dir":"Articles","previous_headings":"Pipeline Summary","what":"References","title":"Introduction to tidyexposomics","text":"Chung, M. K., House, J. S., Akhtari, F. S., Makris, K. C., Langston, M. ., Islam, K. T., Holmes, P., Chadeau-Hyam, M., Smirnov, . ., Du, X., Thessen, . E., Cui, Y., Zhang, K., Manrai, . K., Motsinger-Reif, ., Patel, C. J., & Members Exposomics Consortium. (2024). Decoding exposome: data science methodologies implications exposome-wide association studies (ExWASs). Exposome, 4(1), osae001. https://doi.org/10.1093/exposome/osae001 fenr. (n.d.). Bioconductor. Retrieved August 18, 2025, https://www.bioconductor.org/packages/release/bioc/html/fenr.html Maitre, L., Guimbaud, J.-B., Warembourg, C., Güil-Oumrait, N., Petrone, P. M., Chadeau-Hyam, M., Vrijheid, M., Basagaña, X., Gonzalez, J. R., & Exposome Data Challenge Participant Consortium. (2022). State---art methods exposure-health studies: Results exposome data challenge event. Environment International, 168(107422), 107422. https://doi.org/10.1016/j.envint.2022.107422 Miller, G. W., & Banbury Exposomics Consortium. (2025). Integrating exposomics biomedicine. Science, 388(6745), 356–358. https://doi.org/10.1126/science.adr0544 mixOmics. (n.d.). Bioconductor. Retrieved August 18, 2025, https://www.bioconductor.org/packages/devel/bioc/html/mixOmics.html MOFA2. (n.d.). Bioconductor. Retrieved August 18, 2025, https://www.bioconductor.org/packages/release/bioc/html/MOFA2.html MultiAssay Special Interest Group. (2025, April 15). MultiAssayExperiment: Integrative Bioconductor Container. https://www.bioconductor.org/packages/release/bioc/vignettes/MultiAssayExperiment/inst/doc/MultiAssayExperiment.html nipalsMCIA. (n.d.). Bioconductor. Retrieved August 18, 2025, https://www.bioconductor.org/packages/release/bioc/html/nipalsMCIA.html Regularized Sparse Generalized Canonical Correlation Analysis Multiblock Data. (n.d.). Retrieved August 18, 2025, https://rgcca-factory.github.io/RGCCA/ Wild, C. P. (2005). Complementing genome “exposome”: outstanding challenge environmental exposure measurement molecular epidemiology. Cancer Epidemiology, Biomarkers & Prevention, 14(8), 1847–1850. https://doi.org/10.1158/1055-9965.EPI-05-0456","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Laird. Author, maintainer. Thomas Hartung. Contributor. Fenna Sillé. Contributor. Alexandra Maertens. Contributor. JHU Discovery Award. Funder.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Laird J (2025). tidyexposomics: Integrated Exposure-Omics Analysis Powered Tidy Principles. R package version 0.99.0, https://BioNomad.github.io/tidyexposomics.","code":"@Manual{,   title = {tidyexposomics: Integrated Exposure-Omics Analysis Powered by Tidy Principles},   author = {Jason Laird},   year = {2025},   note = {R package version 0.99.0},   url = {https://BioNomad.github.io/tidyexposomics}, }"},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"tidyexposomics package designed facilitate integration exposure omics data identify exposure-omics associations. Functions follow tidyverse framework, commands designed simplified intuitive. tidyexposomics package provides functionality perform quality control, sample exposure association analysis, differential abundance analysis, multi-omics integration, functional enrichment analysis.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"command-structure","dir":"","previous_headings":"","what":"Command Structure","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"make package user-friendly, named functions intuitive. example, use following naming conventions:  Results can added MultiAssayExperiment object returned directly action = 'get'. suggest adding results, given pipeline steps tracked can output R console, plotted workflow diagram, exported excel worksheet.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"following code example basic tidyexposomics workflow. includes loading example data, performing basic quality control, running exposure-wide association studies (ExWAS), differential abundance analysis, correlating differentially expressed genes (DEGs) exposures, functional enrichment analysis. However, much tidyexposomics package! check Get Started page detailed walkthrough package’s functionality.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"tidyexposomics package depends R (>= 4.4.0) can installed using following code:","code":"# Install and Load Packages remotes::install_github(\"BioNomad/tidyexposomics\") library(tidyexposomics) library(tidyverse)"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"load-example-data","dir":"","previous_headings":"","what":"Load Example Data","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"provide example data based ISGlobal Exposome Data Challenge 2021. , examine exposures omics features relate asthma status.","code":"# Load the example data load_example_data()  # Create ExpOmicSet expom <- create_expomicset(   codebook = annotated_cb,   exposure = meta,   omics = omics_list,   row_data = fdata )  # Grab exposure variables exp_vars <- annotated_cb |>    filter(category %in% c(     \"exposure to oxygen molecular entity\",     \"aerosol\",     \"environmental zone\",     \"main group molecular entity\",     \"transition element molecular entity\",     \"exposure to environmental process\",     \"polyatomic entity\"    )) |>    pull(variable) |>    as.character()"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"quality-control","dir":"","previous_headings":"","what":"Quality Control","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"provide several quality control functions including handle filtering missing data, imputation, variable normality checks, variable transformation.","code":"# Filter samples and exposures expom <- expom[, !is.na(expom$hs_asthma)] expom <- expom[, expom$FAS_cat_None == \"Low\"]  # Filter & impute exposures expom <- expom |>   filter_missing(na_thresh = 5) |>   run_impute_missing(exposure_impute_method = \"missforest\")  # Filter omics expom <- expom |>    filter_omics(     method = \"variance\",     assays = \"Methylation\",     assay_name = 1,     min_var = 0.05   ) |>    filter_omics(     method = \"variance\",     assays = \"Metabolomics\",     assay_name = 1,     min_var = 0.1   ) |>   filter_omics(     method = \"expression\",     assays = \"Gene Expression\",     assay_name = 1,     min_value = 1,     min_prop = 0.3   )  # Check variable normality & transform variables expom <- expom |>    # Check variable normality   run_normality_check(action = \"add\") |>       # Transform variables    transform_exposure(transform_method = \"boxcox_best\",                      exposure_cols = exp_vars)"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"exwas","dir":"","previous_headings":"","what":"ExWAS","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"model association exposures asthma status adjust model child age, biological sex, cohort.","code":"# Perform ExWAS Analysis expom <- expom |>    run_association(     source = \"exposures\",     outcome = \"hs_asthma\",     feature_set = exp_vars,     covariates = c(\"hs_child_age_None\",                    \"e3_sex_None\",                    \"h_cohort\"),     action = \"add\",     family = \"binomial\")  # Visualize associations expom |>    plot_association(     subtitle = paste(\"Covariates:\",                      \"Age,\",                      \"Biological Sex, \",                      \"Cohort\"),     source = \"exposures\",     terms = exp_vars,     filter_thresh = 0.15,     filter_col = \"p.value\",     r2_col = \"adj_r2\")"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"differential-abundance","dir":"","previous_headings":"","what":"Differential Abundance","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"Differentially abundance analysis supported tidyexposomics. use limma_trend identify features associated asthma status.","code":"# Run differential abundance analysis expom <- expom |>    run_differential_abundance(     formula = ~ hs_asthma + hs_child_age_None + e3_sex_None + h_cohort,     method = \"limma_trend\",     scaling_method = \"none\",     action = \"add\")      # Plot Differential Abundance Results expom |>    plot_volcano(     top_n_label = 3,     feature_col = \"feature_clean\",     logFC_thresh = log2(1),     pval_thresh = 0.05,     pval_col = \"P.Value\",     logFC_col = \"logFC\",     nrow = 1)"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"multi-omics-integration","dir":"","previous_headings":"","what":"Multi-Omics Integration","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"Multi-omics integration supported derive insights across omics layers. use DIABLO method set outcome variable interest asthma status.","code":"# Perform Multi-Omics Integration expom <- expom |>    run_multiomics_integration(method = \"DIABLO\",                              n_factors = 5,                              outcome = \"hs_asthma\",                              action = \"add\")                               # Identify factors that correlate with the outcome expom <- expom |>    run_association(     source = \"factors\",     outcome = \"hs_asthma\",     feature_set = exp_vars,     covariates = c(       \"hs_child_age_None\",       \"e3_sex_None\",       \"h_cohort\"),     action = \"add\",     family = \"binomial\")      # Extract top features that contribute to a factor expom <- expom |>    extract_top_factor_features(method = \"percentile\",                               pval_col = \"p_adjust\",                               pval_thresh = 0.05,                                percentile = 0.95,                               action = \"add\")                                 # Determine which features drive multiple factors expom <- expom |>    run_factor_overlap()"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"exposure-omics-association","dir":"","previous_headings":"","what":"Exposure-Omics Association","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"Now multi-omics features associated asthma status, can correlate exposures. helps identify exposure classes may affect asthma biology.","code":"# Grab top common factor features and ensure  # feature is renamed to variable for the variable_map top_factor_features <- expom |>    extract_results(result = \"multiomics_integration\") |>    pluck(\"common_top_factor_features\") |>    dplyr::select(variable=feature,                       exp_name)  # Correlate top factor features with exposures expom  <- expom |>    # Perform correlation analysis between factor features    # and exposures   run_correlation(feature_type = \"omics\",                   variable_map = top_factor_features,                   exposure_cols = exp_vars,                   action = \"add\",                   correlation_cutoff = 0.2,                   pval_cutoff = 0.05,                   cor_pval_column = \"p.value\") |>    # Perform correlation analysis between factor features   run_correlation(feature_type = \"omics\",                   variable_map = top_factor_features,                   feature_cors = T,                   action = \"add\",                   correlation_cutoff = 0.2,                   pval_cutoff = 0.05,                   cor_pval_column = \"p.value\")"},{"path":"https://BioNomad.github.io/tidyexposomics/index.html","id":"enrichment-analysis","dir":"","previous_headings":"","what":"Enrichment Analysis","title":"Integrated Exposure-Omics Analysis Powered by Tidy Principles","text":"identifying features associated asthma exposures, can perform functional enrichment analysis understand biological processes affected.","code":"# Run enrichment analysis on factor features correlated with exposures expom  <- expom  |>    run_enrichment(     feature_type = c(\"omics_cor\"),     feature_col = \"feature_clean\",      db = c(\"GO\"),      species = \"goa_human\",      fenr_col = \"gene_symbol\",     padj_method = \"none\",     pval_thresh = .1,     min_set = 1,     max_set = 800,      clustering_approach = \"diana\",     action = \"add\"   )  # Plot enrichment term network plot expom    |>    plot_enrichment(     feature_type = \"omics_cor\",     plot_type = \"network\",     label_top_n = 2   )"},{"path":"https://BioNomad.github.io/tidyexposomics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 tidyexposomics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/annotated_cb.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotated Exposure Codebook (ISGlobal Exposome Challenge) — annotated_cb","title":"Annotated Exposure Codebook (ISGlobal Exposome Challenge) — annotated_cb","text":"data.frame containing 98 exposure variables annotated using ontology terms ENVO, CHEBI, similar sources. annotated codebook generated using ont_annot_app() Shiny app.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/annotated_cb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotated Exposure Codebook (ISGlobal Exposome Challenge) — annotated_cb","text":"","code":"annotated_cb"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/annotated_cb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annotated Exposure Codebook (ISGlobal Exposome Challenge) — annotated_cb","text":"data.frame following columns: variable Exposure variable name. period Measurement period. location Exposure location. description Brief description exposure variable. var_type Variable type (e.g., numeric, categorical). transformation Transformation applied. selected_ontology_label Human-readable ontology term label. selected_ontology_id Ontology term ID. root_id Root ontology ID corresponding high-level category. root_label Root term label. category Mapped category label (usually matches root_label). category_source Source category label (e.g., \"ontology\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/annotated_cb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annotated Exposure Codebook (ISGlobal Exposome Challenge) — annotated_cb","text":"Generated ISGlobal Exposome Data Challenge 2021 using ont_annot_app() tool tidyexposomics package.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/annotated_cb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotated Exposure Codebook (ISGlobal Exposome Challenge) — annotated_cb","text":"","code":"data(annotated_cb) dplyr::glimpse(annotated_cb) #> Rows: 98 #> Columns: 12 #> $ variable                <chr> \"h_pm10_ratio_preg_None\", \"h_pm25_ratio_preg_N… #> $ period                  <chr> \"Pregnancy\", \"Pregnancy\", \"Postnatal\", \"Postna… #> $ location                <chr> \"Home\", \"Home\", \"Home\", \"Home\", \"Home\", \"Home\"… #> $ description             <chr> \"pm10 value (extrapolated back in time using r… #> $ var_type                <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"n… #> $ transformation          <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"… #> $ selected_ontology_label <chr> \"respirable suspended particulate matter\", \"fi… #> $ selected_ontology_id    <chr> \"ENVO:01000405\", \"ENVO:01000415\", \"ENVO:010004… #> $ root_id                 <chr> \"ENVO:00010505\", \"ENVO:00010505\", \"ENVO:000105… #> $ root_label              <chr> \"aerosol\", \"aerosol\", \"aerosol\", \"aerosol\", \"a… #> $ category                <chr> \"aerosol\", \"aerosol\", \"aerosol\", \"aerosol\", \"a… #> $ category_source         <chr> \"ontology\", \"ontology\", \"ontology\", \"ontology\"…"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/chebi.html","id":null,"dir":"Reference","previous_headings":"","what":"ChEBI Ontology Table (Chemical Entities of Biological Interest) — chebi","title":"ChEBI Ontology Table (Chemical Entities of Biological Interest) — chebi","text":"data frame ChEBI ontology terms downloaded BioPortal June 19, 2025. ChEBI defines biologically relevant small molecules compounds.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/chebi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChEBI Ontology Table (Chemical Entities of Biological Interest) — chebi","text":"","code":"chebi"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/chebi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ChEBI Ontology Table (Chemical Entities of Biological Interest) — chebi","text":"data.frame 6 columns: id ChEBI term ID (e.g., \"CHEBI:15377\"). name Common compound name (e.g., \"water\"). parents Vector parent term IDs. children Vector child term IDs. ancestors ancestor term IDs. obsolete Logical flag indicating whether term obsolete.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/chebi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ChEBI Ontology Table (Chemical Entities of Biological Interest) — chebi","text":"BioPortal ChEBI Ontology, downloaded June 19, 2025.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/chebi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChEBI Ontology Table (Chemical Entities of Biological Interest) — chebi","text":"","code":"data(chebi) head(chebi) #>                      id                 name                  parents #> CHEBI:24431 CHEBI:24431      chemical entity                          #> CHEBI:23367 CHEBI:23367     molecular entity              CHEBI:24431 #> CHEBI:24870 CHEBI:24870                  ion              CHEBI:23367 #> CHEBI:24867 CHEBI:24867       monoatomic ion CHEBI:24870; CHEBI:33238 #> CHEBI:23905 CHEBI:23905     monoatomic anion CHEBI:24867; CHEBI:22563 #> CHEBI:33429 CHEBI:33429 monoatomic monoanion CHEBI:23905; CHEBI:36830 #>                                                                                                                                                                                                      children #> CHEBI:24431                                                                                                                                                CHEBI:23367; CHEBI:24433; CHEBI:33250; CHEBI:59999 #> CHEBI:23367                                       CHEBI:24870; CHEBI:26519; CHEBI:24835; CHEBI:33259; CHEBI:33579; CHEBI:33497; CHEBI:36357; CHEBI:46617; CHEBI:35568; CHEBI:139358; CHEBI:13193; CHEBI:17499 #> CHEBI:24870                                                                             CHEBI:24867; CHEBI:22563; CHEBI:36916; CHEBI:36358; CHEBI:36875; CHEBI:36914; CHEBI:25699; CHEBI:190496; CHEBI:190501 #> CHEBI:24867                                                                                                                                                             CHEBI:23905; CHEBI:23906; CHEBI:27365 #> CHEBI:23905                                                                                                                                                                          CHEBI:33429; CHEBI:50086 #> CHEBI:33429 CHEBI:30151; CHEBI:16042; CHEBI:30030; CHEBI:30166; CHEBI:29435; CHEBI:33010; CHEBI:29104; CHEBI:30144; CHEBI:29102; CHEBI:30585; CHEBI:33469; CHEBI:33496; CHEBI:33503; CHEBI:37130; CHEBI:37254 #>                                                                                                                                    ancestors #> CHEBI:24431                                                                                                                      CHEBI:24431 #> CHEBI:23367                                                                                                         CHEBI:24431; CHEBI:23367 #> CHEBI:24870                                                                                            CHEBI:24431; CHEBI:23367; CHEBI:24870 #> CHEBI:24867                                                     CHEBI:24431; CHEBI:23367; CHEBI:24870; CHEBI:33259; CHEBI:33238; CHEBI:24867 #> CHEBI:23905                           CHEBI:24431; CHEBI:23367; CHEBI:24870; CHEBI:33259; CHEBI:33238; CHEBI:24867; CHEBI:22563; CHEBI:23905 #> CHEBI:33429 CHEBI:24431; CHEBI:23367; CHEBI:24870; CHEBI:33259; CHEBI:33238; CHEBI:24867; CHEBI:22563; CHEBI:23905; CHEBI:36830; CHEBI:33429 #>             obsolete #> CHEBI:24431    FALSE #> CHEBI:23367    FALSE #> CHEBI:24870    FALSE #> CHEBI:24867    FALSE #> CHEBI:23905    FALSE #> CHEBI:33429    FALSE"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an expomicset Object — create_expomicset","title":"Create an expomicset Object — create_expomicset","text":"Constructs MultiAssayExperiment object exposure data omics datasets, ensuring proper formatting alignment samples features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an expomicset Object — create_expomicset","text":"","code":"create_expomicset(codebook, exposure, omics, row_data = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an expomicset Object — create_expomicset","text":"codebook data frame containing variable information metadata. exposure data frame containing exposure data, rows samples columns variables. omics list matrices single matrix representing omics data. matrix samples columns features rows. row_data optional list DataFrame objects providing feature metadata omics dataset. NULL, row metadata generated automatically. Default NULL.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an expomicset Object — create_expomicset","text":"MultiAssayExperiment object containing formatted exposure omics datasets.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an expomicset Object — create_expomicset","text":"function validates inputs, converts omics list necessary, ensures datasets matrices column names, creates SummarizedExperiment objects omics dataset. constructs MultiAssayExperiment object exposure data colData variable information stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_expomicset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an expomicset Object — create_expomicset","text":"","code":"# make the example data tmp <- make_example_data(n_samples = 10)  # create the MultiAssayExperiment Object mae <- create_expomicset(     codebook = tmp$codebook,     exposure = tmp$exposure,     omics = tmp$omics,     row_data = tmp$row_data ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_exposomicset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Exposomicset Object — create_exposomicset","title":"Create an Exposomicset Object — create_exposomicset","text":"Constructs MultiAssayExperiment object exposure data omics datasets, ensuring proper formatting alignment samples features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_exposomicset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Exposomicset Object — create_exposomicset","text":"","code":"create_exposomicset(codebook, exposure, omics, row_data = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_exposomicset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Exposomicset Object — create_exposomicset","text":"codebook data frame containing variable information metadata. exposure data frame containing exposure data, rows samples columns variables. omics list matrices single matrix representing omics data. matrix samples columns features rows. row_data optional list DataFrame objects providing feature metadata omics dataset. NULL, row metadata generated automatically. Default NULL.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_exposomicset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Exposomicset Object — create_exposomicset","text":"MultiAssayExperiment object containing formatted exposure omics datasets.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_exposomicset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Exposomicset Object — create_exposomicset","text":"function validates inputs, converts omics list necessary, ensures datasets matrices column names, creates SummarizedExperiment objects omics dataset. constructs MultiAssayExperiment object exposure data colData variable information stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/create_exposomicset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Exposomicset Object — create_exposomicset","text":"","code":"# make the example data tmp <- make_example_data(n_samples = 10)  # create the MultiAssayExperiment Object mae <- create_exposomicset(     codebook = tmp$codebook,     exposure = tmp$exposure,     omics = tmp$omics,     row_data = tmp$row_data ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/download_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and load a zipped .RData file from the tidyexposomics GitHub release — download_dataset","title":"Download and load a zipped .RData file from the tidyexposomics GitHub release — download_dataset","text":"Download load zipped .RData file tidyexposomics GitHub release","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/download_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and load a zipped .RData file from the tidyexposomics GitHub release — download_dataset","text":"","code":"download_dataset(   name = c(\"omics_list\", \"fdata\", \"meta\", \"annotated_cb\", \"chebi\", \"ecto\", \"hpo\"),   dest_dir = tempdir(),   verbose = TRUE )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/download_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and load a zipped .RData file from the tidyexposomics GitHub release — download_dataset","text":"name name dataset (without .zip .RData extension). Valid options include: \"omics_list\", \"fdata\", \"meta\", \"annotated_cb\", \"chebi\", \"ecto\", \"hpo\". dest_dir Destination directory save extract file (default: tempdir()). verbose Print messages? (default: TRUE)","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/download_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and load a zipped .RData file from the tidyexposomics GitHub release — download_dataset","text":"Invisibly returns loaded object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/download_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and load a zipped .RData file from the tidyexposomics GitHub release — download_dataset","text":"","code":"# load the example meta data download_dataset(     name = \"meta\" ) #> Downloading meta.zip using curl... #> Unzipping to C:\\Users\\Jason\\AppData\\Local\\Temp\\RtmpOekZ7O #> Loading meta.RData"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ecto.html","id":null,"dir":"Reference","previous_headings":"","what":"ECTO Ontology Table (Environmental Conditions, Treatments & Exposures) — ecto","title":"ECTO Ontology Table (Environmental Conditions, Treatments & Exposures) — ecto","text":"data frame terms ECTO ontology, downloaded BioPortal June 19, 2025. ECTO describes environmental exposures relevant human health.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ecto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ECTO Ontology Table (Environmental Conditions, Treatments & Exposures) — ecto","text":"","code":"ecto"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ecto.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ECTO Ontology Table (Environmental Conditions, Treatments & Exposures) — ecto","text":"data.frame 6 columns one row per ontology term: id Ontology term ID (e.g., \"ECTO:0000010\"). name Human-readable label (e.g., \"air pollution exposure\"). parents Vector parent term IDs. children Vector child term IDs. ancestors ancestor term IDs. obsolete Logical; TRUE term obsolete.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ecto.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ECTO Ontology Table (Environmental Conditions, Treatments & Exposures) — ecto","text":"BioPortal ECTO Ontology, downloaded June 19, 2025.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ecto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ECTO Ontology Table (Environmental Conditions, Treatments & Exposures) — ecto","text":"","code":"data(ecto) head(ecto) #>                      id                   name     parents #> BFO:0000001 BFO:0000001                 entity             #> BFO:0000002 BFO:0000002             continuant BFO:0000001 #> BFO:0000003 BFO:0000003              occurrent BFO:0000001 #> BFO:0000004 BFO:0000004 independent continuant BFO:0000002 #> BFO:0000006 BFO:0000006         spatial region BFO:0000141 #> BFO:0000008 BFO:0000008        temporal region BFO:0000003 #>                                                           children #> BFO:0000001                               BFO:0000002; BFO:0000003 #> BFO:0000002                  BFO:0000004; BFO:0000020; BFO:0000031 #> BFO:0000003                   BFO:0000008; BFO:0000015; PO:0009012 #> BFO:0000004 BFO:0000040; BFO:0000141; CARO:0030000; UBERON:0001062 #> BFO:0000006                                                        #> BFO:0000008                                            BFO:0000038 #>                                                                   ancestors #> BFO:0000001                                                     BFO:0000001 #> BFO:0000002                                        BFO:0000001; BFO:0000002 #> BFO:0000003                                        BFO:0000001; BFO:0000003 #> BFO:0000004                           BFO:0000001; BFO:0000002; BFO:0000004 #> BFO:0000006 BFO:0000001; BFO:0000002; BFO:0000004; BFO:0000141; BFO:0000006 #> BFO:0000008                           BFO:0000001; BFO:0000003; BFO:0000008 #>             obsolete equivalent_to #> BFO:0000001    FALSE               #> BFO:0000002    FALSE               #> BFO:0000003    FALSE               #> BFO:0000004    FALSE               #> BFO:0000006    FALSE               #> BFO:0000008    FALSE"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"function extracts merges exposure variables colData selected features omics datasets MultiAssayExperiment object. Optionally applies log2 transformation omics data restricts features based variable map.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"","code":"extract_omics_exposure_df(expomicset, variable_map = NULL, log2_trans = TRUE)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"expomicset MultiAssayExperiment object containing omics exposure data. variable_map data frame columns \"variable\" \"exp_name\", indicating variables belong omics exposure domain. log2_trans Logical; whether log2-transform omics data. Default TRUE.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"data frame rows correspond samples, columns contain exposure variables log2-transformed omics features. Columns different omics types disambiguated using prefixes.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"variable_map provided, used select variables exposures omics. provided, numeric colData variables used exposures (excluding variables matching ^PC), omics features included.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_omics_exposure_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Merged Omics and Exposure Data Frame — extract_omics_exposure_df","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully. # export the omics exposure df merged_df <- extract_omics_exposure_df(     mae,     log2_trans = TRUE ) #> Log2-Transforming each assay in MultiAssayExperiment."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Results from MultiAssayExperiment Metadata — extract_results","title":"Extract Results from MultiAssayExperiment Metadata — extract_results","text":"Retrieves specific analysis result metadata slot MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Results from MultiAssayExperiment Metadata — extract_results","text":"","code":"extract_results(   expomicset,   result = c(\"codebook\", \"quality_control\", \"correlation\", \"association\",     \"differential_analysis\", \"multiomics_integration\", \"network\", \"enrichment\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Results from MultiAssayExperiment Metadata — extract_results","text":"expomicset MultiAssayExperiment object. result character string indicating result extract metadata. Must one : \"codebook\", \"quality_control\", \"correlation\", \"association\", \"differential_analysis\", \"multiomics_integration\", \"network\", \"enrichment\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Results from MultiAssayExperiment Metadata — extract_results","text":"corresponding result object stored metadata(expomicset), NULL present.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Results from MultiAssayExperiment Metadata — extract_results","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # extract results res <- extract_results(     expomicset = mae,     result = \"codebook\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Export tidyexposomics Results to Excel — extract_results_excel","title":"Export tidyexposomics Results to Excel — extract_results_excel","text":"Exports selected results stored MultiAssayExperiment object created tidyexposomics pipeline Excel workbook. Users can select result types include, optionally add placeholder sheets missing data.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export tidyexposomics Results to Excel — extract_results_excel","text":"","code":"extract_results_excel(   expomicset,   file = \"tidyexposomics_results.xlsx\",   result_types = c(\"correlation\", \"association\", \"differential_analysis\",     \"multiomics_integration\", \"network\", \"enrichment\", \"exposure_summary\", \"pipeline\"),   include_empty_tabs = FALSE )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export tidyexposomics Results to Excel — extract_results_excel","text":"expomicset MultiAssayExperiment object results stored @metadata, typically created tidyexposomics pipeline. file Character. Path output Excel file. result_types Character vector specifying result categories export. Options include: \"correlation\": Correlation results. \"association\": Association results. \"differential_analysis\": Differential abundance results, including sensitivity analysis available. \"multiomics_integration\": Common top features contributing latent factors multi-omics integration. \"network\": Exposure impact metrics network analyses. \"enrichment\": Enrichment results omic exposure category. \"exposure_summary\": Summary statistics exposure variables. \"pipeline\": Overview steps completed pipeline. Use \"\" export categories. include_empty_tabs Logical. TRUE, adds placeholder sheets missing result types. Default FALSE.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export tidyexposomics Results to Excel — extract_results_excel","text":"Excel file written specified path. message printed file location.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_results_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export tidyexposomics Results to Excel — extract_results_excel","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run correlation analysis mae <- mae |>     run_correlation(         feature_type = \"exposures\",         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     )  # file path of the output file tmp <- tempfile(fileext = \".xlsx\")  # extract the correlation results extract_results_excel(     expomicset = mae,     result_types = \"correlation\",     file = tmp ) #> Writing Correlation Results. #> Results written to: C:\\Users\\Jason\\AppData\\Local\\Temp\\RtmpOekZ7O\\file83a04e577f5.xlsx"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Top Contributing Features for Factors — extract_top_factor_features","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"Identifies influential features specified factors using multiomics integration results. Features selected based either percentile cutoff absolute loading threshold.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"","code":"extract_top_factor_features(   expomicset,   factors = NULL,   pval_col = \"p_adjust\",   pval_thresh = 0.05,   method = \"percentile\",   percentile = 0.9,   threshold = 0.3,   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"expomicset MultiAssayExperiment object containing integration results. factors character vector specifying factors interest. NULL, factors automatically selected association results using pval_col pval_thresh criteria. pval_col string specifying column name p-value adjusted p-value used factor selection factors NULL. Default \"p_adjust\". pval_thresh numeric value specifying significance threshold selecting factors association results factors NULL. Default 0.05. method character string specifying feature selection method (\"percentile\" \"threshold\"). Default \"percentile\". percentile numeric value 0 1 indicating percentile threshold feature selection method = \"percentile\". Default 0.9. threshold numeric value specifying absolute loading cutoff feature selection method = \"threshold\". Default 0.3. action character string indicating whether return results (\"get\") add metadata (\"add\"). Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"action = \"add\", returns modified expomicset selected features stored metadata. action = \"get\", returns data frame containing: feature selected feature contributing factor. factor factor feature contributes. loading factor loading value feature. exp_name experiment feature originated.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"function extracts factor loadings metadata(expomicset), applies filtering based selected method, identifies top contributing features specified factor. factors provided, function automatically select statistically significant factors metadata(expomicset)$association$assoc_factors$results_df using specified pval_col pval_thresh criteria. Features can selected using: Percentile-based filtering (method = \"percentile\"): Selects features absolute loadings specified percentile. Threshold-based filtering (method = \"threshold\"): Selects features absolute loadings exceeding fixed value.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/extract_top_factor_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Top Contributing Features for Factors — extract_top_factor_features","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform multiomics integration mae <- run_multiomics_integration(     mae,     method = \"MCIA\",     n_factors = 3 ) #> Scaling each assay in MultiAssayExperiment. #> Running multi-omics integration using MCIA... #> Applying MCIA with `nipalsMCIA` #> Performing column-level pre-processing... #> Column pre-processing completed. #> Performing block-level preprocessing... #> Block pre-processing completed. #> Computing order 1 scores #> Computing order 2 scores #> Computing order 3 scores  top_feats <- extract_top_factor_features(     mae,     factors = c(\"V1\", \"V2\", \"V3\"),     method = \"percentile\",     percentile = 0.9,     action = \"get\" ) #> Extracting top contributing features for specified factors. #> Using MCIA block loadings. #> Applying percentile-based filtering (>90%). #> Selected 63 features contributing to specified factors."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/fdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Metadata for Multi-Omics Assays — fdata","title":"Feature Metadata for Multi-Omics Assays — fdata","text":"named list data frames containing feature-level annotations (e.g., gene symbols, CpG IDs, metabolite names). entry corresponds row metadata one omics assay.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/fdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Metadata for Multi-Omics Assays — fdata","text":"","code":"fdata"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/fdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Feature Metadata for Multi-Omics Assays — fdata","text":"named list following components: Gene Expression Feature metadata transcriptomics. Methylation Feature metadata CpG probes. Metabolomics Feature metadata metabolites.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/fdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Feature Metadata for Multi-Omics Assays — fdata","text":"Derived ISGlobal Exposome Data Challenge 2021.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/fdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Metadata for Multi-Omics Assays — fdata","text":"","code":"data(fdata) names(fdata) #> [1] \"Gene Expression\" \"Methylation\"     \"Metabolomics\"    head(fdata$Metabolomics) #>                  Class Class_2 feature_clean #> metab_1 biogenicamines      LC       metab_1 #> metab_2 biogenicamines      LC       metab_2 #> metab_3     aminoacids      LC       metab_3 #> metab_4 biogenicamines      LC       metab_4 #> metab_5     aminoacids      LC       metab_5 #> metab_6     aminoacids      LC       metab_6"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Features and Variables with High Missingness — filter_missing","title":"Filter Features and Variables with High Missingness — filter_missing","text":"Removes exposure variables omics features missing values specified threshold. Generates missing data summaries quality control (QC) plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Features and Variables with High Missingness — filter_missing","text":"","code":"filter_missing(expomicset, na_thresh = 20, na_plot_thresh = 5)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Features and Variables with High Missingness — filter_missing","text":"expomicset MultiAssayExperiment object containing exposure omics data. na_thresh numeric value specifying percentage missing data allowed variable feature removed. Default 20. na_plot_thresh numeric value specifying minimum missing percentage inclusion QC plots. Default 5.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Features and Variables with High Missingness — filter_missing","text":"MultiAssayExperiment object filtered exposure variables omics features. QC results, including missingness summaries plots, stored metadata(expomicset)$na_qc.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Features and Variables with High Missingness — filter_missing","text":"function assesses missingness colData(expomicset) (exposure data) experiments(expomicset) (omics data). Exposure variables na_thresh% missing values removed. Omics features (rows assay matrices) exceeding na_thresh% missing values filtered. Missingness summaries QC plots generated using naniar::gg_miss_var() stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Features and Variables with High Missingness — filter_missing","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Introduce some missingness MultiAssayExperiment::colData(mae)$exposure_pm25[sample(1:20, 5)] <- NA  # Filter features and exposures with high missingness mae_filtered <- filter_missing(     expomicset = mae,     na_thresh = 20,     na_plot_thresh = 5 ) #> Missing Data Filter threshold: 20% #> Filtered metadata variables: exposure_pm25 #> Filtered rows with high missingness in mRNA: 0 #> Filtered rows with high missingness in proteomics: 0"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Non-Normal Exposure Variables — filter_non_normal","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"Removes exposure variables deviate significantly normal distribution based normality test results stored metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"","code":"filter_non_normal(expomicset, p_thresh = 0.05)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"expomicset MultiAssayExperiment object containing exposure omics data. p_thresh numeric value specifying p-value threshold normality. Variables p.value < p_thresh removed. Default 0.05.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"MultiAssayExperiment object non-normal exposure variables removed.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"function identifies exposure variables fail normality test using metadata(expomicset)$transformation$norm_df. Exposure variables p.value < p_thresh removed colData(expomicset). filtering applied colData experiment within experiments(expomicset).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_non_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Non-Normal Exposure Variables — filter_non_normal","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Test for normality mae <- mae |>     run_normality_check() |>     transform_exposure(exposure_cols = c(\"age\", \"bmi\", \"exposure_pm25\")) #> Checking Normality Using Shapiro-Wilk Test #> 2 Exposure Variables are Normally Distributed #> 2 Exposure Variables are NOT Normally Distributed #> Applying the boxcox_best transformation.  # Remove non-normal variables mae_filtered <- mae |>     filter_non_normal() #> Filtering out 0 non-normal exposure variables."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_omics.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter low-quality features in omics assays — filter_omics","title":"Filter low-quality features in omics assays — filter_omics","text":"function applies variance- expression-based filtering across one assays within MultiAssayExperiment object. useful removing low-quality uninformative features downstream analysis.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_omics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter low-quality features in omics assays — filter_omics","text":"","code":"filter_omics(   expomicset,   method = c(\"variance\", \"expression\"),   assays = NULL,   assay_name = 1,   min_var = 1e-05,   min_value = 5,   min_prop = 0.7,   verbose = TRUE )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_omics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter low-quality features in omics assays — filter_omics","text":"expomicset MultiAssayExperiment object containing omics assays. method Filtering method: either \"variance\" \"expression\". assays Character vector assay names filter. NULL, assays filtered. assay_name Name index assay within SummarizedExperiment use. min_var Minimum variance threshold (used method = \"variance\"). min_value Minimum expression value (used method = \"expression\"). min_prop Minimum proportion samples exceeding min_value (used method = \"expression\"). verbose Whether print messages assay filtered.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_omics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter low-quality features in omics assays — filter_omics","text":"filtered MultiAssayExperiment object updated assays step record.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_omics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter low-quality features in omics assays — filter_omics","text":"","code":"# Filter the proteomics assay by variance filtered_mae <- filter_omics(     expomicset = make_example_data(return_mae = TRUE),     method = c(\"variance\"),     assays = \"proteomics\",     assay_name = 1,     min_var = 0.01,     verbose = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully. #> Filtering assay: proteomics #> Filtered 0 of 80 features from 'proteomics' using method 'variance'"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Sample Outliers — filter_sample_outliers","title":"Filter Sample Outliers — filter_sample_outliers","text":"Removes sample outliers MultiAssayExperiment object based PCA analysis.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Sample Outliers — filter_sample_outliers","text":"","code":"filter_sample_outliers(expomicset, outliers = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Sample Outliers — filter_sample_outliers","text":"expomicset MultiAssayExperiment object containing omics exposure data. outliers optional character vector specifying sample names removed. NULL, function uses outliers identified metadata(expomicset)$pca$outliers. Default NULL.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Sample Outliers — filter_sample_outliers","text":"MultiAssayExperiment object specified outliers removed.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Sample Outliers — filter_sample_outliers","text":"function checks presence PCA results metadata(expomicset). outliers provided, retrieves precomputed outliers metadata(expomicset)$pca$outliers. identified samples removed dataset.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/filter_sample_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Sample Outliers — filter_sample_outliers","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run PCA mae <- mae |>     run_pca() #> Identifying common samples. #> Subsetting exposure data. #> Subsetting omics data. #> Performing PCA on Feature Space. #> Performing PCA on Sample Space. #> No outliers detected.  # filter outliers if present mae <- mae |>     filter_sample_outliers() #> Removing outliers:"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/hpo.html","id":null,"dir":"Reference","previous_headings":"","what":"HPO Ontology Table (Human Phenotype Ontology) — hpo","title":"HPO Ontology Table (Human Phenotype Ontology) — hpo","text":"data frame HPO terms downloaded BioPortal June 19, 2025. HPO describes human phenotypic abnormalities used disease annotation.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/hpo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HPO Ontology Table (Human Phenotype Ontology) — hpo","text":"","code":"hpo"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/hpo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HPO Ontology Table (Human Phenotype Ontology) — hpo","text":"data.frame 6 columns: id HPO term ID (e.g., \"HP:0001250\"). name Phenotype label (e.g., \"seizure\"). parents Vector parent term IDs. children Vector child term IDs. ancestors ancestor term IDs. obsolete Logical flag obsolete terms.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/hpo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HPO Ontology Table (Human Phenotype Ontology) — hpo","text":"BioPortal HPO Ontology, downloaded June 19, 2025.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/hpo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HPO Ontology Table (Human Phenotype Ontology) — hpo","text":"","code":"data(hpo) head(hpo) #>                    id                            name    parents #> HP:0000001 HP:0000001                             All            #> HP:0000002 HP:0000002      Abnormality of body height HP:0001507 #> HP:0000003 HP:0000003    Multicystic kidney dysplasia HP:0000107 #> HP:0000005 HP:0000005             Mode of inheritance HP:0000001 #> HP:0000006 HP:0000006  Autosomal dominant inheritance HP:0034345 #> HP:0000007 HP:0000007 Autosomal recessive inheritance HP:0034345 #>                                                                                      children #> HP:0000001 HP:0000005; HP:0000118; HP:0012823; HP:0020228; HP:0032223; HP:0032443; HP:0040279 #> HP:0000002                                                 HP:0000098; HP:0004322; HP:0012772 #> HP:0000003                                                                                    #> HP:0000005                                     HP:0001426; HP:0003745; HP:0034335; HP:0034345 #> HP:0000006                                                                                    #> HP:0000007                                                                                    #>                                                                                                             ancestors #> HP:0000001                                                                                                 HP:0000001 #> HP:0000002                                                             HP:0000001; HP:0000118; HP:0001507; HP:0000002 #> HP:0000003 HP:0000001; HP:0000118; HP:0000119; HP:0000079; HP:0010935; HP:0000077; HP:0012210; HP:0000107; HP:0000003 #> HP:0000005                                                                                     HP:0000001; HP:0000005 #> HP:0000006                                                             HP:0000001; HP:0000005; HP:0034345; HP:0000006 #> HP:0000007                                                             HP:0000001; HP:0000005; HP:0034345; HP:0000007 #>            obsolete #> HP:0000001    FALSE #> HP:0000002    FALSE #> HP:0000003    FALSE #> HP:0000005    FALSE #> HP:0000006    FALSE #> HP:0000007    FALSE"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_annotation_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Ontology Data — load_annotation_data","title":"Load Ontology Data — load_annotation_data","text":"Downloads loads chebi, ecto, hpo global environment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_annotation_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Ontology Data — load_annotation_data","text":"","code":"load_annotation_data(   to_load = c(\"all\", \"chebi\", \"ecto\", \"hpo\"),   dest_dir = tempdir() )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_annotation_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Ontology Data — load_annotation_data","text":"to_load Character vector indicating ontology load. dest_dir Destination directory store temporary data files.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_annotation_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Ontology Data — load_annotation_data","text":"Invisibly returns TRUE ontology data loaded global environment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_annotation_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Ontology Data — load_annotation_data","text":"","code":"# load ontology load_annotation_data(     to_load = \"ecto\" ) #> Downloading ecto.zip using curl... #> Unzipping to C:\\Users\\Jason\\AppData\\Local\\Temp\\RtmpOekZ7O #> Loading ecto.RData"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load example omics data for vignette/demo use — load_example_data","title":"Load example omics data for vignette/demo use — load_example_data","text":"Downloads loads omics_list, annotated_cb, fdata, meta global environment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load example omics data for vignette/demo use — load_example_data","text":"","code":"load_example_data(   to_load = c(\"all\", \"omics_list\", \"annotated_cb\", \"fdata\", \"meta\"),   dest_dir = tempdir() )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load example omics data for vignette/demo use — load_example_data","text":"to_load Character vector indicating data set load. dest_dir Destination directory store temporary data files.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load example omics data for vignette/demo use — load_example_data","text":"Invisibly returns TRUE example data loaded global environment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/load_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load example omics data for vignette/demo use — load_example_data","text":"","code":"# load example data load_example_data(     to_load = \"annotated_cb\" ) #> Downloading annotated_cb.zip using curl... #> Unzipping to C:\\Users\\Jason\\AppData\\Local\\Temp\\RtmpOekZ7O #> Loading annotated_cb.RData"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/make_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Example Data for Testing — make_example_data","title":"Generate Example Data for Testing — make_example_data","text":"helper function generates reproducible dummy dataset containing exposures, mRNA data, proteomics data. can optionally return data MultiAssayExperiment using create_exposomicset.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/make_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Example Data for Testing — make_example_data","text":"","code":"make_example_data(   n_samples = 12,   n_proteins = 80,   use_batch = FALSE,   return_mae = FALSE )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/make_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Example Data for Testing — make_example_data","text":"n_samples Integer. Number samples simulate (default: 12). n_proteins Integer. Number proteins simulate (default: 80). use_batch Logical. TRUE, include \"batch\" variable exposure data (default: FALSE). return_mae Logical. TRUE, return MultiAssayExperiment created using create_exposomicset() (default: FALSE).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/make_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Example Data for Testing — make_example_data","text":"Either: named list containing codebook, exposure, omics, row_data, return_mae = FALSE. MultiAssayExperiment, return_mae = TRUE.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/make_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Example Data for Testing — make_example_data","text":"","code":"# Return as a list dummy <- make_example_data()  # Return as a MultiAssayExperiment mae <- make_example_data(return_mae = TRUE) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample-Level Metadata for the Exposome Challenge Dataset — meta","title":"Sample-Level Metadata for the Exposome Challenge Dataset — meta","text":"data.frame maternal-child metadata including sample identifiers, demographic information, clinical outcomes exposure information.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample-Level Metadata for the Exposome Challenge Dataset — meta","text":"","code":"meta"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/meta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample-Level Metadata for the Exposome Challenge Dataset — meta","text":"data.frame one row per sample columns including: hs_child_age_None Child age years. e3_sex_None Biological sex (Male/Female). h_cohort Cohort identifier. hs_asthma Binary indicator asthma outcome. ... Additional exposure phenotype variables.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/meta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample-Level Metadata for the Exposome Challenge Dataset — meta","text":"Derived ISGlobal Exposome Data Challenge 2021.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample-Level Metadata for the Exposome Challenge Dataset — meta","text":"","code":"data(meta) head(meta) #>       h_abs_ratio_preg_Log h_no2_ratio_preg_Log h_pm10_ratio_preg_None #> s548            0.85260563             3.373861               22.44994 #> s555            0.71601007             3.024288               21.90104 #> s598           -0.35482399             3.373861                9.01958 #> s395            0.29767305             2.864948               13.98486 #> s1135           0.57283889             2.541408               37.36215 #> s178            0.09775766             2.472750               13.58145 #>       h_pm25_ratio_preg_None hs_no2_dy_hs_h_Log hs_no2_wk_hs_h_Log #> s548               18.016866           3.658223           3.571212 #> s555               18.961571           2.501568           2.638058 #> s598                8.954145           1.221778           1.818556 #> s395                9.339700           2.567528           2.798095 #> s1135              13.853442           2.369783           2.206939 #> s178               14.879898           1.104555           1.230386 #>       hs_no2_yr_hs_h_Log hs_pm10_dy_hs_h_None hs_pm10_wk_hs_h_None #> s548            3.229627            37.029556            34.673076 #> s555            2.688654            13.646372            29.141274 #> s598            1.617848             9.771050            13.421016 #> s395            3.067854             8.938537             6.503934 #> s1135           2.296243            36.456271            36.137574 #> s178            1.940459            29.817442            23.862842 #>       hs_pm10_yr_hs_h_None hs_pm25_dy_hs_h_None hs_pm25_wk_hs_h_None #> s548              24.12191            20.442523            16.524717 #> s555              39.06746            13.704656            22.524238 #> s598              11.68626             5.902195             6.317749 #> s395              12.69163             2.433092             3.771206 #> s1135             33.87148            13.835949            11.756729 #> s178              23.96526             4.446991             5.043293 #>       hs_pm25_yr_hs_h_None hs_pm25abs_dy_hs_h_Log hs_pm25abs_wk_hs_h_Log #> s548             10.325866              0.9413520              0.7506622 #> s555             16.524127             -0.1912293              0.2311378 #> s598              4.829015             -1.1806855              0.2503305 #> s395              7.650365             -0.8855793             -0.3277950 #> s1135            12.978987              0.9155942             -0.1380054 #> s178             10.258761              0.1382814             -0.1380054 #>       hs_pm25abs_yr_hs_h_Log h_accesslines300_preg_dic0 #> s548               0.3103651                          0 #> s555               0.1739284                          0 #> s598              -0.2512695                          0 #> s395              -0.2353678                          0 #> s1135              0.1736764                          0 #> s178               0.2510297                          0 #>       h_accesspoints300_preg_Log h_builtdens300_preg_Sqrt #> s548                    3.667571                352.46231 #> s555                    2.656014                362.81048 #> s598                    3.667571                493.82564 #> s395                    2.879144                251.47892 #> s1135                   1.269931                637.87320 #> s178                    3.466906                 82.64075 #>       h_connind300_preg_Sqrt h_fdensity300_preg_Log h_frichness300_preg_None #> s548               10.160145               12.46006               0.05263158 #> s555                4.218770               10.26284               0.00000000 #> s598               17.394436               11.87227               0.12280702 #> s395               10.838217               11.36145               0.01754386 #> s1135              18.961015               10.26284               0.00000000 #> s178                3.773383               10.26284               0.00000000 #>       h_landuseshan300_preg_None h_popdens_preg_Sqrt #> s548                   0.8122130            74.98000 #> s555                   0.4314893            84.98823 #> s598                   0.4532843            74.98000 #> s395                   0.4645479            68.86786 #> s1135                  0.3904512            97.75480 #> s178                   0.2546103            41.54516 #>       h_walkability_mean_preg_None hs_accesslines300_h_dic0 #> s548                         0.350                        0 #> s555                         0.200                        0 #> s598                         0.350                        0 #> s395                         0.200                        0 #> s1135                        0.275                        0 #> s178                         0.150                        0 #>       hs_accesspoints300_h_Log hs_builtdens300_h_Sqrt hs_connind300_h_Log #> s548                 2.1860528               523.2890            4.958529 #> s555                 2.5224930               331.8434            3.834599 #> s598                 3.5209711               133.3942            5.220893 #> s395                 3.6210518               250.3050            4.766157 #> s1135                0.5770643               352.8191            5.119797 #> s178                 3.5209711               330.9970            4.214089 #>       hs_fdensity300_h_Log hs_landuseshan300_h_None hs_popdens_h_Sqrt #> s548              10.26284                0.5664721         83.466400 #> s555              10.26284                0.5472160         10.246951 #> s598              11.64913                0.3727202          5.140307 #> s395              10.95598                0.3741057         13.228757 #> s1135             10.26284                0.3093658          6.244998 #> s178              10.26284                0.5446557         33.778692 #>       hs_walkability_mean_h_None hs_accesslines300_s_dic0 #> s548                       0.375                        1 #> s555                       0.275                        0 #> s598                       0.275                        0 #> s395                       0.250                        0 #> s1135                      0.300                        0 #> s178                       0.200                        0 #>       hs_accesspoints300_s_Log hs_builtdens300_s_Sqrt hs_connind300_s_Log #> s548                 2.5224930               402.8545            4.636945 #> s555                 3.4097490               503.4886            4.636945 #> s598                 1.6753021               127.0561            4.042238 #> s395                 1.6753021               221.4176            4.703637 #> s1135                0.5770643               300.8570            4.527746 #> s178                 3.2845902               404.2621            4.796010 #>       hs_fdensity300_s_Log hs_landuseshan300_s_None hs_popdens_s_Sqrt #> s548              11.64913                0.5284814         69.469651 #> s555              12.05459                0.5515236          6.480741 #> s598              13.72857                0.3310432          3.328225 #> s395              10.95598                0.5713983         48.756297 #> s1135             10.26284                0.4754483         48.948953 #> s178              10.26284                0.5329996          8.944272 #>       h_Absorbance_Log h_Benzene_Log h_NO2_Log h_PM_Log h_TEX_Log #> s548         0.2319273     0.8362600  6.172735 2.634545  3.079844 #> s555        -0.5441289     0.6195517  3.285681 2.011653  3.342032 #> s598        -0.7105256     0.4032863  2.678822 1.845124  4.283420 #> s395        -0.6001003     0.1976807  3.209300 2.190706  3.752039 #> s1135       -0.1702925     0.6871132  2.523871 2.702194  3.079750 #> s178        -0.8927670     0.8544012  3.132325 1.986648  3.160899 #>       e3_alcpreg_yn_None h_bfdur_Ter h_cereal_preg_Ter h_dairy_preg_Ter #> s548                   1 (10.8,34.9]          (9,27.3]      (17.1,27.1] #> s555                   0  (34.9,Inf]             (0,9]       (27.1,Inf] #> s598                   1  (34.9,Inf]        (27.3,Inf]      (17.1,27.1] #> s395                   0  (34.9,Inf]          (9,27.3]       (27.1,Inf] #> s1135                  1 (10.8,34.9]             (0,9]      (17.1,27.1] #> s178                   0    (0,10.8]        (27.3,Inf]      (17.1,27.1] #>       h_fastfood_preg_Ter h_fish_preg_Ter h_folic_t1_None h_fruit_preg_Ter #> s548           (0.83,Inf]       (1.9,4.1]               0       (0.6,18.2] #> s555           (0.83,Inf]       (4.1,Inf]               0       (0.6,18.2] #> s598          (0.25,0.83]       (1.9,4.1]               0       (0.6,18.2] #> s395          (0.25,0.83]       (1.9,4.1]               0       (0.6,18.2] #> s1135          (0.83,Inf]         (0,1.9]               1       (18.2,Inf] #> s178           (0.83,Inf]         (0,1.9]               0       (18.2,Inf] #>       h_legume_preg_Ter h_meat_preg_Ter h_pamod_t3_None h_pavig_t3_None #> s548            (0.5,2]         (0,6.5]            None          Medium #> s555            (2,Inf]        (6.5,10]      Very Often             Low #> s598            (0,0.5]        (10,Inf]      Very Often             Low #> s395            (0,0.5]        (10,Inf]           Often             Low #> s1135           (0.5,2]        (10,Inf]      Very Often             Low #> s178            (2,Inf]        (6.5,10]      Very Often          Medium #>       h_veg_preg_Ter hs_bakery_prod_Ter hs_beverages_Ter hs_break_cer_Ter #> s548      (8.8,16.5]              (2,6]          (1,Inf]        (5.5,Inf] #> s555         (0,8.8]              (2,6]          (1,Inf]        (1.1,5.5] #> s598      (16.5,Inf]              (2,6]          (1,Inf]        (1.1,5.5] #> s395         (0,8.8]              (0,2]        (0.132,1]        (1.1,5.5] #> s1135     (16.5,Inf]            (6,Inf]        (0,0.132]        (1.1,5.5] #> s178         (0,8.8]            (6,Inf]          (1,Inf]          (0,1.1] #>       hs_caff_drink_Ter hs_dairy_Ter hs_fastfood_Ter hs_KIDMED_None #> s548          (0,0.132]  (14.6,25.6]       (0,0.132]              4 #> s555          (0,0.132]     (0,14.6]     (0.132,0.5]              2 #> s598        (0.132,Inf]     (0,14.6]       (0.5,Inf]              5 #> s395        (0.132,Inf]  (14.6,25.6]       (0.5,Inf]              7 #> s1135         (0,0.132]  (14.6,25.6]     (0.132,0.5]              4 #> s178        (0.132,Inf]   (25.6,Inf]     (0.132,0.5]              3 #>       hs_mvpa_prd_alt_None hs_org_food_Ter hs_pet_cat_r2_None #> s548              19.71076       (0.132,1]                  0 #> s555              47.75195         (1,Inf]                  0 #> s598              31.83190         (1,Inf]                  0 #> s395             110.76032       (0.132,1]                  0 #> s1135             86.06060       (0,0.132]                  0 #> s178              12.12149         (1,Inf]                  0 #>       hs_pet_dog_r2_None hs_pet_None hs_proc_meat_Ter hs_readymade_Ter #> s548                   0          No          (1.5,4]        (0.5,Inf] #> s555                   0          No          (1.5,4]        (0.5,Inf] #> s598                   0          No          (0,1.5]        (0.5,Inf] #> s395                   0          No          (4,Inf]        (0.5,Inf] #> s1135                  0          No          (1.5,4]      (0.132,0.5] #> s178                   0          No          (1.5,4]        (0.5,Inf] #>       hs_sd_wk_None hs_total_bread_Ter hs_total_cereal_Ter hs_total_fish_Ter #> s548      183.57143           (7,17.5]         (14.1,23.6]           (3,Inf] #> s555      570.00000              (0,7]            (0,14.1]           (1.5,3] #> s598      166.42857              (0,7]            (0,14.1]           (3,Inf] #> s395      117.85714           (7,17.5]         (14.1,23.6]           (1.5,3] #> s1135     435.71429              (0,7]            (0,14.1]           (0,1.5] #> s178       66.42857         (17.5,Inf]         (14.1,23.6]           (0,1.5] #>       hs_total_fruits_Ter hs_total_lipids_Ter hs_total_meat_Ter #> s548           (14.1,Inf]               (0,3]             (6,9] #> s555                (0,7]               (3,7]             (6,9] #> s598             (7,14.1]               (3,7]             (0,6] #> s395           (14.1,Inf]               (3,7]           (9,Inf] #> s1135            (7,14.1]               (0,3]             (0,6] #> s178                (0,7]             (7,Inf]           (9,Inf] #>       hs_total_potatoes_Ter hs_total_sweets_Ter hs_total_veg_Ter #> s548                (4,Inf]             (0,4.1]        (8.5,Inf] #> s555                (4,Inf]           (4.1,8.5]          (6,8.5] #> s598                  (0,3]             (0,4.1]        (8.5,Inf] #> s395                  (0,3]           (4.1,8.5]        (8.5,Inf] #> s1135               (4,Inf]           (4.1,8.5]        (8.5,Inf] #> s178                (4,Inf]           (8.5,Inf]        (8.5,Inf] #>       hs_total_yog_Ter hs_dif_hours_total_None hs_as_c_Log2 hs_as_m_Log2 #> s548             (0,6]               10.277709    1.6553518    -3.929044 #> s555             (0,6]               10.371332   -5.4796130   -18.893931 #> s598             (0,6]                9.793991    0.2016339     3.000000 #> s395         (8.5,Inf]               11.182731    1.0285692     0.790772 #> s1135            (0,6]                9.622349   -2.7505391    -7.984624 #> s178         (8.5,Inf]               10.454553    1.2078929     1.286881 #>       hs_cd_c_Log2 hs_cd_m_Log2 hs_co_c_Log2 hs_co_m_Log2 hs_cs_c_Log2 #> s548     -5.993092   -2.9657843    -2.046921   -0.1568201   0.27500705 #> s555     -3.035047   -3.1328943    -4.025618   -2.1078033   0.08406426 #> s598     -3.738890   -3.4851960    -2.145605   -2.1140352   0.61353165 #> s395     -4.451662   -0.9351171    -2.634867   -2.9545570   0.82374936 #> s1135    -7.858989   -2.7466158    -1.831358   -1.1046974  -0.20257192 #> s178     -3.932361   -2.7466158    -3.095420    0.2265085   0.64154603 #>       hs_cs_m_Log2 hs_cu_c_Log2 hs_cu_m_Log2 hs_hg_c_Log2 hs_hg_m_Log2 #> s548    0.35614381     9.661778     9.890264    1.1243281  -1.27578631 #> s555    0.15055968     9.658211    10.958553   -1.2898273  -0.58424133 #> s598    1.01435529     9.640245    10.321928   -0.8943219   1.85199884 #> s395   -0.10159814     9.763212    10.321928   -0.1795147   0.57531233 #> s1135   0.02856915     9.658211    10.116344   -0.4150375   1.88981713 #> s178   -0.11872694     9.588715    10.216746    0.8953026  -0.06642736 #>       hs_mn_c_Log2 hs_mn_m_Log2 hs_mo_c_Log2 hs_mo_m_Log2 hs_pb_c_Log2 #> s548      2.912650     4.087463    1.2448871   -1.1976000     2.987321 #> s555      3.596935     3.536053    0.6040713   -1.7226103     2.891419 #> s598      2.929791     3.220330   -0.6060347   -0.1713684     2.568032 #> s395      3.001802     3.754888   -1.1392358   -0.7321646     2.232661 #> s1135     2.722466     2.629939    3.1715271    0.1110313     3.291309 #> s178      3.405992     3.666757   -0.5269924   -0.7321646     2.881665 #>       hs_pb_m_Log2 hs_tl_cdich_None hs_tl_mdich_None h_humidity_preg_None #> s548      2.316146       Undetected       Undetected             82.30592 #> s555      3.030336       Undetected       Undetected             83.01580 #> s598      3.161888       Undetected       Undetected             69.73431 #> s395      2.575312       Undetected       Undetected             70.72809 #> s1135     3.195348       Undetected       Undetected             57.18486 #> s178      3.807355       Undetected       Undetected             74.95506 #>       h_pressure_preg_None h_temperature_preg_None hs_hum_mt_hs_h_None #> s548              980.8294                7.982746            68.20094 #> s555              980.8445                9.808083            82.44498 #> s598             1000.8884               13.698591            85.46740 #> s395             1000.2018                9.876204            89.29032 #> s1135            1015.3033               21.419140            57.19452 #> s178             1003.0392               12.886891            71.39742 #>       hs_tm_mt_hs_h_None hs_uvdvf_mt_hs_h_None hs_hum_dy_hs_h_None #> s548            6.632258             0.2676667            68.91667 #> s555           13.717742             1.3237931            80.09360 #> s598            4.058379             0.0330000            59.00000 #> s395            6.519355             0.3062069            99.00000 #> s1135          25.974194             5.1133333            69.99000 #> s178           16.128752             2.9860000            83.09333 #>       hs_hum_wk_hs_h_None hs_tm_dy_hs_h_None hs_tm_wk_hs_h_None #> s548             59.88021           6.529167           6.041406 #> s555             80.23743           7.133320          13.367036 #> s598             91.12500          -2.900000          -1.025000 #> s395             98.25000           2.600000           4.450000 #> s1135            64.11750          25.600000          25.475000 #> s178             67.23368          20.383871          15.925000 #>       hs_uvdvf_dy_hs_h_None hs_uvdvf_wk_hs_h_None hs_blueyn300_s_None #> s548                   0.28            0.28714286                   0 #> s555                   1.38            1.75142857                   0 #> s598                   0.01            0.01428571                   1 #> s395                   0.12            0.17428571                   0 #> s1135                  5.35            4.87428571                   0 #> s178                   3.37            3.31857143                   0 #>       h_blueyn300_preg_None h_greenyn300_preg_None h_ndvi100_preg_None #> s548                      0                      1           0.3309343 #> s555                      0                      1           0.3897694 #> s598                      1                      0           0.4118056 #> s395                      0                      1           0.6900000 #> s1135                     0                      1           0.1373250 #> s178                      0                      1           0.5318743 #>       hs_greenyn300_s_None hs_blueyn300_h_None hs_greenyn300_h_None #> s548                     1                   0                    1 #> s555                     1                   0                    1 #> s598                     1                   1                    1 #> s395                     1                   0                    1 #> s1135                    1                   0                    0 #> s178                     0                   0                    1 #>       hs_ndvi100_h_None hs_ndvi100_s_None h_lden_cat_preg_None hs_ln_cat_h_None #> s548          0.2619719         0.3700306             65.38800                4 #> s555          0.4859200         0.5260056             39.41497                2 #> s598          0.8076286         0.6063735             65.38800                2 #> s395          0.4668250         0.5365706             50.00000                2 #> s1135         0.5183771         0.3507906             71.29236                1 #> s178          0.6309914         0.4598028             64.36400                2 #>       hs_lden_cat_s_None hs_dde_cadj_Log2 hs_dde_madj_Log2 hs_ddt_cadj_Log2 #> s548                   3         4.397398         7.280566        1.4965645 #> s555                   2         5.073660         3.967523        0.2209479 #> s598                   1         3.184601         3.743854       -1.4298728 #> s395                   2         5.021621         4.993255      -10.2899871 #> s1135                  3         6.058512         8.507109        0.8078187 #> s178                   1         3.228497         5.786281       -4.0315477 #>       hs_ddt_madj_Log2 hs_hcb_cadj_Log2 hs_hcb_madj_Log2 hs_pcb118_cadj_Log2 #> s548         0.8023278         2.328545         4.058057           0.7261138 #> s555         0.6764266         4.603839         2.034068           1.8140500 #> s598        -1.0738303         3.374735         2.676388           1.6977361 #> s395        -0.5898499         3.908736         2.958089           2.2821563 #> s1135        1.8622269         3.250550         3.346906           0.9371018 #> s178        -0.5401198         2.093691         2.925833           1.2004458 #>       hs_pcb118_madj_Log2 hs_pcb138_cadj_Log2 hs_pcb138_madj_Log2 #> s548            0.8773249            2.103670            3.450788 #> s555            1.0521823            3.602497            1.787701 #> s598            1.5415867            3.121447            2.937510 #> s395            2.0683998            4.141065            3.768623 #> s1135           0.2991493            1.923029            2.178092 #> s178            1.8856717            1.838072            3.998914 #>       hs_pcb153_cadj_Log2 hs_pcb153_madj_Log2 hs_pcb170_cadj_Log2 #> s548             3.427075            4.398305           0.6506521 #> s555             4.474462            2.852110           1.8193741 #> s598             4.291712            4.057322           1.7768773 #> s395             5.189689            4.677404           2.5954040 #> s1135            3.046468            3.270783          -0.1944951 #> s178             2.850649            5.343338           1.9342381 #>       hs_pcb170_madj_Log2 hs_pcb180_cadj_Log2 hs_pcb180_madj_Log2 #> s548            0.4639773           1.5324170            2.840244 #> s555            0.4639773           3.1056819            2.427232 #> s598            1.9412515           3.2731852            3.653995 #> s395            2.0650106           4.1424622            3.820939 #> s1135           1.3968458           1.0001747            2.477865 #> s178            3.6451235           0.6216219            4.977054 #>       hs_sumPCBs5_cadj_Log2 hs_sumPCBs5_madj_Log2 hs_dep_cadj_Log2 #> s548               4.529040              3.203309        -5.621780 #> s555               5.640019              3.203309        -3.874674 #> s598               5.479832              6.531905         2.643732 #> s395               6.692561              5.981735         2.093970 #> s1135              4.074065              6.084188         3.335985 #> s178               4.612107              6.772989        -6.073264 #>       hs_dep_madj_Log2 hs_detp_cadj_Log2 hs_detp_madj_Log2 hs_dmdtp_cdich_None #> s548         3.3189632        -0.1968193         3.0292014          Undetected #> s555         1.5457521        -2.8543646         1.0078850          Undetected #> s598        -0.6129715        -5.0395139        -6.5515954          Undetected #> s395         2.1288965         0.6179130         1.6973774          Undetected #> s1135        2.1345302         3.2053664         0.2568657          Undetected #> s178         1.8602252         0.8498652        -7.8249558          Undetected #>       hs_dmp_cadj_Log2 hs_dmp_madj_Log2 hs_dmtp_cadj_Log2 hs_dmtp_madj_Log2 #> s548        -3.9134270         5.772154         0.3202063          6.642612 #> s555         0.3406811         2.194291        -2.2143799          1.200211 #> s598         0.4393773         2.194291         1.8175012          1.438817 #> s395        -7.1109560         5.212931         1.6536180          5.496598 #> s1135        2.5499939         4.140999         1.9674973          5.523995 #> s178         1.0094394         2.599798         2.9916697          2.441006 #>       hs_pbde153_cadj_Log2 hs_pbde153_madj_Log2 hs_pbde47_cadj_Log2 #> s548            -0.2220472          -2.02195748           -1.327538 #> s555            -8.2312357           0.06158347           -2.449476 #> s598            -1.9043665         -10.85822494           -2.365715 #> s395            -2.2771770          -1.45803551           -1.986786 #> s1135          -13.0227177           0.06158347          -11.190074 #> s178           -11.4125543          -0.72159095           -2.214787 #>       hs_pbde47_madj_Log2 hs_pfhxs_c_Log2 hs_pfhxs_m_Log2 hs_pfna_c_Log2 #> s548           -1.8333971      -1.4833867      -0.2529789     -0.4205499 #> s555           -0.2313590      -2.4041523      -1.7230151     -0.8139326 #> s598           -0.7402796      -1.1239863      -1.4477809      0.9039864 #> s395           -0.6862967      -0.3054900      -1.3637356     -1.0512585 #> s1135          -0.2313590      -3.2957240      -1.7705798     -0.8934231 #> s178           -0.8263363      -0.4557693      -0.2330125     -0.5361877 #>       hs_pfna_m_Log2 hs_pfoa_c_Log2 hs_pfoa_m_Log2 hs_pfos_c_Log2 #> s548     -0.32565470    0.575337219    1.837058207    -0.02184093 #> s555     -0.05451747    0.789403199    0.008883347     0.31034727 #> s598     -5.74758539    1.043480466    0.147029348     1.16281873 #> s395     -0.70319902    0.897028002    1.605374581     1.77472838 #> s1135     0.41086402    0.766020855    1.568974543     0.48611542 #> s178     -0.94370886    0.006974908    1.914157494     1.66382171 #>       hs_pfos_m_Log2 hs_pfunda_c_Log2 hs_pfunda_m_Log2 hs_bpa_cadj_Log2 #> s548        1.973866        -2.859890        -3.212220        2.7934139 #> s555        2.363030        -7.581327        -2.612664        4.1444726 #> s598        2.087922        -4.285316        -1.818424        1.4320657 #> s395        3.160208        -3.865110        -2.413287        1.5370346 #> s1135       1.886701        -4.997875        -2.915871        3.9929597 #> s178        3.225800        -4.624617        -3.490419        0.8748443 #>       hs_bpa_madj_Log2 hs_bupa_cadj_Log2 hs_bupa_madj_Log2 hs_etpa_cadj_Log2 #> s548        1.16763084        -3.2085230          6.742633        -1.1156996 #> s555        0.05551944        -0.2497832         -1.237360         3.9009840 #> s598        5.14723226        -5.7183256          6.333751        -0.9372423 #> s395        2.84965889        -4.2118856          1.592276        -1.1699494 #> s1135       5.02859543        -4.2759953         -0.910728         3.3071302 #> s178        0.83178137        -9.8253317         -2.308190        -0.8220723 #>       hs_etpa_madj_Log2 hs_mepa_cadj_Log2 hs_mepa_madj_Log2 hs_oxbe_cadj_Log2 #> s548          5.4839829       5.530419435          8.018891         2.1065968 #> s555          4.0653328       7.155088119          6.972590        -0.5965608 #> s598          5.7990156      -0.006212212          8.133136         0.9232409 #> s395         12.7256918       3.990299542          6.972590         1.7788307 #> s1135         2.1128397       5.275220421          4.601472         3.4310270 #> s178         -0.2066972       1.996507969          5.290413        -1.7710243 #>       hs_oxbe_madj_Log2 hs_prpa_cadj_Log2 hs_prpa_madj_Log2 hs_trcs_cadj_Log2 #> s548           2.439743          2.929369          6.099105        -1.0922651 #> s555          -1.520746         -4.830559          5.774825         4.0059123 #> s598           8.671510         -4.761428          9.634782         0.2138049 #> s395           6.274219         -7.337670          6.742139        -2.1521805 #> s1135          5.487510          2.380210          1.575864         0.3766612 #> s178           6.580407         -4.553921          2.909095        -1.9094638 #>       hs_trcs_madj_Log2 hs_mbzp_cadj_Log2 hs_mbzp_madj_Log2 hs_mecpp_cadj_Log2 #> s548           6.611306          3.356539          1.791004           5.077850 #> s555           2.311827          3.818532          2.991920           6.360956 #> s598           9.566305          2.532486          2.198102           5.118947 #> s395           6.308943          1.690778          1.120067           4.370613 #> s1135          8.443111          4.304188          3.363802           6.570902 #> s178           9.337416          1.963026          3.627870           4.169406 #>       hs_mecpp_madj_Log2 hs_mehhp_cadj_Log2 hs_mehhp_madj_Log2 #> s548            4.262406           4.479090           2.966073 #> s555            4.326828           5.049778           3.709055 #> s598            5.521025           3.942982           3.726604 #> s395            4.682827           2.408466           3.797013 #> s1135           5.386673           4.944154           4.584204 #> s178            5.333671           3.358253           4.646188 #>       hs_mehp_cadj_Log2 hs_mehp_madj_Log2 hs_meohp_cadj_Log2 hs_meohp_madj_Log2 #> s548          2.3883178          1.984630           4.526982           2.733261 #> s555          2.3136518          3.808210           4.882229           4.360200 #> s598          1.8776791          3.888287           3.499562           3.384968 #> s395          0.3708812          3.385743           1.702568           3.018504 #> s1135         2.5552289          2.340926           4.936904           3.927649 #> s178          0.6779291          3.274544           2.785315           4.110425 #>       hs_mep_cadj_Log2 hs_mep_madj_Log2 hs_mibp_cadj_Log2 hs_mibp_madj_Log2 #> s548          6.956249         8.479863          4.007595          4.592135 #> s555          4.725078         8.713375          7.004560          4.976039 #> s598          5.219245        10.690529          4.443710          5.978889 #> s395          2.305678         6.543938          3.612705          3.762709 #> s1135         5.911079        11.460176          5.807431          5.533377 #> s178          6.765690         6.261872          4.925551          4.686872 #>       hs_mnbp_cadj_Log2 hs_mnbp_madj_Log2 hs_ohminp_cadj_Log2 #> s548           4.096990          3.799163            2.337238 #> s555           5.766602          5.357187            3.740723 #> s598           5.052293          5.405388            1.908719 #> s395           3.372310          3.102331            1.033223 #> s1135          6.311060          4.938192            2.897308 #> s178           4.882002          5.981519            2.954178 #>       hs_ohminp_madj_Log2 hs_oxominp_cadj_Log2 hs_oxominp_madj_Log2 #> s548           -0.4079240           2.59419576           -0.4436485 #> s555           -0.5650174           3.15568465           -0.6939739 #> s598            0.7619635           1.43555340            0.3585584 #> s395            3.1362128          -0.03892898            1.7285519 #> s1135          -0.4683972           2.42987842           -0.7125105 #> s178           -0.5542561           1.87135415           -0.0589566 #>       hs_sumDEHP_cadj_Log2 hs_sumDEHP_madj_Log2 FAS_cat_None #> s548              6.399445             5.154776         High #> s555              6.970544             5.805357         High #> s598              6.575202             6.298866       Middle #> s395              4.340647             5.768232         High #> s1135             8.030191             6.270853       Middle #> s178              5.002653             6.429820         High #>       hs_contactfam_3cat_num_None hs_hm_pers_None hs_participation_3cat_None #> s548                  Once a week               4                       None #> s555               (almost) Daily               4                       None #> s598               (almost) Daily               5    2 or more organisations #> s395                  Once a week               4    2 or more organisations #> s1135              (almost) Daily               4                       None #> s178               (almost) Daily               4                       None #>       e3_asmokcigd_p_None hs_cotinine_cdich_None hs_cotinine_mcat_None #> s548            0.0000000             Undetected           Non-smokers #> s555            0.0000000             Undetected               Smokers #> s598            0.0000000             Undetected           Non-smokers #> s395            0.0000000             Undetected           Non-smokers #> s1135           0.6666666             Undetected           SHS smokers #> s178            0.0000000             Undetected           SHS smokers #>       hs_globalexp2_None hs_smk_parents_None h_distinvnear1_preg_Log #> s548            exposure             neither               -4.148408 #> s555         no exposure             neither               -4.740835 #> s598         no exposure             neither               -5.718191 #> s395         no exposure             neither               -2.841497 #> s1135           exposure                both                0.501706 #> s178         no exposure             neither               -6.181876 #>       h_trafload_preg_pow1over3 h_trafnear_preg_pow1over3 #> s548                 68.6958953                  7.937005 #> s555                  0.3458301                 23.990158 #> s598                113.0812135                  7.937005 #> s395                  0.3458301                  7.937005 #> s1135               139.5134895                 10.811445 #> s178                  0.3458301                 10.000000 #>       hs_trafload_h_pow1over3 hs_trafnear_h_pow1over3 h_bro_preg_Log #> s548                135.99576               44.968542      2.6710404 #> s555                139.29800               26.711608     -1.6044503 #> s598                168.02106                7.937005     -0.5430045 #> s395                 56.66268                7.937005     -0.7318880 #> s1135                65.06702                7.937005      2.6710404 #> s178                114.86848               10.000000      2.0083483 #>       h_clf_preg_Log h_thm_preg_Log h_cohort e3_sex_None e3_yearbir_None #> s548       3.6368129      3.8261620        3      female            2006 #> s555      -0.4758875      0.4719939        4        male            2008 #> s598       2.7726512      2.8173143        5        male            2005 #> s395       1.7919261      1.8918844        5        male            2007 #> s1135     -4.4191264      1.5373435        6        male            2008 #> s178      -6.9077553      2.0283922        2      female            2004 #>       h_mbmi_None hs_wgtgain_None e3_gac_None h_age_None h_edumc_None #> s548     18.90690              NA    40.85714   35.73717            2 #> s555     30.10212              14    39.00000   24.61187            2 #> s598     20.46334              28    39.00000   36.00000            3 #> s395     22.14533               7    41.14286   35.07574            3 #> s1135    19.13265              19    38.57143   24.58607            2 #> s178     19.33373              21    40.14286   32.25462            3 #>       h_native_None h_parity_None hs_child_age_None hs_c_height_None #> s548              2             0          8.421743            1.325 #> s555              2             0          6.102669            1.240 #> s598              2             2          8.917180            1.405 #> s395              2             1          6.921173            1.250 #> s1135             2             1          6.620009            1.250 #> s178              2             2         10.699521            1.455 #>       hs_c_weight_None e3_bw hs_asthma hs_zbmi_who hs_correct_raven hs_Gen_Tot #> s548              30.1  3530         0        0.65               30    19.2500 #> s555              21.0  3370         0       -1.40               22    48.0000 #> s598              35.9  4328         0        1.15               33     8.0625 #> s395              28.2  3242         0        0.47               24     4.0000 #> s1135             22.7  3300         0       -0.68               23    12.0625 #> s178              26.1  3215         0        0.62               32    22.1875 #>       hs_bmi_c_cat #> s548             2 #> s555             2 #> s598             3 #> s395             2 #> s1135            2 #> s178             2"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/omics_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Omics Assays for the Exposome Dataset — omics_list","title":"Multi-Omics Assays for the Exposome Dataset — omics_list","text":"named list omics data matrices features × samples format. assay contains processed data different platform.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/omics_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Omics Assays for the Exposome Dataset — omics_list","text":"","code":"omics_list"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/omics_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Omics Assays for the Exposome Dataset — omics_list","text":"named list following components: Gene Expression matrix data.frame gene expression values. Methylation matrix data.frame methylation levels. Probes filtered include top 20% variant probes. Metabolomics matrix data.frame metabolite concentrations.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/omics_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multi-Omics Assays for the Exposome Dataset — omics_list","text":"Derived ISGlobal Exposome Data Challenge 2021.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/omics_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-Omics Assays for the Exposome Dataset — omics_list","text":"","code":"data(omics_list) names(omics_list) #> [1] \"Gene Expression\" \"Methylation\"     \"Metabolomics\"    lapply(omics_list, dim) #> $`Gene Expression` #> [1] 28738  1007 #>  #> $Methylation #> [1] 59844   918 #>  #> $Metabolomics #> [1]  177 1198 #>"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Ontology Annotation Shiny App — ont_annot_app","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"function launches Shiny application annotating exposome variable names using ontology terms HPO, ENVO, ChEBI. app bundled tidyexposomics package allows interactive selection search ontology terms.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"","code":"ont_annot_app()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"Launches Shiny app new window; return value.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/ont_annot_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Ontology Annotation Shiny App — ont_annot_app","text":"","code":"if (FALSE) { # interactive() # Launch the ontology annotation app ont_annot_app() }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"Extracts specified omics dataset MultiAssayExperiment, optionally filters feature (row) names, returns tidy tibble structure tidybulk::tidybulk(). output includes assay values along sample metadata (colData) feature metadata (rowData).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"","code":"pivot_exp(expomicset, omics_name, features = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"expomicset MultiAssayExperiment object containing omics assays. omics_name character string. name omics dataset extract (e.g., \"Proteomics\"). features Optional character vector row (feature) names retain. NULL, features included.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"tibble tidybulk format one row per feature/sample pair, including metadata new column exp_name indicating assay source.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot a selected omics dataset from a MultiAssayExperiment into tidybulk format — pivot_exp","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # pivot experiment exp_data <- mae |>     pivot_exp(         omics_name = \"mRNA\",         features = \"feat_42\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"Extracts feature-level metadata across assays MultiAssayExperiment returns combined tibble.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"","code":"pivot_feature(expomicset)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"expomicset MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"tibble feature metadata assays, added .exp_name column.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"function: Iterates assays MultiAssayExperiment. Updates assay’s sample metadata (colData) using .update_assay_colData(). Extracts feature-level metadata using tidybulk::pivot_transcript(). Combines results across assays single tibble, adding .exp_name column.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Feature Metadata from a MultiAssayExperiment — pivot_feature","text":"","code":"#' # create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # pivot experiment feature_data <- mae |>     pivot_feature()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"Extracts formats sample-level metadata (colData) MultiAssayExperiment SummarizedExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"","code":"pivot_sample(x, ...)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"x MultiAssayExperiment SummarizedExperiment object. ... Additional arguments passed tidybulk::pivot_sample() SummarizedExperiment objects.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"tibble containing sample metadata added .sample column.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"function: Extracts sample metadata MultiAssayExperiment using colData(), converting tibble. Calls tidybulk::pivot_sample() applied SummarizedExperiment object. Error Handling: Returns error x MultiAssayExperiment SummarizedExperiment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/pivot_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Sample Metadata from MultiAssayExperiment or SummarizedExperiment — pivot_sample","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  sample_data <- mae |>     pivot_sample()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Association Results (Unified Forest Plot) — plot_association","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"Generates forest plot association results source stored metadata MultiAssayExperiment object. Supports faceting visual augmentation R^2 tiles available.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"","code":"plot_association(   expomicset,   source = c(\"omics\", \"exposures\", \"factors\", \"go_pcs\"),   terms = NULL,   filter_col = \"p.value\",   filter_thresh = 0.05,   direction_filter = \"all\",   add_r2_tile = TRUE,   r2_col = \"adj_r2\",   facet = FALSE,   nrow = 1,   subtitle = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"expomicset MultiAssayExperiment object containing association results metadata. source Character string indicating association source. One \"omics\", \"exposures\", \"factors\", \"go_pcs\". terms Optional character vector term names subset plot . Default NULL (include ). filter_col Column used assess statistical significance (default: \"p.value\"). filter_thresh Numeric threshold applied filter_col (default: 0.05). direction_filter Direction associations retain. One \"\" (default), \"\", \"\". add_r2_tile Logical; TRUE, includes tile plot r2_col (default: TRUE). r2_col Column used coloring tile plot (default: \"adj_r2\"). facet Logical; TRUE source == \"go_pcs\", apply nested faceting experiment GO cluster (default: FALSE). nrow Integer; number rows facet layout enabled (default: 1). subtitle Optional subtitle plot. NULL, automatically generated covariates used model.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"ggplot2 object: either single forest plot composite plot R^2 tile strip.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"function visualizes effect size estimates confidence intervals association analyses. allows filtering direction (\"\" positive, \"\" negative) significance. source = \"go_pcs\", supports special formatting splitting term labels nested facets. R^2 tile (enabled) adds side heatmap indicating model fit association. can useful model diagnostics.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Association Results (Unified Forest Plot) — plot_association","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run association tests mae <- mae |>     run_association(         source = \"exposures\",         feature_set = c(\"exposure_pm25\", \"exposure_no2\"),         outcome = \"smoker\",         covariates = c(\"age\"),         family = \"binomial\"     ) #> Running GLMs.  assoc_plot <- mae |>     plot_association(         source = \"exposures\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"Generates circular network plot visualize relationships exposures, either based correlation (\"exposures\") shared features (\"degs\", \"factors\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"","code":"plot_circos_correlation(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\", \"pcs\"),   exposure_cols = NULL,   corr_threshold = NULL,   shared_cutoff = 10,   annotation_colors = NULL,   low = \"#006666\",   mid = \"white\",   high = \"#8E0152\",   midpoint = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"expomicset MultiAssayExperiment object. feature_type One \"exposures\", \"degs\", \"factors\". exposure_cols Character vector exposures include (\"exposures\"). corr_threshold Minimum |correlation| (\"exposures\"). shared_cutoff Minimum number shared features (\"degs\" \"factors\"). Default = 10. annotation_colors Optional named vector colors categories. low low value color edges. mid middle value color edges. high high value color edges. midpoint Midpoint edge color gradient. Defaults 0 (correlations) mean shared features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"ggplot object (ggraph circular plot).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_circos_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Circular Network of Exposure Relationships — plot_circos_correlation","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run correlation analysis mae <- mae |>     run_correlation(         feature_type = \"exposures\",         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     )  # create the circos plot circos_plot <- mae |>     plot_circos_correlation(         feature_type = \"exposures\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"Generates bar plot summary exposure-feature correlations using customizable modes.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"","code":"plot_correlation_summary(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\", \"pcs\"),   mode = c(\"top_exposures\", \"top_features\", \"exposure_category\", \"assay\", \"summary\"),   top_n = 15 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"expomicset MultiAssayExperiment object correlation results metadata. feature_type One \"degs\", \"factors\", \"omics\", \"exposures\". mode One : \"top_exposures\": Top exposures assay \"top_features\": Top features exposure category \"exposure_category\": Total associations exposure category \"assay\": Total associations omics assay \"summary\": Patchwork layout combining top_n Number top exposures features display (top modes). Default 15.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"ggplot2 object patchwork object (mode = \"summary\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Correlation Summary from Exposure-Feature Correlations — plot_correlation_summary","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # correlate with exposures mae <- mae |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) #> Log2-Transforming each assay in MultiAssayExperiment.  # create the correlation summary plot cor_summary_plot <- mae |>     plot_correlation_summary(         feature_type = \"omics\",         mode = \"summary\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Correlation Tilemap — plot_correlation_tile","title":"Plot Correlation Tilemap — plot_correlation_tile","text":"Visualizes correlation matrix heatmap tile plot using correlation results stored metadata MultiAssayExperiment object. feature_type = \"pcs\", function forces PCs appear x-axis exposures y-axis, adds barplot showing many PCs significantly associated exposure. also suppresses nonsignificant tiles based specified p-value threshold.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Correlation Tilemap — plot_correlation_tile","text":"","code":"plot_correlation_tile(   expomicset,   feature_type = c(\"pcs\", \"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\"),   pval_cutoff = 0.05,   na_color = \"grey100\",   fill_limits = c(-1, 1),   midpoint = 0 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Correlation Tilemap — plot_correlation_tile","text":"expomicset MultiAssayExperiment object containing correlation results metadata. feature_type Type correlation results plot. One \"pcs\", \"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\". Must match key used metadata(expomicset)$correlation[[feature_type]]. pval_cutoff Numeric p-value cutoff correlations displayed. Nonsignificant tiles rendered na_color. Default 0.05. na_color Color used represent nonsignificant missing correlations. Default \"grey100\". fill_limits Numeric vector length 2 defining scale limits correlation values. Default c(-1, 1). midpoint Numeric value centering fill gradient. Default 0.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Correlation Tilemap — plot_correlation_tile","text":"ggplot2 tile plot (combined tile + barplot feature_type = \"pcs\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_correlation_tile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Correlation Tilemap — plot_correlation_tile","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run pca mae <- mae |>     run_pca() #> Identifying common samples. #> Subsetting exposure data. #> Subsetting omics data. #> Performing PCA on Feature Space. #> Performing PCA on Sample Space. #> No outliers detected.  # correlate with exposures mae <- mae |>     run_correlation(         feature_type = \"pcs\",         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     )  # make the correlation tile plot cor_tile_p <- mae |>     plot_correlation_tile(         feature_type = \"pcs\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"Generates dotplot enriched gene ontology (GO) terms across experiments categories, optionally annotated top genes contributing GO group.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"","code":"plot_dotplot_enrichment(   expomicset,   geneset,   top_n = 5,   n_per_group = 5,   add_top_genes = TRUE,   top_n_genes = 5,   go_groups = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"expomicset MultiAssayExperiment object containing functional enrichment results. geneset character string specifying gene set analyze. Options: \"deg\", \"deg_exp_cor\", \"factor_exp_cor\", \"factor\". top_n integer specifying number top GO groups select (based enrichment score). Default 5. n_per_group Number top GO terms show within GO group. Default 5. add_top_genes Logical; TRUE, appends top genes contributing GO group annotation facet labels. Default TRUE. top_n_genes Integer; number top genes extract display per GO group (used add_top_genes = TRUE). Default 5. go_groups Optional character vector GO group names include. NULL, top top_n groups selected automatically.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"ggplot object displaying dotplot enriched GO terms, faceted GO group category.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"function: Extracts enrichment results metadata(expomicset)$functional_enrichment[[geneset]]. Selects top GO groups based product -log10(p.adjust) * Count. Displays dotplot : x-axis: experimental categories. y-axis: GO term descriptions. dot size: number genes (Count). dot color: significance level (-log10(p.adjust)). Optionally appends top genes annotations facet strip labels.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_dotplot_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dotplot of Functional Enrichment Results — plot_dotplot_enrichment","text":"","code":"if (FALSE) { # \\dontrun{ plot_dotplot_enrichment(expom, geneset = \"GO_BP\") plot_dotplot_enrichment(expom, geneset = \"KEGG\", top_n = 10, add_top_genes = TRUE) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","title":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","text":"Visualize enrichment results stored MultiAssayExperiment object. Supports dotplots, heatmaps, cnetplots, networks, multi-panel summary plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","text":"","code":"plot_enrichment(   expomicset,   feature_type = c(\"degs\", \"degs_robust\", \"omics\", \"factor_features\", \"degs_cor\",     \"omics_cor\", \"factor_features_cor\"),   plot_type = c(\"dotplot\", \"cnet\", \"network\", \"heatmap\", \"summary\"),   top_n = 5,   n_per_group = 5,   add_top_genes = TRUE,   top_n_genes = 5,   heatmap_fill = TRUE,   logfc_thresh = log2(1),   pval_col = \"P.Value\",   pval_thresh = 0.05,   score_metric = \"stability_score\",   score_thresh = NULL,   overlap_thresh = 0.2,   node_radius = 0.2,   pie_colors = NULL,   label_top_n = NULL,   label_colour = \"black\",   net_facet_by = NULL,   max_terms = 30,   node_size = 1,   term_node_correction = 0.2,   gene_node_correction = 3,   go_groups = NULL,   layout_algo = \"fr\",   edge_alpha = 0.3,   label_size = 3,   feature_col = \"feature\",   logfc_col = \"logFC\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","text":"expomicset MultiAssayExperiment object enrichment results added via run_enrichment(). feature_type Character; one \"degs\", \"degs_robust\", \"omics\", \"factor_features\", \"degs_cor\", \"omics_cor\", \"factor_features_cor\". Defines enrichment results use. plot_type Type plot generate. One \"dotplot\", \"cnet\", \"network\", \"heatmap\", \"summary\". top_n Integer; number top go_groups include (used \"dotplot\"). Default 5. n_per_group Integer; number terms per group plot (used \"dotplot\"). Default 5. add_top_genes Logical; TRUE, appends top shared genes dotplot facets. Default TRUE. top_n_genes Integer; number top genes show group (used \"dotplot\"). Default 5. heatmap_fill Logical; whether fill tiles logFC heatmap. Default TRUE. logfc_thresh Numeric; log2 fold change threshold filtering (heatmap ). Default log2(1). pval_col Column name p-value used filtering \"degs\" heatmap. Default \"P.Value\". pval_thresh Threshold pval_col (heatmap ). Default 0.05. score_metric Column stability score (used \"degs_robust\" heatmap). Default \"stability_score\". score_thresh Numeric; threshold score_metric (heatmap ). Default NULL. overlap_thresh Numeric; Jaccard threshold edges network plot. Default 0.2. node_radius Numeric; node size network plot. Default 0.2. pie_colors Optional named vector colors pie charts (network cnet). label_top_n Integer; number top nodes label network. Default NULL. label_colour Color node labels network. Default \"black\". net_facet_by Column used facet network plot (e.g., \"category\"). Default NULL. max_terms Integer; max number terms include cnet plot. Default 30. node_size Numeric; base node size cnet plot. Default 1. term_node_correction Scaling factor term nodes cnet plot. Default 0.2. gene_node_correction Scaling factor gene nodes cnet plot. Default 3. go_groups Optional character vector GO group names subset enrichment results (plots). layout_algo Graph layout algorithm use \"network\" \"cnet\" plots. Default \"fr\". edge_alpha Transparency network/cnet plot edges. Default 0.3. label_size Font size labels network cnet plots. Default 3. feature_col Column name used join gene-level metadata. Default \"feature\". logfc_col Column name used log2 fold change values. Default \"logFC\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","text":"ggplot patchwork object corresponding requested plot type.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","text":"function visualizes results run_enrichment() using one several plot types: \"dotplot\": Enrichment terms grouped GO group, colored significance. \"heatmap\": Term - gene matrix optional logFC fill shared gene highlighting. \"network\": Graph term overlap based shared genes, faceted metadata desired. \"cnet\": Gene - term bipartite graph gene logFC values term pie slices. \"summary\": Multi-panel figure GO group ridgeplots, gene counts, Venn diagram.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Enrichment Results from ExpOmicSet — plot_enrichment","text":"","code":"# create example data mae <- make_example_data(     n_samples = 30,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform differential abundance analysis mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_voom\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> No group or design set. Assuming all samples belong to one group. #> ===================================== #> tidybulk says: All testing methods use raw counts, irrespective of if scale_abundance #> or adjust_abundance have been calculated. Therefore, it is essential to add covariates #> such as batch effects (if applicable) in the formula. #> ===================================== #> This message is displayed once per session. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Processing assay: proteomics #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Differential abundance testing completed.  # perform enrichment analysis mae <- run_enrichment(     expomicset = mae,     feature_type = \"degs\",     feature_col = \"symbol\",     species = \"goa_human\",     deg_logfc_threshold = log2(1),     deg_pval_col = \"P.Value\",     deg_pval_threshold = 0.2,     action = \"add\" )  # create an enrichment plot enr_plot <- plot_enrichment(     expomicset = mae,     feature_type = \"degs\",     plot_type = \"network\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Exposure Distributions by Category or Group — plot_exposures","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"Visualizes exposure variable distributions using boxplots ridge plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"","code":"plot_exposures(   expomicset,   exposure_cat = \"all\",   exposure_cols = NULL,   group_by = NULL,   plot_type = \"boxplot\",   alpha = 0.3,   panel_sizes = rep(1, 100),   title = \"Exposure Levels by Category\",   xlab = \"\",   ylab = \"\",   facet_cols = NULL,   group_cols = NULL,   box_width = 0.1,   fill_lab = \"\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"expomicset MultiAssayExperiment object containing exposure data. exposure_cat character string vector specifying exposure category names (codebook$category) include. Use \"\" include exposures. exposure_cols Optional character vector specifying exact exposure variables plot. group_by string specifying column colData(expomicset) used fill plot (e.g., \"sex\"). Defaults NULL, case exposures colored category. plot_type Type plot: \"boxplot\" (default) \"ridge\". alpha Transparency level background facet color strips. Default 0.5. panel_sizes numeric vector passed ggh4x::force_panelsizes() controlling facet widths heights. title Plot title. Default \"Exposure Levels Category\". xlab X-axis label. Default empty string. ylab Y-axis label. Default empty string. facet_cols Optional vector colors use background facet categories. NULL, default palette used. group_cols Optional named vector colors group_by levels. NULL, default palette used. box_width numeric value specifying width boxplots. used plot_type = \"boxplot\". Default 0.1. fill_lab Legend title fill aesthetic (e.g., \"Sex\" \"Exposure Group\"). Default \"\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"ggplot2 object showing exposure distributions, optionally grouped.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"function: Filters exposure data based category selected columns. Merges variable metadata metadata(expomicset)$codebook. Supports either boxplot (vertical distributions per variable) ridgeplot (horizontal density plots per variable). group_by specified, variable defines plot fill color; otherwise, fill based exposure category. Facets category using ggh4x::facet_grid2() color-coded strip backgrounds. box_width argument controls width boxplots plot_type = \"boxplot\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Exposure Distributions by Category or Group — plot_exposures","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # plot exposure data exposure_plot <- mae |>     plot_exposures(         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\"),         box_width = 0.2     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","title":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","text":"Visualizes impact exposures network centrality measures associated features (e.g., genes latent factors) heatmap. exposure scored four centrality metrics, scaled within metric, grouped exposure category.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","text":"","code":"plot_exposure_impact(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\"),   min_per_group = 5,   facet_cols = NULL,   bar_cols = NULL,   alpha = 0.3,   ncol = 2,   nrow = 1,   heights = c(1, 1),   widths = c(2, 1) )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","text":"expomicset MultiAssayExperiment object results run_exposure_impact(). feature_type Character string specifying feature type. One \"degs\", \"omics\", \"factors\". min_per_group Minimum number features per exposure inclusion (currently used). Default 5. facet_cols Optional named vector colors exposure categories. bar_cols Optional vector colors bar plots (enabled). alpha Transparency level category strips (enabled). Default 0.3. ncol, nrow Layout optional patchwork combination (currently unused). Default: ncol = 2, nrow = 1. heights Relative heights widths combined plots (currently unused). Default: c(1,1). widths Relative widths combined plots (currently unused). Default: c(2,1).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","text":"ggplot/patchwork object showing heatmap scaled network centrality scores per exposure, annotated category.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","text":"function uses output run_exposure_impact() calculate visualize mean centrality values exposure across associated features. following network centrality metrics shown: Degree centrality Eigenvector centrality Closeness centrality Betweenness centrality values scaled within metric across exposures. side bar indicates category exposure.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_exposure_impact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Exposure Impact on Network Centrality Metrics — plot_exposure_impact","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform correlation analyses # correlate with exposures mae <- mae |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         feature_cors = TRUE,         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) #> Log2-Transforming each assay in MultiAssayExperiment. #> Log2-Transforming each assay in MultiAssayExperiment.  # create the networks mae <- mae |>     run_create_network(         feature_type = \"omics_feature_cor\",         action = \"add\"     ) |>     run_create_network(         feature_type = \"omics\",         action = \"add\"     ) #> Creating network from correlation results. #> Network added to metadata as: network_omics_feature_cor #> Creating network from correlation results. #> Network added to metadata as: network_omics  # perform impact analysis mae <- mae |>     run_exposure_impact(         feature_type = \"omics\"     )  # create the exposure impact plot exposure_impact_p <- mae |>     plot_exposure_impact(         feature_type = \"omics\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"Visualizes overlap top features across multi-omics integration factors using barplots Venn diagram.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"","code":"plot_factor_overlap(   expomicset,   venn_text_size = 3,   venn_stroke_size = 0.1,   venn_set_name_size = 3.5,   venn_show_percent = FALSE,   venn_colors = NULL,   shared_bar_colors = NULL,   da_bar_colors = NULL,   da_bar_facet_cols = NULL,   da_bar_facet_alpha = 0.5,   left_heights = c(2, 1),   col_widths = c(1, 1) )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"expomicset MultiAssayExperiment object top_factor_features common_top_factor_features metadata. venn_text_size Text size Venn diagram labels. Default 3. venn_stroke_size Outline stroke width Venn diagram. Default 0.1. venn_set_name_size Text size set names Venn diagram. Default 3.5. venn_show_percent Logical, whether show percentages Venn diagram. Default FALSE. venn_colors Optional named vector colors factor Venn diagram. shared_bar_colors Optional named vector colors shared/unique barplot fill. da_bar_colors Optional named vector colors DEG (differentially abundant) barplots. da_bar_facet_cols Optional vector colors facet strip backgrounds DEG-related barplots. da_bar_facet_alpha Numeric 0–1 facet background transparency. Default 0.5. left_heights numeric vector relative heights Venn + shared DEG barplot panel. Default c(2, 1). col_widths numeric vector relative widths left (Venn/shared) vs right (DEG barplot) columns. Default c(1, 1).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"patchwork object showing combined plots: barplots Venn diagram.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"function: Displays overlap top features across integration factors using Venn diagram (ggvenn). Visualizes barplots : Shared vs unique top features across experiments. Differentially abundant top features (per factor). DEGs among shared features (overall). Adds optional customization layout spacing, colors, transparency.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Overlap of Top Factor Features Across Experiments — plot_factor_overlap","text":"","code":"if (FALSE) { # \\dontrun{ plot_factor_overlap(expomicset, venn_show_percent = TRUE) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"Generates summary plot factor contributions multi-omics integration results stored MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"","code":"plot_factor_summary(   expomicset,   low = \"#006666\",   mid = \"white\",   high = \"#8E0152\",   midpoint = 0.5 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"expomicset MultiAssayExperiment object containing integration results metadata(expomicset)$multiomics_integration$integration_results. low Color low values fill gradient. Default \"#006666\". mid Color midpoint fill gradient. Default \"white\". high Color high values fill gradient. Default \"#8E0152\". midpoint Midpoint value gradient color scale. Default 0.5.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"ggplot object showing factor contributions based integration method.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"function visualizes factor contributions based integration method: MOFA: Variance explained per factor view. MCIA: Block score weights per omic. DIABLO: Mean absolute sample score per omic factor (block-specific variates). RGCCA: Mean absolute sample score per omic factor (aligned block scores). color gradient can customized using low, mid, high, midpoint parameters.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_factor_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Summary of Factor Contributions from Multi-Omics Integration — plot_factor_summary","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  mae <- run_multiomics_integration(     mae,     method = \"MCIA\",     n_factors = 3 ) #> Scaling each assay in MultiAssayExperiment. #> Running multi-omics integration using MCIA... #> Applying MCIA with `nipalsMCIA` #> Performing column-level pre-processing... #> Column pre-processing completed. #> Performing block-level preprocessing... #> Block pre-processing completed. #> Computing order 1 scores #> Computing order 2 scores #> Computing order 3 scores  factor_sum_plot <- mae |>     plot_factor_summary()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"Visualizes exposures significantly associated features specified Gene Ontology (GO) groups.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"","code":"plot_go_group_exposures(   expomicset,   go_groups,   geneset = \"deg_exp_cor\",   feature_col = \"feature\",   top_n = 15 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"expomicset MultiAssayExperiment object containing functional enrichment exposure-feature correlation results. go_groups character vector specifying GO groups interest. Use \"\" include GO groups. geneset character string indicating gene set use. Options \"deg_exp_cor\" DEGs \"factor_exp_cor\" factors. Default \"deg_exp_cor\". feature_col character string specifying feature column match correlated features. Default \"feature\". top_n integer specifying number top exposures display per experimental assay. Default 15.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"ggplot object displaying top exposures associated features GO groups.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"function identifies exposures significantly correlated features within specified GO groups. extracts functional enrichment results metadata(expomicset)$functional_enrichment cross-references exposure-feature correlation results: \"deg_exp_cor\": Uses metadata(expomicset)$omics_exposure_deg_correlation \"factor_exp_cor\": Uses metadata(expomicset)$omics_exposure_factor_correlation resulting plot: Displays exposures grouped experimental assay (exp_name). Uses bar heights indicate number associated features. Colors bars based exposure categories.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_go_group_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Exposures Associated with Features in GO Groups — plot_go_group_exposures","text":"","code":"if (FALSE) { # \\dontrun{ plot_go_group_exposures(expom, go_groups = c(\"GO:0006355\", \"GO:0045893\")) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"Generates upper-triangle heatmap correlations exposure variables, side annotation bars indicating variable categories.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"","code":"plot_heatmap_correlate_exposure(   expomicset,   exposure_cols = NULL,   corr_threshold = NULL,   annotation_colors = NULL,   low = \"#006666\",   mid = \"white\",   high = \"#8E0152\",   midpoint = 0 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"expomicset MultiAssayExperiment object containing exposure data correlation results. exposure_cols character vector exposure variable names include plot. NULL, includes . corr_threshold numeric value filtering correlations absolute value (e.g., 0.2). annotation_colors Optional named character vector colors exposure categories. low Color strong negative correlations. Default \"#006666\". mid Color zero correlation. Default \"white\". high Color strong positive correlations. Default \"#8E0152\". midpoint Midpoint color scale. Default 0.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"ggplot2 object assembled using patchwork, showing correlation heatmap annotation bars.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"function: Uses precomputed correlations metadata(expomicset)$exposure_correlation$correlation_table. Filters upper triangle matrix (.e., combinations var1 <= var2). Applies optional thresholding corr_threshold simplify visualization. Adds top left annotation bars colored category_1 category_2, respectively. Harmonizes category colors across axes using single legend. annotation_colors supplied, default palette used. resulting plot includes heatmap, sidebars, unified legend variable categories.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_heatmap_correlate_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Heatmap of Exposure Variables with Category Annotations — plot_heatmap_correlate_exposure","text":"","code":"if (FALSE) { # \\dontrun{ plot_heatmap_correlate_exposure(expom) plot_heatmap_correlate_exposure(expom, exposure_cols = c(\"pm25\", \"no2\", \"age\")) plot_heatmap_correlate_exposure(expom, corr_threshold = 0.2) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"function generates multi-faceted Manhattan plot results associate_all_outcome(), visualizing significance associations across omics features, grouped category. Significant features can highlighted labeled, strip backgrounds can colored per facet.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"","code":"plot_manhattan(   expomicset,   pval_thresh = 0.05,   feature_col = \"term\",   alpha = 0.5,   min_per_cat = 1,   vars_to_label = NULL,   sig_color = \"magenta2\",   non_sig_cols = c(\"grey25\", \"grey75\"),   pval_thresh_line_col = \"grey25\",   panel_sizes = c(1, 1, 1, 1, 1),   linetype = \"dashed\",   facet_cols = NULL,   label_size = 3.5,   facet_angle = 90,   facet_text_face = \"bold.italic\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"expomicset MultiAssayExperiment object already processed associate_all_outcome(). pval_thresh Numeric threshold significance (default = 0.05). feature_col character string indicating column name use feature labeling highlighting (e.g., \"term\" \"feature\"). Default \"term\". alpha Transparency applied facet strip colors (default = 0.5). min_per_cat Minimum number features per category shown (default = 1). vars_to_label Optional character vector variable names label explicitly, matched feature_col column. sig_color Color used significant points (default = \"magenta2\"). non_sig_cols Character vector alternating colors non-significant points (default = c(\"grey25\", \"grey75\")). pval_thresh_line_col Color horizontal significance threshold line (default = \"grey25\"). panel_sizes Numeric vector passed ggh4x::force_panelsizes() control panel widths (default = c(1,1,1,1,1)). linetype Line type horizontal threshold (default = \"dashed\"). facet_cols Optional vector colors use facet strip backgrounds. label_size Numeric size feature label text (default = 3.5). facet_angle Angle (degrees) strip text rotation (default = 90). facet_text_face Font face facet strip labels (default = \"bold.italic\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"ggplot object showing Manhattan-style faceted plot.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"function expects associate_all_outcome() run first. Facets represent omics categories, points represent features. Points significance threshold colored using non_sig_cols, significant ones colored sig_color optionally labeled. Uses ggrepel avoid overlapping labels ggh4x enhanced faceting. feature_col argument allows customization column used label identify features, enabling compatibility different result formats.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_manhattan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Manhattan-style ExWAS summary across omics categories — plot_manhattan","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run association tests mae <- mae |>     run_association(         source = \"omics\",         top_n = 20,         feature_set = c(\"exposure_pm25\", \"exposure_no2\"),         outcome = \"smoker\",         covariates = c(\"age\"),         family = \"binomial\"     ) #> Log2-Transforming each assay in MultiAssayExperiment. #> Scaling each assay in MultiAssayExperiment. #> Running GLMs. #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred  # create the manhattan plot manhattan_p <- mae |>     plot_manhattan(feature_col = \"term\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","title":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","text":"Visualizes missing data patterns MultiAssayExperiment object using summary bar plots feature-level lollipop plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","text":"","code":"plot_missing(   expomicset,   threshold = 5,   plot_type = c(\"summary\", \"lollipop\"),   layers = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","text":"expomicset MultiAssayExperiment object containing exposure omics assays. Missing data inferred directly assays. threshold Numeric. percentage threshold (0–100) features counted missing summary plot. Default 5. plot_type Character. Type plot generate. Either \"summary\" bar plot showing number features missing threshold, \"lollipop\" per-feature lollipop plot layer annotations. Default \"summary\". layers Optional character vector. specified, filters plot include selected layers (e.g., \"Exposure\", \"Transcriptome\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","text":"ggplot patchwork object depending selected plot_type.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","text":"function calculates missing data per feature (variable) across assays (including exposure variables) generates: Summary plot (plot_type = \"summary): bar plot showing number variables assay exceeding specified missingness threshold. Lollipop plot (plot_type = \"lollipop): feature-level plot feature's percent missingness shown, along color-coded tile side indicating layer origin. tile colors lollipop plot match experiment colors used visualizations (e.g., via scale_color_tidy_exp()).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Missing Data Across Exposure and Omic Layers — plot_missing","text":"","code":"#' # Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Introduce some missingness MultiAssayExperiment::colData(mae)$exposure_pm25[sample(1:20, 5)] <- NA  # Summary bar plot of missing data summary_p <- plot_missing(     mae,     threshold = 10,     plot_type = \"summary\" )  # Lollipop plot for all features with any missingness lollipop_p <- plot_missing(     mae,     plot_type = \"lollipop\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Missing Data Across Assays — plot_missing_summary","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"Visualizes number features exceeding missing data threshold assay MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"","code":"plot_missing_summary(expomicset, threshold = 20)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"expomicset MultiAssayExperiment object missing data summary stored metadata(expomicset)$na_qc. threshold numeric value specifying missing data percentage threshold features counted. Default 20.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"ggplot object showing missing data statistics across assays.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"function extracts missing data summaries metadata(expomicset)$na_qc, generated filter_missing(), counts number features assay exceeding specified missingness threshold. results : Displayed bar plot, bars represent different assays. Labeled number features exceeding threshold. Colored assay name easy distinction.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_missing_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Summary of Missing Data Across Assays — plot_missing_summary","text":"","code":"if (FALSE) { # \\dontrun{ plot_missing_summary(expom, threshold = 10) } # }"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Network Graph of Features or Exposures — plot_network","title":"Plot Network Graph of Features or Exposures — plot_network","text":"Visualizes network structures created run_create_network() metadata MultiAssayExperiment object. Nodes can represent features (e.g., genes factors) exposures, edges represent correlations shared connections.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Network Graph of Features or Exposures — plot_network","text":"","code":"plot_network(   expomicset,   network = c(\"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\",     \"degs_feature_cor\", \"omics_feature_cor\", \"factor_features_feature_cor\"),   include_stats = TRUE,   nodes_to_include = NULL,   centrality_thresh = NULL,   top_n_nodes = NULL,   cor_thresh = NULL,   label = FALSE,   label_top_n = 5,   nodes_to_label = NULL,   facet_var = NULL,   foreground = \"steelblue\",   fg_text_colour = \"grey25\",   node_colors = NULL,   node_color_var = NULL,   alpha = 0.5,   size_lab = \"Centrality\",   color_lab = \"Group\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Network Graph of Features or Exposures — plot_network","text":"expomicset MultiAssayExperiment object containing network results metadata. network Character string specifying network type. One \"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\", \"degs_feature_cor\", \"omics_feature_cor\", \"factor_features_feature_cor\". include_stats Logical; TRUE, include edge weights node centrality metrics plot aesthetics. Default TRUE. nodes_to_include Optional character vector node names include (subset name). centrality_thresh Optional numeric threshold filter nodes centrality degree. top_n_nodes Optional integer keep top N nodes centrality. cor_thresh Optional numeric threshold filter edges minimum absolute correlation. label Logical; whether label nodes. TRUE, top nodes labeled. label_top_n Integer; number top-centrality nodes label label = TRUE. Default 5. nodes_to_label Optional character vector specific nodes label. facet_var Optional node metadata column facet network layout . foreground Color node outlines edge borders. Default \"steelblue\". fg_text_colour Color node label text. Default \"grey25\". node_colors Optional named vector colors node groups. node_color_var Optional node attribute used node color mapping. alpha Alpha transparency nodes edges. Default 0.5. size_lab Legend title node size (typically centrality). Default \"Centrality\". color_lab Legend title node color group. Default \"Group\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Network Graph of Features or Exposures — plot_network","text":"ggraph plot object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Network Graph of Features or Exposures — plot_network","text":"function retrieves stored graph object optionally filters labels nodes based : centrality, correlation, user input, group-specific attributes. supports layout faceting, custom color mappings, highlights highly central nodes. Large graphs (> 500 nodes) prompt user plotting.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Network Graph of Features or Exposures — plot_network","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform correlation analyses # correlate with exposures mae <- mae |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) #> Log2-Transforming each assay in MultiAssayExperiment.  # create the networks mae <- mae |>     run_create_network(         feature_type = \"omics\",         action = \"add\"     ) #> Creating network from correlation results. #> Network added to metadata as: network_omics  # plot the network network_p <- mae |>     plot_network(         network = \"omics\"     ) #> Extracting graph."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Normality Summary of Exposure Variables — plot_normality_summary","title":"Plot Normality Summary of Exposure Variables — plot_normality_summary","text":"Generates bar plot summarizing number exposure variables pass fail normality tests (e.g., Shapiro-Wilk) transformation.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Normality Summary of Exposure Variables — plot_normality_summary","text":"","code":"plot_normality_summary(expomicset, transformed = FALSE)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Normality Summary of Exposure Variables — plot_normality_summary","text":"expomicset MultiAssayExperiment object quality control metadata. transformed Logical; TRUE, use results transformation. Default FALSE.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Normality Summary of Exposure Variables — plot_normality_summary","text":"ggplot object summarizing number exposures classified normal normal.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Normality Summary of Exposure Variables — plot_normality_summary","text":"function assumes run_normality_check() executed results stored metadata(expomicset)$quality_control$normality. transformed = TRUE, function instead plot transformation summary stored metadata(expomicset)$quality_control$transformation$norm_summary, populated transform_exposure(). plot includes bar heights overlaid line segments reinforce counts.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_normality_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Normality Summary of Exposure Variables — plot_normality_summary","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Test for normality mae <- mae |>     run_normality_check() |>     transform_exposure(exposure_cols = c(\"age\", \"bmi\", \"exposure_pm25\")) #> Checking Normality Using Shapiro-Wilk Test #> 4 Exposure Variables are Normally Distributed #> 0 Exposure Variables are NOT Normally Distributed #> Applying the boxcox_best transformation.  # plot the normality summary norm_p <- mae |>     plot_normality_summary()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA Results for Features and Samples — plot_pca","title":"Plot PCA Results for Features and Samples — plot_pca","text":"Generates PCA plots feature space sample space, including scatter plots scree plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA Results for Features and Samples — plot_pca","text":"","code":"plot_pca(   expomicset,   feature_col = \"#00a9b2\",   sample_col = \"#8a4f77\",   sample_outlier_col = \"firebrick\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA Results for Features and Samples — plot_pca","text":"expomicset MultiAssayExperiment object containing PCA results metadata(expomicset)$pca. feature_col character string specifying color feature scree plot. Default \"#00a9b2\". sample_col character string specifying color sample scree plot. Default \"#8a4f77\". sample_outlier_col character string specifying color sample outlier labels. Default \"firebrick\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA Results for Features and Samples — plot_pca","text":"combined ggplot object containing four PCA plots.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot PCA Results for Features and Samples — plot_pca","text":"function creates four PCA visualizations: Feature Space PCA Plot: Colored category (e.g., omics, exposure). Feature Scree Plot: Displays variance explained principal component. Sample Space PCA Plot: Highlights outlier samples. Sample Scree Plot: Displays variance explained sample PCA. Outliers labeled based metadata(expomicset)$pca$outliers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA Results for Features and Samples — plot_pca","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run pca mae <- mae |>     run_pca() #> Identifying common samples. #> Subsetting exposure data. #> Subsetting omics data. #> Performing PCA on Feature Space. #> Performing PCA on Sample Space. #> No outliers detected.  # create the pca plot pca_p <- mae |>     plot_pca()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sample Clusters — plot_sample_clusters","title":"Plot Sample Clusters — plot_sample_clusters","text":"Generates heatmap sample clustering results summarizes sample group assignments.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sample Clusters — plot_sample_clusters","text":"","code":"plot_sample_clusters(expomicset, exposure_cols = NULL)"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sample Clusters — plot_sample_clusters","text":"expomicset MultiAssayExperiment object containing sample clustering results metadata(expomicset)$sample_clustering. exposure_cols character vector specifying columns colData include summary. Default NULL, includes available columns.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sample Clusters — plot_sample_clusters","text":"ComplexHeatmap plot displaying sample clustering results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Sample Clusters — plot_sample_clusters","text":"function: Extracts sample cluster assignments metadata(expomicset)$sample_clustering. Merges cluster labels colData(expomicset). Plots heatmap stored metadata(expomicset)$sample_clustering$heatmap.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sample_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sample Clusters — plot_sample_clusters","text":"","code":"# create example data mae <- make_example_data(     n_samples = 30,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # determine sample clusters mae <- run_cluster_samples(     expomicset = mae,     exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\"),     clustering_approach = \"diana\" ) #> Starting clustering analysis... #> Optimal number of clusters for samples: 12  # plot sample clusters sample_cluster_p <- mae |>     plot_sample_clusters(         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"Generates ridge plot bar chart summarizing feature stability scores across assays.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"","code":"plot_sensitivity_summary(   expomicset,   stability_score_thresh = NULL,   stability_metric = \"stability_score\",   title = \"Distribution of Stability Scores\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"expomicset MultiAssayExperiment object containing sensitivity analysis results metadata(expomicset)$sensitivity_analysis. stability_score_thresh numeric threshold stability scores. Default NULL, uses threshold stored metadata(expomicset)$sensitivity_analysis$score_thresh. stability_metric character string specifying stability metric plot (e.g., \"stability_score\", \"logp_weighted_score\"). Default \"stability_score\". title character string specifying title ridge plot. Default \"Distribution Stability Scores\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"patchwork object combining ridge plot bar chart.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"function: Extracts feature stability scores metadata(expomicset)$sensitivity_analysis$feature_stability. Displays ridge plot stability score distributions per assay. Displays bar chart number features per assay. Prints number features stability scores threshold.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_sensitivity_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sensitivity Analysis Summary — plot_sensitivity_summary","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.   # Run differential abundance mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_voom\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Processing assay: proteomics #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Differential abundance testing completed.  # Run the sensitivity analysis mae <- run_sensitivity_analysis(     expomicset = mae,     base_formula = ~ smoker + sex,     methods = c(\"limma_voom\"),     scaling_methods = c(\"none\"),     covariates_to_remove = \"sex\",     pval_col = \"P.Value\",     logfc_col = \"logFC\",     pval_threshold = 0.05,     logFC_threshold = 0,     bootstrap_n = 3,     action = \"add\" ) #> Running bootstrap iteration 1 of 3 #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Running bootstrap iteration 2 of 3 #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Running bootstrap iteration 3 of 3 #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Computing feature stability across sensitivity conditions. #> Feature stability analysis completed. #> Number Of Features Above Threshold Of 0.46: #> ---------------------------------------- #> mRNA: 2/128 #> proteomics: 1/80  # create the sensitivity summary plot sens_sum_p <- mae |>     plot_sensitivity_summary() #> Number of Features with stability_score > 0.463486276597003: #> mRNA: 0 / 128 #> proteomics: 0 / 80"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"Visualizes top loading features factor multi-omics integration results (e.g., MOFA, MCIA, DIABLO, RGCCA).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"","code":"plot_top_factor_features(   expomicset,   feature_col = \"feature\",   factors = NULL,   top_n = 5,   facet_cols = NULL,   exp_name_cols = NULL,   alpha = 0.5 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"expomicset MultiAssayExperiment object containing integration results metadata slot (must include integration_results). feature_col character string indicating column name use y-axis feature labels (e.g., \"feature\", \"gene_symbol\"). match column output pivot_feature(). Default \"feature\". factors Character vector factors include (e.g., \"Factor1\", \"Factor2\"). NULL, factors plotted. top_n Integer specifying number top features show per factor. Default 5. facet_cols Optional color palette facet strip backgrounds (one per exp_name), used distinguish factors. exp_name_cols Optional color palette experiment labels plot (exp_name), passed scale_color_manual(). alpha Numeric value 0 1 controlling transparency facet strip background fill. Default 0.5.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"ggplot2 object one facet per factor, showing top features loadings experiment.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"function supports following integration methods: \"MOFA\": Uses feature weights MOFA2 (get_weights()). \"MCIA\": Uses block loadings MCIA (@block_loadings). \"DIABLO\": Extracts block-specific loadings loadings. \"RGCCA\": Extracts block-specific loadings . factor, : Selects top top_n features absolute loading. Merges feature metadata using pivot_feature(). Creates point-range plot showing loading magnitude. Facets factor customizable strip background. feature_col argument allows control feature-level metadata column (e.g., gene symbols, metabolite names) used labeling y-axis. palettes provided, defaults chosen using ggpubr::get_palette().","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_top_factor_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Top Features by Factor from Integration Results — plot_top_factor_features","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  mae <- run_multiomics_integration(     mae,     method = \"MCIA\",     n_factors = 3 ) #> Scaling each assay in MultiAssayExperiment. #> Running multi-omics integration using MCIA... #> Applying MCIA with `nipalsMCIA` #> Performing column-level pre-processing... #> Column pre-processing completed. #> Performing block-level preprocessing... #> Block pre-processing completed. #> Computing order 1 scores #> Computing order 2 scores #> Computing order 3 scores  # plot top features using default `feature` column top_feature_p <- mae |>     plot_top_factor_features()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plot of Differential Abundance — plot_volcano","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"Generates volcano plot visualize differential abundance results across one omics layers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"","code":"plot_volcano(   expomicset,   pval_col = \"adj.P.Val\",   pval_thresh = 0.05,   logFC_col = \"logFC\",   logFC_thresh = log2(1.5),   plot_n_sig = TRUE,   top_n_label = NULL,   features_to_label = NULL,   feature_col = \"feature\",   xlab = expression(Log[2] * \"FC\"),   ylab = expression(-Log[10] * \"P\"),   title = \"Volcano Plot of Differential Abundance\",   nrow = 2 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"expomicset MultiAssayExperiment object containing differential abundance results metadata(expomicset)$differential_abundance. pval_col character string specifying column containing p-values. Default \"adj.P.Val\". pval_thresh numeric threshold significance. Features p-values considered significant. Default 0.05. logFC_col character string specifying column log fold changes. Default \"logFC\". logFC_thresh numeric threshold absolute log fold change significance. Default log2(1.5). plot_n_sig Logical; TRUE, appends number significant features facet titles. Default TRUE. top_n_label Optional integer. provided, top n significant features per assay labeled plot. features_to_label Optional character vector. Specific features label regardless significance. feature_col character string naming feature ID column use labeling. Default \"feature\". xlab Label x-axis. Default expression(Log[2]*\"FC\"). ylab Label y-axis. Default expression(-Log[10]*\"P\"). title Plot title. Default \"Volcano Plot Differential Abundance\". nrow Number rows facet_wrap() layout. Default 2.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"ggplot2 object representing volcano plot.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"function: Extracts differential abundance results metadata(expomicset)$differential_abundance. Assigns feature direction change: Upregulated, Downregulated, -Significant. Uses logFC_thresh pval_thresh define thresholds. Adds dashed lines indicate cutoffs fold change significance. Uses facet_wrap() display assay (exp_name) separately. Optionally labels significant features user-defined ones.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/plot_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano Plot of Differential Abundance — plot_volcano","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform differential abundance analysis mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_voom\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Processing assay: proteomics #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Differential abundance testing completed.  # create the volcano plot volcano_p <- mae |>     plot_volcano()"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Association Analysis — run_association","title":"Run Association Analysis — run_association","text":"Perform GLM-based association testing specified outcome features exposures, omics, latent factors, GO PCs. Automatically adjusts covariates supports Gaussian binomial models.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Association Analysis — run_association","text":"","code":"run_association(   expomicset,   outcome,   source = c(\"omics\", \"exposures\", \"factors\"),   covariates = NULL,   feature_set = NULL,   log_trans = TRUE,   top_n = NULL,   family = \"gaussian\",   correction_method = \"fdr\",   action = \"add\",   min_genes = 10,   feature_col = NULL,   mirna_assays = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Association Analysis — run_association","text":"expomicset MultiAssayExperiment object containing data metadata. outcome outcome variable name (must colData). source Source features test. One \"omics\", \"exposures\", \"factors\". covariates Optional vector covariate names include model. feature_set Optional character vector exposure GO terms test. log_trans Optional boolean value dictating whether log2 transform omics features. top_n Optional integer: using omics source, select top n variable features. family GLM family; \"gaussian\" \"binomial\". correction_method Method p-value adjustment (default: \"fdr\"). action \"add\" (default), saves results metadata; else returns results list. min_genes Minimum number genes required compute GO PCs. feature_col using GO PCs, column rowData matching gene symbols IDs. mirna_assays Optional character vector assays exclude extracting GO terms.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Association Analysis — run_association","text":"action = \"add\", returns updated MultiAssayExperiment. Otherwise, returns list : results_df: tidy summary associations covariates: covariates used model_data: model matrix used GLMs","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Association Analysis — run_association","text":"","code":"#' # create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run association tests mae <- mae |>     run_association(         source = \"exposures\",         feature_set = c(\"exposure_pm25\", \"exposure_no2\"),         outcome = \"smoker\",         covariates = c(\"age\"),         family = \"binomial\"     ) #> Running GLMs. #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Samples Based on Exposure Data — run_cluster_samples","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"Performs hierarchical clustering samples using exposure data colData(expomicset).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"","code":"run_cluster_samples(   expomicset,   exposure_cols = NULL,   dist_method = NULL,   user_k = NULL,   cluster_method = \"ward.D\",   clustering_approach = \"diana\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"expomicset MultiAssayExperiment object containing omics exposure data. exposure_cols character vector column names colData(expomicset) use clustering. dist_method character string specifying distance metric (\"euclidean\", \"gower\", etc.). NULL, automatically determined. user_k integer specifying number clusters. NULL, optimal k determined. cluster_method character string specifying hierarchical clustering method. Default \"ward.D\". clustering_approach character string specifying method determining k (\"diana\", \"gap\", \"elbow\", \"dynamic\", \"density\"). Default \"diana\". action character string specifying \"add\" (store results metadata) \"get\" (return clustering results). Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"action=\"add\", returns updated expomicset. action=\"get\", returns list : sample_cluster hierarchical clustering object (hclust). sample_groups named vector sample cluster assignments.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"function: Extracts numeric exposure data colData(expomicset). Computes distance matrix (\"gower\" mixed data, \"euclidean\" numeric). Determines optimal number clusters (k) using specified method. Performs hierarchical clustering (hclust) assigns samples clusters. Generates heatmap scaled exposure values. Stores results metadata(expomicset)$sample_clustering action=\"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_cluster_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster Samples Based on Exposure Data — run_cluster_samples","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # determine sample clusters mae <- run_cluster_samples(     expomicset = mae,     exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\"),     clustering_approach = \"diana\" ) #> Starting clustering analysis... #> Optimal number of clusters for samples: 1"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Correlation Analysis — run_correlation","title":"Run Correlation Analysis — run_correlation","text":"Computes correlations exposures feature types including DEGs, omics, latent factors, top factor features, principal components (PCs). Optionally computes feature–feature correlations support network analysis.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Correlation Analysis — run_correlation","text":"","code":"run_correlation(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\", \"pcs\"),   exposure_cols = NULL,   variable_map = NULL,   n_pcs = NULL,   feature_cors = FALSE,   robust = FALSE,   score_col = \"stability_score\",   score_thresh = NULL,   correlation_method = \"spearman\",   correlation_cutoff = 0.3,   cor_pval_column = \"p.value\",   pval_cutoff = 0.05,   deg_pval_col = \"adj.P.Val\",   deg_logfc_col = \"logFC\",   deg_pval_thresh = 0.05,   deg_logfc_thresh = log2(1.5),   batch_size = 1500,   action = c(\"add\", \"get\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Correlation Analysis — run_correlation","text":"expomicset MultiAssayExperiment object. feature_type Type features correlate. One \"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\", \"pcs\". exposure_cols Optional vector exposure column names (colData) use. variable_map Optional mapping features include assay omics mode. n_pcs Number PCs use feature_type = \"pcs\". feature_cors Logical; TRUE, compute correlations features rather exposures. robust Logical; restrict DEGs passing sensitivity threshold. score_col Column name sensitivity analysis feature stability score. score_thresh Threshold filtering robust features. correlation_method One \"pearson\", \"spearman\", \"kendall\". correlation_cutoff Minimum absolute correlation retain. cor_pval_column Column output filter p-value (default: \"p.value\"). pval_cutoff Maximum p-value FDR threshold retain correlation. deg_pval_col Column DEG adjusted p-values. deg_logfc_col Column DEG log fold-changes. deg_pval_thresh P-value cutoff DEGs. deg_logfc_thresh Log fold-change cutoff DEGs. batch_size Number features process per batch (default: 1500). action Whether \"add\" results metadata \"get\" data frame.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Correlation Analysis — run_correlation","text":"action = \"add\", returns updated MultiAssayExperiment results added metadata. action = \"get\", returns tidy data.frame correlations.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Correlation Analysis — run_correlation","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run correlation analysis mae <- mae |>     run_correlation(         feature_type = \"exposures\",         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Correlation Network from Feature Data — run_create_network","title":"Create Correlation Network from Feature Data — run_create_network","text":"Constructs undirected feature–feature feature–exposure correlation network correlation results stored MultiAssayExperiment object. function supports multiple correlation formats depending feature_type, stores returns igraph object associated node edge metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Correlation Network from Feature Data — run_create_network","text":"","code":"run_create_network(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\",     \"degs_feature_cor\", \"omics_feature_cor\", \"factor_features_feature_cor\"),   action = c(\"add\", \"get\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Correlation Network from Feature Data — run_create_network","text":"expomicset MultiAssayExperiment object containing correlation results metadata. feature_type Type correlation result convert network. One : \"degs\", \"omics\", \"factors\", \"factor_features\", \"exposures\", \"degs_feature_cor\", \"omics_feature_cor\", \"factor_features_feature_cor\". action Whether \"add\" network object \"get\" list.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Correlation Network from Feature Data — run_create_network","text":"action = \"add\", returns updated MultiAssayExperiment new network entry metadata. action = \"get\", returns list graph (igraph object) summary (tibble).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Correlation Network from Feature Data — run_create_network","text":"function detects appropriate edge node structure based column names correlation results. Edge weights based correlation coefficients include FDR values.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_create_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Correlation Network from Feature Data — run_create_network","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform correlation analyses # correlate with exposures mae <- mae |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) |>     # correlate omics features with themselves     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         feature_cors = TRUE,         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) #> Log2-Transforming each assay in MultiAssayExperiment. #> Log2-Transforming each assay in MultiAssayExperiment.  # create the networks mae <- mae |>     run_create_network(         feature_type = \"omics_feature_cor\",         action = \"add\"     ) |>     run_create_network(         feature_type = \"omics\",         action = \"add\"     ) #> Creating network from correlation results. #> Network added to metadata as: network_omics_feature_cor #> Creating network from correlation results. #> Network added to metadata as: network_omics"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Differential Abundance Analysis — run_differential_abundance","title":"Run Differential Abundance Analysis — run_differential_abundance","text":"Performs differential abundance testing across assays MultiAssayExperiment object using specified statistical method. function updates assay corresponding colData, fits model using provided formula, combines results unified table.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Differential Abundance Analysis — run_differential_abundance","text":"","code":"run_differential_abundance(   expomicset,   formula,   abundance_col = \"counts\",   method = \"limma_trend\",   contrasts = NULL,   scaling_method = \"none\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Differential Abundance Analysis — run_differential_abundance","text":"expomicset MultiAssayExperiment containing assays test. formula model formula differential analysis (e.g., ~ group + batch). abundance_col Character. name assay matrix use abundance values. Default \"counts\". method Character. Differential analysis method use. Currently supports \"limma_trend\" (default). contrasts named list contrasts pairwise comparisons. Default NULL (uses default group comparisons). scaling_method Character. Scaling method apply modeling. Options include \"none\" (default), \"zscore\", etc. action Character. Whether \"add\" results expomicset metadata \"get\" results data frame. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Differential Abundance Analysis — run_differential_abundance","text":"Either updated MultiAssayExperiment (action = \"add\") tibble differential abundance results (action = \"get\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_differential_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Differential Abundance Analysis — run_differential_abundance","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform differential abundance analysis mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_trend\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> Processing assay: proteomics #> Differential abundance testing completed."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","title":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","text":"function performs enrichment analysis using selected features derived differential expression, correlation analysis, multi-omics factor features across experiments expomicset. supports multiple enrichment databases (e.g., GO, KEGG, Reactome), applies FDR correction, optionally clusters GO terms Jaccard overlap.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","text":"","code":"run_enrichment(   expomicset,   feature_type = c(\"degs\", \"degs_robust\", \"omics\", \"factor_features\", \"degs_cor\",     \"omics_cor\", \"factor_features_cor\"),   score_col = \"stability_score\",   score_threshold = NULL,   variable_map = NULL,   factor_type = c(\"common_top_factor_features\", \"top_factor_features\"),   feature_col = \"feature\",   deg_pval_col = \"adj.P.Val\",   deg_pval_threshold = 0.05,   deg_logfc_col = \"logFC\",   deg_logfc_threshold = log2(1.5),   db = c(\"GO\", \"KEGG\", \"Reactome\"),   species = NULL,   fenr_col = \"gene_symbol\",   padj_method = \"fdr\",   pval_thresh = 0.1,   min_set = 3,   max_set = 800,   clustering_approach = \"diana\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","text":"expomicset expomicset (MultiAssayExperiment object metadata) containing omics metadata. feature_type Character string indicating feature source. One \"degs\", \"degs_robust\", \"omics\", \"factor_features\", \"degs_cor\", \"omics_cor\", \"factor_features_cor\". score_col Column name used stability score filtering (degs_robust). score_threshold Optional numeric threshold filtering stability scores. NULL, default threshold stored metadata used. variable_map data frame exp_name feature columns, used feature_type = \"omics\". factor_type Character string selecting factor features: \"common_top_factor_features\" \"top_factor_features\". feature_col name feature column used extract gene identifiers. deg_pval_col Column name adjusted p-values DEG analysis. deg_pval_threshold Threshold select significant DEGs (default: 0.05). deg_logfc_col Column name log-fold changes DEG analysis. deg_logfc_threshold Threshold select DEGs absolute logFC (default: log2(1.5)). db Enrichment database use. One \"GO\", \"KEGG\", \"Reactome\". species Species name (required GO enrichment, e.g., \"Homo sapiens\"). Ignored databases. fenr_col Column name gene IDs used fenr (e.g., \"gene_symbol\"). padj_method Method p-value adjustment (default: \"fdr\"). pval_thresh Adjusted p-value threshold filtering enriched terms (default: 0.1). min_set Minimum number selected genes overlapping enriched term (default: 3). max_set Maximum number selected genes overlapping enriched term (default: 800). clustering_approach Clustering method GO term grouping. Defaults \"diana\". action Either \"add\" store results object's metadata \"get\" return results data frame.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","text":"action = \"add\", returns modified ExpOmicSet enrichment results added metadata. action = \"get\", returns data.frame enrichment results GO term clusters (applicable).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","text":"function identifies selected features based chosen feature_type, determines gene universe experiment, performs enrichment analysis using fenr package. Results adjusted multiple testing optionally clustered gene set overlap (GO terms). feature_type includes correlation-based results (ending _cor), enrichment performed exposure category separately.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform enrichment analysis on selected features from a expomicset object — run_enrichment","text":"","code":"# create example data mae <- make_example_data(     n_samples = 30,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform differential abundance analysis mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_voom\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Processing assay: proteomics #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Differential abundance testing completed.  # perform enrichment analysis mae <- run_enrichment(     expomicset = mae,     feature_type = \"degs\",     feature_col = \"symbol\",     species = \"goa_human\",     deg_logfc_threshold = log2(1),     deg_pval_col = \"P.Value\",     deg_pval_threshold = 0.2,     action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Composite Exposome Scores — run_exposome_score","title":"Compute Composite Exposome Scores — run_exposome_score","text":"Calculates summary exposome score per sample using one several methods including mean, sum, median, PCA (first principal component), IRT (Item Response Theory), quantile binning, row-wise variance. resulting score added colData MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Composite Exposome Scores — run_exposome_score","text":"","code":"run_exposome_score(   expomicset,   score_type,   exposure_cols = NULL,   scale = TRUE,   score_column_name = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Composite Exposome Scores — run_exposome_score","text":"expomicset MultiAssayExperiment object containing exposure data colData. score_type Character. method used compute score. Options : \"mean\", \"sum\", \"median\", \"pca\", \"irt\", \"quantile\", \"var\". exposure_cols Optional character vector. Specific exposure column names include. NULL, numeric columns used. scale Logical. Whether scale exposures computing score. Default TRUE. score_column_name Optional name resulting score column. NULL, automatic name used (e.g., \"exposome_score_pca\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Composite Exposome Scores — run_exposome_score","text":"MultiAssayExperiment object exposome score added colData().","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Composite Exposome Scores — run_exposome_score","text":"\"pca\" uses first principal component prcomp(). \"irt\" uses mirt package fit graded response model discretized exposures. \"quantile\" assigns decile bins (1–10) variable sums row-wise. \"var\" computes row-wise variance across exposures.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposome_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Composite Exposome Scores — run_exposome_score","text":"","code":"# create the example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # create the air pollution score mae <- run_exposome_score(     mae,     score_type = \"pca\",     exposure_cols = c(\"exposure_pm25\", \"exposure_no2\"),     scale = TRUE,     score_column_name = \"air_pollution_score\" ) #> Extracting exposure data... #> Calculating PCA exposure scores..."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"Generalized centrality-based exposure impact analysis using DEG, omics, factor features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"","code":"run_exposure_impact(   expomicset,   feature_type = c(\"degs\", \"omics\", \"factor_features\"),   pval_col = \"adj.P.Val\",   pval_thresh = 0.1,   action = c(\"add\", \"get\") )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"expomicset MultiAssayExperiment object correlation network metadata. feature_type One \"degs\", \"omics\", \"factor_features\". pval_col Column differential abundance results filter DEGs. Default = \"adj.P.Val\". pval_thresh DEG p-value threshold. Ignored unless feature_type == \"degs\". action Either \"add\" (store metadata) \"get\" (return list).","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"Either updated MultiAssayExperiment (action = \"add\") list.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_exposure_impact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Exposure Impact from Feature-Exposure Correlation Networks — run_exposure_impact","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform correlation analyses # correlate with exposures mae <- mae |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) |>     run_correlation(         feature_type = \"omics\",         variable_map = mae |>             pivot_feature() |>             dplyr::select(                 variable = .feature,                 exp_name = .exp_name             ),         feature_cors = TRUE,         exposure_cols = c(\"exposure_pm25\", \"exposure_no2\", \"age\", \"bmi\")     ) #> Log2-Transforming each assay in MultiAssayExperiment. #> Log2-Transforming each assay in MultiAssayExperiment.  # create the networks mae <- mae |>     run_create_network(         feature_type = \"omics_feature_cor\",         action = \"add\"     ) |>     run_create_network(         feature_type = \"omics\",         action = \"add\"     ) #> Creating network from correlation results. #> Network added to metadata as: network_omics_feature_cor #> Creating network from correlation results. #> Network added to metadata as: network_omics  # perform impact analysis mae <- mae |>     run_exposure_impact(         feature_type = \"omics\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"Identifies top features shared across factors based integration method. MOFA/MCIA, takes intersection across factors. DIABLO/RGCCA, takes features recurring ≥2 block-specific components.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"","code":"run_factor_overlap(   expomicset,   robust = TRUE,   stability_score = NULL,   score_col = \"stability_score\",   pval_thresh = 0.05,   logfc_thresh = log2(1.5),   pval_col = \"padj\",   logfc_col = \"logFC\",   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"expomicset MultiAssayExperiment integration results top factor features. robust Logical; TRUE, uses sensitivity score. Otherwise, uses DEG thresholds. stability_score Optional numeric threshold (overrides default metadata). score_col Column name sensitivity score. Default \"stability_score\". pval_thresh DEG p-value threshold (robust = FALSE). Default 0.05. logfc_thresh DEG logFC threshold (robust = FALSE). Default log2(1.5). pval_col Column name p-value. Default \"padj\". logfc_col Column name logFC. Default \"logFC\". action \"add\" return modified object, \"get\" return data.frame.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"Modified MultiAssayExperiment data.frame shared top features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_factor_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify and Annotate Shared Top Features Across Integration Factors — run_factor_overlap","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform multiomics integration mae <- run_multiomics_integration(     mae,     method = \"MCIA\",     n_factors = 3 ) #> Scaling each assay in MultiAssayExperiment. #> Running multi-omics integration using MCIA... #> Applying MCIA with `nipalsMCIA` #> Performing column-level pre-processing... #> Column pre-processing completed. #> Performing block-level preprocessing... #> Block pre-processing completed. #> Computing order 1 scores #> Computing order 2 scores #> Computing order 3 scores   # identify the features that contribute most to the factors mae <- extract_top_factor_features(     mae,     factors = c(\"V1\", \"V2\", \"V3\"),     method = \"percentile\",     percentile = 0.5,     action = \"add\" ) #> Extracting top contributing features for specified factors. #> Using MCIA block loadings. #> Applying percentile-based filtering (>50%). #> Selected 312 features contributing to specified factors.  # perform differential abundance analysis mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_voom\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Processing assay: proteomics #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Differential abundance testing completed.  # determine the overlap in features mae <- mae |>     run_factor_overlap(         robust = FALSE,         pval_col = \"adj.P.Val\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"Performs missing data imputation exposure variables (colData) omics datasets (experiments) within MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"","code":"run_impute_missing(   expomicset,   exposure_impute_method = \"median\",   exposure_cols = NULL,   omics_impute_method = NULL,   omics_to_impute = NULL )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"expomicset MultiAssayExperiment object containing exposures omics data. exposure_impute_method Character. Imputation method use exposure variables. Defaults \"median\". exposure_cols Character vector. Names columns colData impute. NULL, numeric columns used. omics_impute_method Character. Imputation method use omics data. Defaults \"knn\". omics_to_impute Character vector. Names omics datasets impute. NULL, omics datasets included.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"MultiAssayExperiment object imputed exposure /omics data.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"exposures, numeric columns colData imputed using selected method. omics data, assays selected imputed individually. Supported imputation methods include: \"median\": Median imputation using naniar::impute_median_all \"mean\": Mean imputation using naniar::impute_mean_all \"knn\": k-nearest neighbor imputation using impute::impute.knn \"mice\": Multiple imputation using chained equations (mice::mice) \"dep\": MinProb imputation proteomics using DEP::impute \"missforest\": Random forest-based imputation using missForest::missForest \"lod_sqrt2\": Substitution missing values LOD/sqrt(2), LOD smallest non-zero value per variable","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_impute_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Missing Exposure and Omics Data in a MultiAssayExperiment — run_impute_missing","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Introduce some missingness MultiAssayExperiment::colData(mae)$exposure_pm25[sample(1:20, 5)] <- NA  # Filter features and exposures with high missingness mae <- run_impute_missing(     expomicset = mae,     exposure_impute_method = \"median\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multi-Omics Integration — run_multiomics_integration","title":"Run Multi-Omics Integration — run_multiomics_integration","text":"Performs multi-omics integration using one several available methods: MOFA, MCIA, RGCCA, DIABLO. function takes MultiAssayExperiment object two assays computes shared latent factors across omics layers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multi-Omics Integration — run_multiomics_integration","text":"","code":"run_multiomics_integration(   expomicset,   method = \"MCIA\",   n_factors = 10,   scale = TRUE,   outcome = NULL,   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multi-Omics Integration — run_multiomics_integration","text":"expomicset MultiAssayExperiment object least two assays. method Character. Integration method use. Options \"MOFA\", \"MCIA\", \"RGCCA\", \"DIABLO\". n_factors Integer. Number latent factors/components compute. Default 10. scale Logical. Whether scale assay integration. Default TRUE. outcome Character. Required method = \"DIABLO\". Name outcome variable colData used supervised integration. action Character. Whether \"add\" results metadata \"get\" list. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multi-Omics Integration — run_multiomics_integration","text":"action = \"add\", returns MultiAssayExperiment integration results stored metadata(expomicset)$multiomics_integration$integration_results. action = \"get\", returns list integration method result.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Multi-Omics Integration — run_multiomics_integration","text":"\"MOFA\" runs Multi-Omics Factor Analysis using MOFA2 package returns trained model. \"MCIA\" runs multi-co-inertia analysis using nipalsMCIA package. \"RGCCA\" runs Regularized Generalized Canonical Correlation Analysis using RGCCA package. \"DIABLO\" performs supervised integration using mixOmics package specified outcome.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_multiomics_integration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Multi-Omics Integration — run_multiomics_integration","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # perform multiomics integration mae <- run_multiomics_integration(     mae,     method = \"MCIA\",     n_factors = 3 ) #> Scaling each assay in MultiAssayExperiment. #> Running multi-omics integration using MCIA... #> Applying MCIA with `nipalsMCIA` #> Performing column-level pre-processing... #> Column pre-processing completed. #> Performing block-level preprocessing... #> Block pre-processing completed. #> Computing order 1 scores #> Computing order 2 scores #> Computing order 3 scores"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Normality of Exposure Variables — run_normality_check","title":"Assess Normality of Exposure Variables — run_normality_check","text":"Performs Shapiro-Wilk tests check normality numeric exposure variables colData MultiAssayExperiment object.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Normality of Exposure Variables — run_normality_check","text":"","code":"run_normality_check(expomicset, action = \"add\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Normality of Exposure Variables — run_normality_check","text":"expomicset MultiAssayExperiment object containing exposure data colData. action character string specifying whether store (\"add\") return (\"get\") results. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess Normality of Exposure Variables — run_normality_check","text":"MultiAssayExperiment object normality results added metadata (action = \"add\") list : norm_df data frame Shapiro-Wilk test results exposure variable. norm_plot ggplot object showing distribution normal non-normal exposures.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess Normality of Exposure Variables — run_normality_check","text":"function: Extracts numeric, non-constant exposure variables colData. Runs Shapiro-Wilk tests assess normality. Summarizes number normally non-normally distributed exposures. Generates bar plot visualizing normality results. Output Handling: \"add\": Stores results metadata(expomicset)$normality. \"get\": Returns list containing normality test results plot.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_normality_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess Normality of Exposure Variables — run_normality_check","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Test for normality mae <- mae |>     run_normality_check() |>     transform_exposure(exposure_cols = c(\"age\", \"bmi\", \"exposure_pm25\")) #> Checking Normality Using Shapiro-Wilk Test #> 3 Exposure Variables are Normally Distributed #> 1 Exposure Variables are NOT Normally Distributed #> Applying the boxcox_best transformation."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Principal Component Analysis (PCA) — run_pca","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"Runs PCA feature sample spaces MultiAssayExperiment object, identifying outliers based Mahalanobis distance.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"","code":"run_pca(   expomicset,   log_trans_exp = FALSE,   log_trans_omics = TRUE,   action = \"add\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"expomicset MultiAssayExperiment object containing omics exposure data. log_trans_exp boolean value specifying whether log2 transform exposure data log_trans_omics boolean value specifying whether log2 transform omics data action character string specifying whether store (\"add\") return (\"get\") results. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"MultiAssayExperiment object PCA results added metadata (action = \"add\") list : pca_df tibble transformed input data. pca_feature prcomp object containing PCA results features. pca_sample prcomp object containing PCA results samples. outliers character vector detected sample outliers.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"function: Identifies common samples across assays exposure data. Performs PCA features (transformed standardized). Performs PCA samples computes Mahalanobis distance detect outliers. Output Handling: \"add\": Stores results metadata(expomicset)$pca updates colData PCs. \"get\": Returns list containing PCA results.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Principal Component Analysis (PCA) — run_pca","text":"","code":"# create example data mae <- make_example_data(     n_samples = 10,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # run pca mae <- mae |>     run_pca() #> Identifying common samples. #> Subsetting exposure data. #> Subsetting omics data. #> Performing PCA on Feature Space. #> Performing PCA on Sample Space. #> No outliers detected."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"function prints visualizes analysis steps stored metadata MultiAssayExperiment object. steps optionally printed console numbered list can rendered left--right Mermaid flowchart. flowchart connects steps arrows includes step notes requested.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"","code":"run_pipeline_summary(   expomicset,   show_index = TRUE,   console_print = TRUE,   diagram_print = FALSE,   include_notes = TRUE )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"expomicset MultiAssayExperiment object contains \"summary\" entry metadata, includes list named steps. show_index Logical, default TRUE. TRUE, prefixes step index. console_print Logical, default TRUE. TRUE, prints step list console. diagram_print Logical, default FALSE. TRUE, renders Mermaid diagram steps. include_notes Logical, default TRUE. TRUE, appends \"notes\" associated step label.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"return value. function called side effects: console output /diagram rendering.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"Mermaid flowchart rendered left--right connects step sequence. node labeled using step name , optionally, attached notes.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_pipeline_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize and Visualize Analysis Pipeline Steps — run_pipeline_summary","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Test for normality mae <- mae |>     run_normality_check() |>     transform_exposure(exposure_cols = c(\"age\", \"bmi\", \"exposure_pm25\")) #> Checking Normality Using Shapiro-Wilk Test #> 4 Exposure Variables are Normally Distributed #> 0 Exposure Variables are NOT Normally Distributed #> Applying the boxcox_best transformation.  # Run the pipeline summary run_pipeline_summary(mae) #> 1. run_normality_check - Assessed normality of 4 numeric exposure variables. 4 were normally distributed (p > 0.05), 0 were not.2. transform_exposure - Applied 'boxcox_best' transformation to 3 exposure variables. 3 passed normality (Shapiro-Wilk p > 0.05, 100%)."},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","title":"Run Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"Performs sensitivity analysis systematically varying statistical methods, scaling strategies, model formulas (optional bootstrap sampling) assess stability differentially abundant features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"","code":"run_sensitivity_analysis(   expomicset,   base_formula,   abundance_col = \"counts\",   methods = c(\"limma_trend\", \"limma_voom\", \"DESeq2\", \"edgeR_quasi_likelihood\"),   scaling_methods = c(\"none\", \"TMM\", \"quantile\"),   contrasts = NULL,   covariates_to_remove = NULL,   pval_col = \"adj.P.Val\",   logfc_col = \"logFC\",   pval_threshold = 0.05,   logFC_threshold = log2(1),   score_thresh = NULL,   score_quantile = 0.9,   stability_metric = \"stability_score\",   action = \"add\",   bootstrap_n = 1 )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"expomicset MultiAssayExperiment containing assays analyze. base_formula base model formula used differential analysis. abundance_col Character. Name column assays representing abundance. Default \"counts\". methods Character vector differential expression methods. Options include \"limma_trend\" ,\"limma_voom\", \"DESeq2\", \"edgeR_quasi_likelihood\". scaling_methods Character vector normalization methods try. Options include \"none\", \"TMM\", \"quantile\". contrasts Optional list contrasts apply differential testing. covariates_to_remove Optional character vector covariates remove base formula generate model variants. pval_col Name column containing p-values adjusted p-values used define significance. logfc_col Name column containing log fold changes. pval_threshold Numeric threshold significance. Default 0.05. logFC_threshold Numeric threshold absolute log fold change. Default log2(1) (.e., 0). score_thresh Optional threshold selected stability metric. provided, calculated using score_quantile. score_quantile Quantile used define threshold score_thresh provided. Default 0.9. stability_metric Character. Name column feature_stability use scoring metric. Default \"stability_score\". action Whether \"add\" results metadata() \"get\" list. Default \"add\". bootstrap_n Integer. Number bootstrap iterations. 0, resampling performed. Default 1.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"action = \"add\", returns MultiAssayExperiment results stored metadata(expomicset)$differential_analysis$sensitivity_analysis. action = \"get\", returns list three elements: sensitivity_df Data frame differential results across model/method combinations. feature_stability Data frame summarizing feature stability scores. score_thresh threshold used define stable features.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_sensitivity_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Sensitivity Analysis for Differential Abundance — run_sensitivity_analysis","text":"","code":"# create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.   # Run differential abundance mae <- run_differential_abundance(     expomicset = mae,     formula = ~ smoker + sex,     abundance_col = \"counts\",     method = \"limma_voom\",     action = \"add\" ) #> Running differential abundance testing. #> Processing assay: mRNA #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Processing assay: proteomics #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Differential abundance testing completed.  # Run the sensitivity analysis mae <- run_sensitivity_analysis(     expomicset = mae,     base_formula = ~ smoker + sex,     methods = c(\"limma_voom\"),     scaling_methods = c(\"none\"),     covariates_to_remove = \"sex\",     pval_col = \"P.Value\",     logfc_col = \"logFC\",     pval_threshold = 0.05,     logFC_threshold = 0,     bootstrap_n = 3,     action = \"add\" ) #> Running bootstrap iteration 1 of 3 #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Running bootstrap iteration 2 of 3 #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Running bootstrap iteration 3 of 3 #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> No group or design set. Assuming all samples belong to one group. #> tidybulk says: The design column names are \"(Intercept), smokeryes, sexM\" #> tidybulk says: to access the raw results (fitted GLM) do `attr(..., \"internals\")$limma_voom` #> Computing feature stability across sensitivity conditions. #> Feature stability analysis completed. #> Number Of Features Above Threshold Of 0.38: #> ---------------------------------------- #> mRNA: 3/128 #> proteomics: 0/80"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Exposure Variables — run_summarize_exposures","title":"Summarize Exposure Variables — run_summarize_exposures","text":"Computes summary statistics numeric exposure variables optionally stores results MultiAssayExperiment metadata.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Exposure Variables — run_summarize_exposures","text":"","code":"run_summarize_exposures(expomicset, exposure_cols = NULL, action = \"add\")"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Exposure Variables — run_summarize_exposures","text":"expomicset MultiAssayExperiment object containing exposure data sample metadata. exposure_cols character vector exposure variable names summarize. NULL, numeric exposure variables included. action string specifying action take. Use \"add\" attach summary table metadata(expomicset) \"get\" return summary table directly. Default \"add\".","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Exposure Variables — run_summarize_exposures","text":"modified MultiAssayExperiment object (action = \"add\"), data frame summary statistics (action = \"get\").","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Exposure Variables — run_summarize_exposures","text":"function: Extracts sample-level exposure data using pivot_sample(). Filters user-specified exposures (exposure_cols) provided. Computes descriptive statistics numeric variable: Number values (n_values) Number NAs (n_na) Minimum, maximum, range Sum, median, mean Standard error mean 95% confidence interval mean Variance, standard deviation Coefficient variation (sd / mean) Merges result variable metadata stored metadata(expomicset)$codebook.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/run_summarize_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Exposure Variables — run_summarize_exposures","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Summarize exposure data exp_sum <- mae |>     run_summarize_exposures(         exposure_cols = c(\"age\", \"bmi\", \"exposure_pm25\"),         action = \"get\"     )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Exposure Variables for Normality — transform_exposure","title":"Transform Exposure Variables for Normality — transform_exposure","text":"Applies transformation selected numeric exposure variables colData MultiAssayExperiment improve normality (e.g., log, Box-Cox, sqrt). Transformation results normality statistics stored metadata tracking.","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Exposure Variables for Normality — transform_exposure","text":"","code":"transform_exposure(   expomicset,   exposure_cols = NULL,   transform_method = \"boxcox_best\" )"},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Exposure Variables for Normality — transform_exposure","text":"expomicset MultiAssayExperiment object containing exposure variables colData. exposure_cols Optional character vector exposure variable names transform. NULL, uses exposures found metadata(expomicset)$quality_control$normality$norm_df$exposure. transform_method Character. Transformation method apply. Options: \"none\": transformation \"log2\": log base 2 transformation \"x_1_3\": cube-root transformation \"sqrt\": square-root transformation \"boxcox_best\": data-driven Box-Cox approximation heuristic labeling","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Exposure Variables for Normality — transform_exposure","text":"MultiAssayExperiment object transformed exposures colData, transformation details stored : metadata(expomicset)$quality_control$transformation$norm_df: Shapiro-Wilk test results metadata(expomicset)$quality_control$transformation$norm_summary: Summary normality metadata(expomicset)$codebook: Updated transformation info per variable metadata(expomicset)$summary$steps: Updated step record","code":""},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Exposure Variables for Normality — transform_exposure","text":"transform_method = \"boxcox_best\", function automatically shifts values strictly positive chooses discrete set transformations (e.g., 1/x, log(x), x^2) based estimated Box-Cox lambda. variable may receive different transformation.","code":""},{"path":[]},{"path":"https://BioNomad.github.io/tidyexposomics/reference/transform_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Exposure Variables for Normality — transform_exposure","text":"","code":"# Create example data mae <- make_example_data(     n_samples = 20,     return_mae = TRUE ) #> Ensuring all omics datasets are matrices with column names. #> Creating SummarizedExperiment objects. #> Creating MultiAssayExperiment object. #> MultiAssayExperiment created successfully.  # Test for normality mae <- mae |>     run_normality_check() |>     transform_exposure(         exposure_cols = c(\"age\", \"bmi\", \"exposure_pm25\"),         transform_method = \"boxcox_best\"     ) #> Checking Normality Using Shapiro-Wilk Test #> 2 Exposure Variables are Normally Distributed #> 2 Exposure Variables are NOT Normally Distributed #> Applying the boxcox_best transformation."},{"path":"https://BioNomad.github.io/tidyexposomics/news/index.html","id":"tidyexposomics-0990","dir":"Changelog","previous_headings":"","what":"tidyexposomics 0.99.0","title":"tidyexposomics 0.99.0","text":"Initial Bioconductor submission. Quality control Association analysis Differential abundance analysis Multi-omics integration analysis Functional enrichment analysis Vizualization","code":""}]
