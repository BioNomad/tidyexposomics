% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_impute_missing.R
\name{run_impute_missing}
\alias{run_impute_missing}
\title{Impute Missing Values in Exposure and Omics Data}
\usage{
run_impute_missing(
  expomicset,
  exposure_impute_method = "median",
  omics_impute_method = "knn"
)
}
\arguments{
\item{expomicset}{A \code{MultiAssayExperiment} object containing omics and exposure data.}

\item{exposure_impute_method}{A character string specifying the imputation method for exposure data. Options: \code{"median"}, \code{"mean"}. Default is \code{"median"}.}

\item{omics_impute_method}{A character string specifying the imputation method for omics data. Options: \code{"knn"}, \code{"mice"}, \code{"median"}, \code{"mean"}, \code{"dep"}, \code{"missforest"}. Default is \code{"knn"}.}
}
\value{
A \code{MultiAssayExperiment} object with imputed missing values in exposure and omics data.
}
\description{
Imputes missing values in the \code{colData} (exposures) and \code{assays} (omics data) of a \code{MultiAssayExperiment} object.
}
\details{
This function:
\itemize{
\item Identifies datasets with missing values using \code{metadata(expomicset)$na_qc}.
\item Imputes missing exposure data using \code{naniar::impute_median_all()} (default) or \code{naniar::impute_mean_all()}.
\item Imputes missing omics data based on \code{omics_impute_method}:
\itemize{
\item \code{"knn"}: Uses \code{impute::impute.knn()}.
\item \code{"mice"}: Uses \code{mice::mice()} with predictive mean matching.
\item \code{"median"} / \code{"mean"}: Uses \code{naniar::impute_median_all()} / \code{naniar::impute_mean_all()}.
\item \code{"dep"}: Uses \code{DEP::impute()} with \code{"MinProb"}, \code{q = 0.01} (for proteomics data).
\item \code{"missforest"}: Uses \code{missForest::missForest()}.
}
\item Updates \code{colData(expomicset)} and \code{assays(expomicset)} with imputed values.
}
}
\examples{
\dontrun{
expom <- run_impute_missing(
  expomicset = expom,
  exposure_impute_method = "median",
  omics_impute_method = "knn"
)
}

}
