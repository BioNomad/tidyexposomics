% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_go_group_exposures.R
\name{plot_go_group_exposures}
\alias{plot_go_group_exposures}
\title{Plot Exposures Associated with Features in GO Groups}
\usage{
plot_go_group_exposures(
  expomicset,
  go_groups,
  geneset = "deg_exp_cor",
  feature_col = "feature",
  top_n = 15
)
}
\arguments{
\item{expomicset}{A \code{MultiAssayExperiment} object containing functional enrichment and exposure-feature correlation results.}

\item{go_groups}{A character vector specifying GO groups of interest. Use \code{"all"} to include all GO groups.}

\item{geneset}{A character string indicating the gene set to use. Options are \code{"deg_exp_cor"} for DEGs or \code{"factor_exp_cor"} for factors. Default is \code{"deg_exp_cor"}.}

\item{feature_col}{A character string specifying the feature column to match with correlated features. Default is \code{"feature"}.}

\item{top_n}{An integer specifying the number of top exposures to display per experimental assay. Default is \code{15}.}
}
\value{
A \code{ggplot} object displaying the top exposures associated with features in GO groups.
}
\description{
Visualizes exposures that are significantly associated with features in specified Gene Ontology (GO) groups.
}
\details{
This function identifies exposures significantly correlated with features within specified GO groups.
It extracts functional enrichment results from \code{metadata(expomicset)$functional_enrichment} and
cross-references them with exposure-feature correlation results:
\itemize{
\item \code{"deg_exp_cor"}: Uses \code{metadata(expomicset)$omics_exposure_deg_correlation}
\item \code{"factor_exp_cor"}: Uses \code{metadata(expomicset)$omics_exposure_factor_correlation}
}

The resulting plot:
\itemize{
\item Displays exposures grouped by experimental assay (\code{exp_name}).
\item Uses bar heights to indicate the number of associated features.
\item Colors bars based on exposure categories.
}
}
\examples{
\dontrun{
plot_go_group_exposures(expom, go_groups = c("GO:0006355", "GO:0045893"))
}

}
